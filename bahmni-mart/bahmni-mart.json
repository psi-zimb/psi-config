{
  "jobs": [
    {
      "name": "Programs",
      "type": "programs",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Patients",
      "type": "patients",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Appointments",
      "type": "appointments",
      "chunkSizeToRead": "500",
      "groupedJobConfigs": [
        {
          "tableName": "appointment_service_default",
          "columnsToIgnore": [
          ]
        }
      ]
    },
    {
      "name": "Bed Management",
      "type": "bedManagement",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Location",
      "type": "location",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Operation Theater",
      "type": "operationTheater",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Person",
      "type": "person",
      "chunkSizeToRead": "500",
      "groupedJobConfigs": [
        {
          "tableName": "person_attributes",
          "columnsToIgnore": [
            "primaryContact",
            "secondaryContact",
            "primaryRelative",
            "familyNameLocal",
            "givenNameLocal",
            "middleNameLocal"
          ]
        },
        {
          "tableName": "person_details_default",
          "columnsToIgnore": [
            "prefix",
            "given_name",
            "middle_name",
            "family_name_prefix",
            "family_name",
            "family_name2",
            "family_name_suffix"
          ]
        }
      ]
    },
    {
      "name": "Provider",
      "type": "provider",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Visits And Encounters",
      "type": "visitsAndEncounters",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Medication And Orders",
      "type": "medicationAndOrders",
      "chunkSizeToRead": "500",
      "groupedJobConfigs": [
        {
          "tableName": "medication_data_default",
          "columnsToIgnore": [
            "instructions",
            "stop_notes"
          ]
        }
      ]
    },
    {
      "name": "Diagnoses And Conditions",
      "type": "diagnosesAndConditions",
      "chunkSizeToRead": "500"
    },
    {
      "name": "Bacteriology Data",
      "conceptReferenceSource": "",
      "type": "bacteriology",
      "incrementalUpdateConfig": {
        "updateOn": "encounter_id",
        "eventCategory": "Encounter",
        "openmrsTableName": "encounter"
      }
    },
    {
      "name": "MetaData Dictionary",
      "type": "metadata",
      "conceptReferenceSource": ""
    },
    {
      "name": "Obs Data",
      "type": "obs",
      "incrementalUpdateConfig": {
        "updateOn": "encounter_id",
        "eventCategory": "Encounter",
        "openmrsTableName": "encounter"
      },
      "separateTableConfig": {
        "enableForAddMoreAndMultiSelect": false,
        "separateTables": [
        ]
      },
      "conceptReferenceSource": "",
      "ignoreAllFreeTextConcepts": false,
      "columnsToIgnore": [
        "Image"
      ]
    },
    {
      "name": "Registration Second Page",
      "type": "reg",
      "columnsToIgnore": [],
      "separateTableConfig": {
        "enableForAddMoreAndMultiSelect": true,
        "separateTables": []
      },
      "incrementalUpdateConfig": {
        "updateOn": "encounter_id",
        "eventCategory": "Encounter",
        "openmrsTableName": "encounter"
      }
    },
    {
      "name": "Disposition Data",
      "type": "disposition",
      "columnsToIgnore": [],
      "incrementalUpdateConfig": {
        "updateOn": "encounter_id",
        "eventCategory": "Encounter",
        "openmrsTableName": "encounter"
      }
    },
    {
      "name": "patient_encounter_table_creation",
      "type": "customSql",
      "readerSql": "Select e.*,concat(pName.given_name,' ',pName.family_name) as 'counsellorCode'  from encounter e
                    inner join encounter_provider eProvider
                    on e.encounter_id = eProvider.encounter_id
                    Inner Join provider p
                    on p.provider_id = eProvider.provider_id
                    Inner Join person_name pName
                    on pName.person_id = p.person_id",
      "tableName": "patient_encounter_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
      },
    {
      "name": "PSI Patient program data",
      "type": "customSql",
      "readerSql": "SELECT  pp.patient_id, pp.program_id, pp.patient_program_id, pp.date_enrolled,
                            FORMAT((DATEDIFF(pp.date_enrolled, p.birthdate) / 365), 0) AS \"age_during_enrollment\",
                            pp.date_completed, FORMAT((DATEDIFF(pp.date_completed, p.birthdate) / 365), 0)
                            AS \"age_during_completion\", pp.location_id, l.name AS \"location_name\",
                            cn_outcome.concept_full_name AS \"program_outcome\", pp.creator AS \"creator_id\",
                            creator_details.name AS \"creator_name\", pp.date_created, pp.date_changed,
                            pp.changed_by AS \"changed_by_id\", changer_details.name AS \"changed_by_name\"
                            FROM patient_program pp INNER JOIN person p ON p.person_id = pp.patient_id
                            INNER JOIN (SELECT users.user_id, concat_ws(' ', ifnull(pn.given_name, ''), ifnull(pn.family_name, ''))
                            AS name FROM users INNER JOIN person_name pn ON users.person_id = pn.person_id) creator_details ON creator_details.user_id = pp.creator
                            LEFT OUTER JOIN (SELECT users.user_id, concat_ws(' ', ifnull(pn.given_name, ''), ifnull(pn.family_name, '')) AS name FROM users INNER JOIN person_name pn ON users.person_id = pn.person_id)
                            changer_details ON changer_details.user_id = pp.changed_by
                            LEFT OUTER JOIN concept_view cn_outcome ON cn_outcome.concept_id = pp.outcome_concept_id AND cn_outcome.retired = FALSE
                            LEFT OUTER JOIN location l ON l.location_id = pp.location_id AND l.retired = FALSE where pp.voided = 0",
      "tableName": "psi_patient_program_data",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
      "name": "patient_registration_second_page_creation",
      "type": "customSql",
      "readerSql": "select obsRegSecondPage.obs_id,
                           obsRegSecondPage.encounter_id,
                           obsRegSecondPage.obs_datetime,
                           obsRegSecondPage.person_id as 'patient_id',
                           cv1.concept_full_name as 'reason_for_visit',
                           obsRegSecondPage.date_created
                            from obs obsRegSecondPage
                    join concept_view cv on obsRegSecondPage.concept_id = cv.concept_id
                    join concept_view cv1 on obsRegSecondPage.value_coded = cv1.concept_id
                    where cv.concept_full_name IN (\"Reason for visit\")
      and cv.retired = 0
      and obsRegSecondPage.voided = 0",
      "tableName": "patient_registration_second_page",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
      },
    {
      "name": "FPS_instance_table_creation",
      "type": "customSql",
      "readerSql": "select
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
                    GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
                    (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
                    then \"Fixed\"
                    ELSE
                    (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
                    end) as \"Channel Type\",
                    piUIC.identifier as \"UIC\",
                    per.gender as \"Gender\",
                    per.birthdate as \"Date of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Telephone' Then pac.value else null end)) as \"Patient telephone Number\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nationality' then cv.concept_full_name else null end)) as \"Nationality\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'education' then cv.concept_full_name else null end)) as \"Education\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ethnicity' then cv.concept_full_name else null end)) as \"Ethnicity\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'District of Birth' then cv.concept_full_name else null end)) as \"District of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Contact Name' Then pac.value else null end)) as \"Next-of-kin Contact Name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Address' Then pac.value else null end)) as \"Next-of-kin Address\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Telephone Number' Then pac.value else null end)) as \"Next-of-kin Telephone Number\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Population' then cv.concept_full_name else null end)) as \"Population\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Referral source' then cv.concept_full_name else null end)) as \"Referred by\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Contact Tracing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Contact Tracing\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Index Client Code' Then pac.value else null end)) as \"Index Client Code\",
                    CAST(GROUP_CONCAT(DISTINCT (case when pat1.name = 'Date index client tested' Then pac.value else null end)) AS DATE) as \"Date index client tested\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Moonlight Testing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Moonlight Testing\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Dreams Activity' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Dreams Activity\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nearest Clinic/Hospital' Then pac.value else null end)) as \"Nearest Clinic/Hospital\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Have you ever been tested for HIV' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Have you ever been tested for HIV\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'If yes for ever been tested for HIV, Result?' then cv.concept_full_name else null end)) as \"If yes for ever been tested for HIV, Result?\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ever been tested in the last twelve months' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Ever been tested in the last twelve months\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Couple testing ?' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Couple testing ?\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'If couple testing yes,capture the registration no.' Then pac.value else null end)) as \"If couple testing yes,capture the registration no.\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    personInstanceDateChanged.dateChanged as \"date_created\",
                    pi.identifier as \"Patient_Identifier\"
                    from patient_identifier pi
                    inner join person per on pi.patient_id = per.person_id
                    and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
                    inner join patient pat on pi.patient_id = pat.patient_id
                    Inner Join (/*To get the max changed date for a person instance*/
                                    Select
                                        pid as person_id,
                                        max(DateChanged) as dateChanged
                                    from (
                                        /*Person name max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
                                        Union All
                                        /*Person max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
                                        Union All
                                        /*Person identifier max date created*/
                                        Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
                                        Union All
                                        /*Person address max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
                                        Union All
                                        /*Person attribute max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
                                    ) as personInstanceDateChanged
                                     group by pid
                                ) as personInstanceDateChanged
                    On personInstanceDateChanged.person_id = pat.patient_id
                    inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
                    inner join person_address perAdd on pi.patient_id = perAdd.person_id
                    LEFT JOIN (/*Patient id along with the site type value*/
                                Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt
                                inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
                                where  perAtttype.name = 'Site Type'
                                and perAtt.voided=0
                              ) as patientSitetype
                    on patientSitetype.person_id = pi.patient_id
                    LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
                    LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
                    LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
                    and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
                    inner join
                    (Select
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='FPS Form, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='FPS Form,Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='FPS, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                    where pi.patient_id in ( /*Filtering the FPS Program patients using Program name*/
                                                Select patient_id from patient_program pp where program_id in (
                                                    Select program_id from
                                                    program
                                                    where name ='FPS Program'
                                                    and retired=0
                                                )
                                                and voided = 0
                                          )
                   group by pi.patient_id",
      "tableName": "fps_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
      "name": "FPS_program_table_creation",
      "type": "customSql",
      "readerSql":  "Select
                    pi.identifier as \"Patient_Identifier\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    'vatFxlZR2lj' as program,
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"enrollment_date\",
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"incident_date\",
                    min(pp.date_created) as \"date_created\",
                    min(pp.patient_program_id) as \"program_unique_id\",
                    CASE WHEN pp.voided = 0 AND pp.date_completed IS NOT NULL THEN 'COMPLETED' ELSE 'ACTIVE'
                    END as status
                        from patient_program pp /*patient_program for the patients enrolled in FPS Program*/
                        Inner Join patient_identifier pi on pp.patient_id = pi.patient_id
                    and pi.identifier_type in (
                                        select patient_identifier_type_id
                                        from patient_identifier_type
                                        where name = 'Patient Identifier'
                                        and retired=0
                                              )
                  inner join
                    (Select
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='FPS Form, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='FPS Form,Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='FPS, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                      where pp.program_id in (
                        Select program_id from
                        program
                        where name ='FPS Program'
                        and retired=0
                                             )
                and pp.voided=0
                group by pp.patient_id",
      "tableName": "fps_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
  {
    "name": "HTS_instance_table_creation",
      "type": "customSql",
      "readerSql": "select
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
                    GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
                    (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
                    then \"Fixed\"
                    ELSE
                    (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
                    end) as \"Channel Type\",
                    piUIC.identifier as \"UIC\",
                    per.gender as \"Gender\",
                    per.birthdate as \"Date of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Telephone' Then pac.value else null end)) as \"Patient telephone Number\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nationality' then cv.concept_full_name else null end)) as \"Nationality\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'education' then cv.concept_full_name else null end)) as \"Education\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ethnicity' then cv.concept_full_name else null end)) as \"Ethnicity\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'District of Birth' then cv.concept_full_name else null end)) as \"District of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Contact Name' Then pac.value else null end)) as \"Next-of-kin Contact Name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Address' Then pac.value else null end)) as \"Next-of-kin Address\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Telephone Number' Then pac.value else null end)) as \"Next-of-kin Telephone Number\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Population' then cv.concept_full_name else null end)) as \"Population\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Referral source' then cv.concept_full_name else null end)) as \"Referred by\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Contact Tracing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Contact Tracing\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Index Client Code' Then pac.value else null end)) as \"Index Client Code\",
                    CAST(GROUP_CONCAT(DISTINCT (case when pat1.name = 'Date index client tested' Then pac.value else null end)) AS DATE) as \"Date index client tested\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Moonlight Testing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Moonlight Testing\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Dreams Activity' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Dreams Activity\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nearest Clinic/Hospital' Then pac.value else null end)) as \"Nearest Clinic/Hospital\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Have you ever been tested for HIV' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Have you ever been tested for HIV\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'If yes for ever been tested for HIV, Result?' then cv.concept_full_name else null end)) as \"If yes for ever been tested for HIV, Result?\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ever been tested in the last twelve months' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Ever been tested in the last twelve months\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Couple testing ?' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Couple testing ?\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'If couple testing yes,capture the registration no.' Then pac.value else null end)) as \"If couple testing yes,capture the registration no.\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    personInstanceDateChanged.dateChanged as \"date_created\",
                    pi.identifier as \"Patient_Identifier\"
                    from patient_identifier pi
                    inner join person per on pi.patient_id = per.person_id
                    and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
                    inner join patient pat on pi.patient_id = pat.patient_id
                    Inner Join (/*To get the max changed date for a person instance*/
                                    Select
                                        pid as person_id,
                                        max(DateChanged) as dateChanged
                                    from (
                                        /*Person name max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
                                        Union All
                                        /*Person max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
                                        Union All
                                        /*Person identifier max date created*/
                                        Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
                                        Union All
                                        /*Person address max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
                                        Union All
                                        /*Person attribute max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
                                    ) as personInstanceDateChanged
                                     group by pid
                                ) as personInstanceDateChanged
                    On personInstanceDateChanged.person_id = pat.patient_id
                    inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
                    inner join person_address perAdd on pi.patient_id = perAdd.person_id
                    LEFT JOIN (/*Patient id along with the site type value*/
                                Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt
                                inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
                                where  perAtttype.name = 'Site Type'
                                and perAtt.voided=0
                              ) as patientSitetype
                    on patientSitetype.person_id = pi.patient_id
                    LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
                    LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
                    LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
                    and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
                    inner join
                    (Select
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='PHTC, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='PHTC, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='PHTC, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                    where pi.patient_id in ( /*Filtering the HTS Program patients using Program name*/
                                                Select patient_id from patient_program pp where program_id in (
                                                    Select program_id from
                                                    program
                                                    where name ='HTS Program'
                                                    and retired=0
                                                )
                                                and voided = 0
                                          )
                   group by pi.patient_id",
      "tableName": "hts_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
      "name": "HTS_program_table_creation",
      "type": "customSql",
      "readerSql":  "Select
                    pi.identifier as \"Patient_Identifier\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    'vatFxlZR2lj' as program,
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"enrollment_date\",
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"incident_date\",
                    min(pp.date_created) as \"date_created\",
                    min(pp.patient_program_id) as \"program_unique_id\",
                    CASE WHEN pp.voided = 0 AND pp.date_completed IS NOT NULL THEN 'COMPLETED' ELSE 'ACTIVE' END as status
                        from patient_program pp /*patient_program for the patients enrolled in HTS Program*/
                        Inner Join patient_identifier pi on pp.patient_id = pi.patient_id
                    and pi.identifier_type in (
                                        select patient_identifier_type_id
                                        from patient_identifier_type
                                        where name = 'Patient Identifier'
                                        and retired=0
                                              )
                  inner join
                    (Select
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='PHTC, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='PHTC, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='PHTC, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                      where pp.program_id in (
                        Select program_id from
                        program
                        where name ='HTS Program'
                        and retired=0
                                             )
                and pp.voided=0
                group by pp.patient_id",
      "tableName": "hts_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
    "name": "VIAC_instance_table_creation",
      "type": "customSql",
      "readerSql": "select
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
                    GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
                    (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
                    then \"Fixed\"
                    ELSE
                    (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
                    end) as \"Channel Type\",
                    piUIC.identifier as \"UIC\",
                    per.gender as \"Gender\",
                    per.birthdate as \"Date of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Telephone' Then pac.value else null end)) as \"Patient telephone Number\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nationality' then cv.concept_full_name else null end)) as \"Nationality\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'education' then cv.concept_full_name else null end)) as \"Education\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ethnicity' then cv.concept_full_name else null end)) as \"Ethnicity\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'District of Birth' then cv.concept_full_name else null end)) as \"District of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Contact Name' Then pac.value else null end)) as \"Next-of-kin Contact Name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Address' Then pac.value else null end)) as \"Next-of-kin Address\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Telephone Number' Then pac.value else null end)) as \"Next-of-kin Telephone Number\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Population' then cv.concept_full_name else null end)) as \"Population\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Referral source' then cv.concept_full_name else null end)) as \"Referred by\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Contact Tracing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Contact Tracing\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Index Client Code' Then pac.value else null end)) as \"Index Client Code\",
                    CAST(GROUP_CONCAT(DISTINCT (case when pat1.name = 'Date index client tested' Then pac.value else null end)) AS DATE) as \"Date index client tested\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Moonlight Testing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Moonlight Testing\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Dreams Activity' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Dreams Activity\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nearest Clinic/Hospital' Then pac.value else null end)) as \"Nearest Clinic/Hospital\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Have you ever been tested for HIV' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Have you ever been tested for HIV\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'If yes for ever been tested for HIV, Result?' then cv.concept_full_name else null end)) as \"If yes for ever been tested for HIV, Result?\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ever been tested in the last twelve months' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Ever been tested in the last twelve months\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Couple testing ?' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Couple testing ?\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'If couple testing yes,capture the registration no.' Then pac.value else null end)) as \"If couple testing yes,capture the registration no.\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    personInstanceDateChanged.dateChanged as \"date_created\",
                    pi.identifier as \"Patient_Identifier\"
                    from patient_identifier pi
                    inner join person per on pi.patient_id = per.person_id
                    and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
                    inner join patient pat on pi.patient_id = pat.patient_id
                    Inner Join (/*To get the max changed date for a person instance*/
                                    Select
                                        pid as person_id,
                                        max(DateChanged) as dateChanged
                                    from (
                                        /*Person name max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
                                        Union All
                                        /*Person max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
                                        Union All
                                        /*Person identifier max date created*/
                                        Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
                                        Union All
                                        /*Person address max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
                                        Union All
                                        /*Person attribute max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
                                    ) as personInstanceDateChanged
                                     group by pid
                                ) as personInstanceDateChanged
                    On personInstanceDateChanged.person_id = pat.patient_id
                    inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
                    inner join person_address perAdd on pi.patient_id = perAdd.person_id
                    LEFT JOIN (/*Patient id along with the site type value*/
                                Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt
                                inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
                                where  perAtttype.name = 'Site Type'
                                and perAtt.voided=0
                              ) as patientSitetype
                    on patientSitetype.person_id = pi.patient_id
                    LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
                    LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
                    LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
                    and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
                    inner join
                    (Select
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Viac Form, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Viac Form, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Viac Form, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                    where pi.patient_id in ( /*Filtering the VIAC Program patients using Program name*/
                                                Select patient_id from patient_program pp where program_id in (
                                                    Select program_id from
                                                    program
                                                    where name ='VIAC Program'
                                                    and retired=0
                                                )
                                                and voided = 0
                                          )
                   group by pi.patient_id",
      "tableName": "viac_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
    "name": "VIAC_program_table_creation",
      "type": "customSql",
      "readerSql":  "Select
                    pi.identifier as \"Patient_Identifier\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    'vatFxlZR2lj' as program,
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"enrollment_date\",
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"incident_date\",
                    min(pp.date_created) as \"date_created\",
                    min(pp.patient_program_id) as \"program_unique_id\",
                    CASE WHEN pp.voided = 0 AND pp.date_completed IS NOT NULL THEN 'COMPLETED' ELSE 'ACTIVE' END as status
                        from patient_program pp /*patient_program for the patients enrolled in VIAC Program*/
                        Inner Join patient_identifier pi on pp.patient_id = pi.patient_id
                    and pi.identifier_type in (
                                        select patient_identifier_type_id
                                        from patient_identifier_type
                                        where name = 'Patient Identifier'
                                        and retired=0
                                              )
                  inner join
                    (Select
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Viac Form, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Viac Form, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Viac Form, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                      where pp.program_id in (
                        Select program_id from
                        program
                        where name ='VIAC Program'
                        and retired=0
                                             )
                and pp.voided=0
                group by pp.patient_id",
      "tableName": "viac_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
        {
    "name": "ART_instance_table_creation",
      "type": "customSql",
      "readerSql": "select
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
                    GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
                    (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
                    then \"Fixed\"
                    ELSE
                    (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
                    end) as \"Channel Type\",
                    piUIC.identifier as \"UIC\",
                    per.gender as \"Gender\",
                    per.birthdate as \"Date of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Telephone' Then pac.value else null end)) as \"Patient telephone Number\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nationality' then cv.concept_full_name else null end)) as \"Nationality\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'education' then cv.concept_full_name else null end)) as \"Education\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ethnicity' then cv.concept_full_name else null end)) as \"Ethnicity\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'District of Birth' then cv.concept_full_name else null end)) as \"District of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Contact Name' Then pac.value else null end)) as \"Next-of-kin Contact Name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Address' Then pac.value else null end)) as \"Next-of-kin Address\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Telephone Number' Then pac.value else null end)) as \"Next-of-kin Telephone Number\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Population' then cv.concept_full_name else null end)) as \"Population\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Referral source' then cv.concept_full_name else null end)) as \"Referred by\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Contact Tracing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Contact Tracing\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Index Client Code' Then pac.value else null end)) as \"Index Client Code\",
                    CAST(GROUP_CONCAT(DISTINCT (case when pat1.name = 'Date index client tested' Then pac.value else null end)) AS DATE) as \"Date index client tested\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Moonlight Testing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Moonlight Testing\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Dreams Activity' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Dreams Activity\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nearest Clinic/Hospital' Then pac.value else null end)) as \"Nearest Clinic/Hospital\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Have you ever been tested for HIV' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Have you ever been tested for HIV\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'If yes for ever been tested for HIV, Result?' then cv.concept_full_name else null end)) as \"If yes for ever been tested for HIV, Result?\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ever been tested in the last twelve months' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Ever been tested in the last twelve months\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Couple testing ?' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Couple testing ?\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'If couple testing yes,capture the registration no.' Then pac.value else null end)) as \"If couple testing yes,capture the registration no.\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    personInstanceDateChanged.dateChanged as \"date_created\",
                    pi.identifier as \"Patient_Identifier\"
                    from patient_identifier pi
                    inner join person per on pi.patient_id = per.person_id
                    and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
                    inner join patient pat on pi.patient_id = pat.patient_id
                    Inner Join (/*To get the max changed date for a person instance*/
                                    Select
                                        pid as person_id,
                                        max(DateChanged) as dateChanged
                                    from (
                                        /*Person name max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
                                        Union All
                                        /*Person max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
                                        Union All
                                        /*Person identifier max date created*/
                                        Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
                                        Union All
                                        /*Person address max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
                                        Union All
                                        /*Person attribute max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
                                    ) as personInstanceDateChanged
                                     group by pid
                                ) as personInstanceDateChanged
                    On personInstanceDateChanged.person_id = pat.patient_id
                    inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
                    inner join person_address perAdd on pi.patient_id = perAdd.person_id
                    LEFT JOIN (/*Patient id along with the site type value*/
                                Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt
                                inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
                                where  perAtttype.name = 'Site Type'
                                and perAtt.voided=0
                              ) as patientSitetype
                    on patientSitetype.person_id = pi.patient_id
                    LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
                    LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
                    LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
                    and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
                    inner join
                    (Select
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='AIVC, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='AIVC, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='AIVC, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                    where pi.patient_id in ( /*Filtering the FPS Program patients using Program name*/
                                                Select patient_id from patient_program pp where program_id in (
                                                    Select program_id from
                                                    program
                                                    where name ='ART Program'
                                                    and retired=0
                                                )
                                                and voided = 0
                                          )
                   group by pi.patient_id",
      "tableName": "art_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
  {
    "name": "ART_program_table_creation",
      "type": "customSql",
      "readerSql":  "Select
                    pi.identifier as \"Patient_Identifier\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    'vatFxlZR2lj' as program,
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"enrollment_date\",
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"incident_date\",
                    min(pp.date_created) as \"date_created\",
                    min(pp.patient_program_id) as \"program_unique_id\",
                    CASE WHEN pp.voided = 0 AND pp.date_completed IS NOT NULL THEN 'COMPLETED' ELSE 'ACTIVE' END as status
                        from patient_program pp /*patient_program for the patients enrolled in ART Program*/
                        Inner Join patient_identifier pi on pp.patient_id = pi.patient_id
                    and pi.identifier_type in (
                                        select patient_identifier_type_id
                                        from patient_identifier_type
                                        where name = 'Patient Identifier'
                                        and retired=0
                                              )
                  inner join
                    (Select
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='AIVC, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='AIVC, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='AIVC, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                      where pp.program_id in (
                        Select program_id from
                        program
                        where name ='ART Program'
                        and retired=0
                                             )
                and pp.voided=0
                group by pp.patient_id",
      "tableName": "art_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
  {
      "name": "PrEP_instance_table_creation",
      "type": "customSql",
      "readerSql": "select
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
                    GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
                    (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
                    then \"Fixed\"
                    ELSE
                    (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
                    end) as \"Channel Type\",
                    piUIC.identifier as \"UIC\",
                    per.gender as \"Gender\",
                    per.birthdate as \"Date of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Telephone' Then pac.value else null end)) as \"Patient telephone Number\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nationality' then cv.concept_full_name else null end)) as \"Nationality\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'education' then cv.concept_full_name else null end)) as \"Education\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ethnicity' then cv.concept_full_name else null end)) as \"Ethnicity\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'District of Birth' then cv.concept_full_name else null end)) as \"District of Birth\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Contact Name' Then pac.value else null end)) as \"Next-of-kin Contact Name\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Address' Then pac.value else null end)) as \"Next-of-kin Address\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Telephone Number' Then pac.value else null end)) as \"Next-of-kin Telephone Number\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Population' then cv.concept_full_name else null end)) as \"Population\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Referral source' then cv.concept_full_name else null end)) as \"Referred by\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Contact Tracing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Contact Tracing\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Index Client Code' Then pac.value else null end)) as \"Index Client Code\",
                    CAST(GROUP_CONCAT(DISTINCT (case when pat1.name = 'Date index client tested' Then pac.value else null end)) AS DATE) as \"Date index client tested\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Moonlight Testing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Moonlight Testing\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Dreams Activity' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Dreams Activity\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nearest Clinic/Hospital' Then pac.value else null end)) as \"Nearest Clinic/Hospital\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Have you ever been tested for HIV' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Have you ever been tested for HIV\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'If yes for ever been tested for HIV, Result?' then cv.concept_full_name else null end)) as \"If yes for ever been tested for HIV, Result?\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ever been tested in the last twelve months' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Ever been tested in the last twelve months\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'Couple testing ?' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Couple testing ?\",
                    GROUP_CONCAT(DISTINCT (case when pat1.name = 'If couple testing yes,capture the registration no.' Then pac.value else null end)) as \"If couple testing yes,capture the registration no.\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    personInstanceDateChanged.dateChanged as \"date_created\",
                    pi.identifier as \"Patient_Identifier\"
                    from patient_identifier pi
                    inner join person per on pi.patient_id = per.person_id
                    and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
                    inner join patient pat on pi.patient_id = pat.patient_id
                    Inner Join (/*To get the max changed date for a person instance*/
                                    Select
                                        pid as person_id,
                                        max(DateChanged) as dateChanged
                                    from (
                                        /*Person name max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
                                        Union All
                                        /*Person max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
                                        Union All
                                        /*Person identifier max date created*/
                                        Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
                                        Union All
                                        /*Person address max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
                                        Union All
                                        /*Person attribute max date created*/
                                        Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
                                    ) as personInstanceDateChanged
                                     group by pid
                                ) as personInstanceDateChanged
                    On personInstanceDateChanged.person_id = pat.patient_id
                    inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
                    inner join person_address perAdd on pi.patient_id = perAdd.person_id
                    LEFT JOIN (/*Patient id along with the site type value*/
                                Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt
                                inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
                                where  perAtttype.name = 'Site Type'
                                and perAtt.voided=0
                              ) as patientSitetype
                    on patientSitetype.person_id = pi.patient_id
                    LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
                    LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
                    LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
                    and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
                    inner join
                    (Select
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Prep Init Form, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Prep Init Form, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Prep Init Form, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                    where pi.patient_id in ( /*Filtering the PrEP Program patients using Program name*/
                                                Select patient_id from patient_program pp where program_id in (
                                                    Select program_id from
                                                    program
                                                    where name ='PrEP Program'
                                                    and retired=0
                                                )
                                                and voided = 0
                                          )
                   group by pi.patient_id",
      "tableName": "prep_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
{
    "name": "PrEP_program_table_creation",
      "type": "customSql",
      "readerSql":  "Select
                    pi.identifier as \"Patient_Identifier\",
                    case when OrgUnitLogic.sitetype = 'Outreach'
                    then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
                    ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
                    end as \"OrgUnit\",
                    'vatFxlZR2lj' as program,
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"enrollment_date\",
                    CAST(min(date(pp.date_enrolled)) AS DATE) as \"incident_date\",
                    min(pp.date_created) as \"date_created\",
                    min(pp.patient_program_id) as \"program_unique_id\",
                    CASE WHEN pp.voided = 0 AND pp.date_completed IS NOT NULL THEN 'COMPLETED' ELSE 'ACTIVE' END as status
                        from patient_program pp /*patient_program for the patients enrolled in PrEP Program*/
                        Inner Join patient_identifier pi on pp.patient_id = pi.patient_id
                    and pi.identifier_type in (
                                        select patient_identifier_type_id
                                        from patient_identifier_type
                                        where name = 'Patient Identifier'
                                        and retired=0
                                              )
                  inner join
                    (Select
            facilityObs.person_id,
            (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
            (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
            (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
            from obs facilityObs
            Inner Join
            (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
            where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Prep Init Form, Facility')
            and voided=0
            group by person_id) as facilityObsDateTimePerPerson
            on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
            And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
            And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
            and facilityObs.voided = 0
            Inner join obs siteTypeObs
            on siteTypeObs.encounter_id = facilityObs.encounter_id
            and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Prep Init Form, Site Type')
            Left join obs districtObs
            on districtObs.encounter_id = siteTypeObs.encounter_id
            and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Prep Init Form, District')
          ) as OrgUnitLogic
            on OrgUnitLogic.person_id = pi.patient_id
                      where pp.program_id in (
                        Select program_id from
                        program
                        where name ='PrEP Program'
                        and retired=0
                                             )
                and pp.voided=0
                group by pp.patient_id",
      "tableName": "prep_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
    "name": "NCD_instance_table_creation",
      "type": "customSql",
      "readerSql":  "select
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
      GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
      (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
      then \"Fixed\"
      ELSE
      (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
      end) as \"Channel Type\",
      piUIC.identifier as \"UIC\",
      per.gender as \"Gender\",
      per.birthdate as \"Date of Birth\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Telephone' Then pac.value else null end)) as \"Patient telephone Number\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nationality' then cv.concept_full_name else null end)) as \"Nationality\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'education' then cv.concept_full_name else null end)) as \"Education\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ethnicity' then cv.concept_full_name else null end)) as \"Ethnicity\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'District of Birth' then cv.concept_full_name else null end)) as \"District of Birth\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Contact Name' Then pac.value else null end)) as \"Next-of-kin Contact Name\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Address' Then pac.value else null end)) as \"Next-of-kin Address\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Telephone Number' Then pac.value else null end)) as \"Next-of-kin Telephone Number\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Population' then cv.concept_full_name else null end)) as \"Population\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Referral source' then cv.concept_full_name else null end)) as \"Referred by\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Contact Tracing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Contact Tracing\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Index Client Code' Then pac.value else null end)) as \"Index Client Code\",
      CAST(GROUP_CONCAT(DISTINCT (case when pat1.name = 'Date index client tested' Then pac.value else null end)) AS DATE) as \"Date index client tested\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Moonlight Testing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Moonlight Testing\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Dreams Activity' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Dreams Activity\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nearest Clinic/Hospital' Then pac.value else null end)) as \"Nearest Clinic/Hospital\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Have you ever been tested for HIV' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Have you ever been tested for HIV\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'If yes for ever been tested for HIV, Result?' then cv.concept_full_name else null end)) as \"If yes for ever been tested for HIV, Result?\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ever been tested in the last twelve months' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Ever been tested in the last twelve months\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Couple testing ?' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Couple testing ?\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'If couple testing yes,capture the registration no.' Then pac.value else null end)) as \"If couple testing yes,capture the registration no.\",
      case when OrgUnitLogic.sitetype = 'Outreach'
      then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
      ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
      end as \"OrgUnit\",
      personInstanceDateChanged.dateChanged as \"date_created\",
      pi.identifier as \"Patient_Identifier\"
      from patient_identifier pi
      inner join person per on pi.patient_id = per.person_id
      and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
      inner join patient pat on pi.patient_id = pat.patient_id
      Inner Join (/*To get the max changed date for a person instance*/
      Select
      pid as person_id,
      max(DateChanged) as dateChanged
      from (
      /*Person name max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
      Union All
      /*Person max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
      Union All
      /*Person identifier max date created*/
      Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
      Union All
      /*Person address max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
      Union All
      /*Person attribute max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
      ) as personInstanceDateChanged
      group by pid
      ) as personInstanceDateChanged
      On personInstanceDateChanged.person_id = pat.patient_id
      inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
      inner join person_address perAdd on pi.patient_id = perAdd.person_id
      LEFT JOIN (/*Patient id along with the site type value*/
      Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt
      inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
      where  perAtttype.name = 'Site Type'
      and perAtt.voided=0
      ) as patientSitetype
      on patientSitetype.person_id = pi.patient_id
      LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
      LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
      LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
      and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
      inner join
      (Select
      facilityObs.person_id,
      (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
      (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
      (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
      from obs facilityObs
      Inner Join
      (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
      where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='NCD Form, Facility')
      and voided=0
      group by person_id) as facilityObsDateTimePerPerson
      on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
      And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
      And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
      and facilityObs.voided = 0
      Inner join obs siteTypeObs
      on siteTypeObs.encounter_id = facilityObs.encounter_id
      and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='NCD Form, Site Type')
      Left join obs districtObs
      on districtObs.encounter_id = siteTypeObs.encounter_id
      and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='NCD Form, District')
      ) as OrgUnitLogic
      on OrgUnitLogic.person_id = pi.patient_id
      where pi.patient_id in ( /*Filtering if patient is enrolled in any FORM*/
      Select patient_id from patient_program pp where program_id in (
      Select program_id from
      program where retired=0
      )
      and voided = 0
      )
      group by pi.patient_id",
      "tableName": "ncd_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
    "name": "NCD_program_table_creation",
      "type": "customSql",
      "readerSql":  "SELECT pi.identifier                        AS \"Patient_Identifier\",
       CASE
           WHEN OrgUnitLogic.sitetype = 'Outreach' THEN
               Concat('ZWNSC-OU-', Upper(OrgUnitLogic.facility), '-', Upper(
                       OrgUnitLogic.district))
           ELSE Concat('ZWNSC-', Upper(OrgUnitLogic.facility))
           END                                  AS \"OrgUnit\",
       'vatFxlZR2lj'                        AS program,
       Cast(Date(pp.date_enrolled) AS DATE) AS \"enrollment_date\",
       Cast(Date(pp.date_enrolled) AS DATE) AS \"incident_date\",
       ( pp.date_created )                  AS \"date_created\",
       ( pp.patient_program_id )            AS \"program_unique_id\",
       CASE
           WHEN pp.voided = 0
               AND pp.date_completed IS NOT NULL THEN 'COMPLETED'
           ELSE 'ACTIVE'
           END                                  AS status
FROM   patient_program pp
           INNER JOIN patient_identifier pi
                      ON pp.patient_id = pi.patient_id
                          AND pi.identifier_type IN (SELECT patient_identifier_type_id
                                                     FROM   patient_identifier_type
                                                     WHERE  NAME = 'Patient Identifier'
                                                       AND retired = 0)
           INNER JOIN episode_patient_program epp
                      ON epp.patient_program_id = pp.patient_program_id
           INNER JOIN (select episode_id, min(encounter_id) as \"encounter_id\" from episode_encounter group by episode_id) as ee
                        ON epp.episode_id = ee.episode_id
           INNER JOIN (SELECT facilityObs.person_id,
                              facilityObs.encounter_id,
                              (SELECT concept_full_name
                               FROM   concept_view
                               WHERE  retired = 0
                                 AND concept_id = facilityObs.value_coded) AS
                                                                              facility
                               ,
                              (SELECT concept_full_name
                               FROM   concept_view
                               WHERE  retired = 0
                                 AND concept_id = siteTypeObs.value_coded) AS sitetype,
                              (SELECT concept_full_name
                               FROM   concept_view
                               WHERE  retired = 0
                                 AND concept_id = districtObs.value_coded) AS district
                       FROM   obs facilityObs
                                  INNER JOIN (SELECT concept_id,
                                                     person_id,
                                                     obs_datetime AS facilityObsDateTime
                                              FROM   obs
                                              WHERE  concept_id =
                                                     (SELECT concept_id
                                                      FROM   concept_view
                                                      WHERE  retired = 0
                                                        AND concept_full_name
                                                          =
                                                            'NCD Form, Facility')
                                                AND voided = 0) AS
                           facilityObsDateTimePerPerson
                                             ON facilityObsDateTimePerPerson.concept_id =
                                                facilityObs.concept_id
                                                 AND facilityObsDateTimePerPerson.person_id
                                                    =
                                                     facilityObs.person_id
                                                 AND
                                                facilityObsDateTimePerPerson.facilityobsdatetime =
                                                facilityObs.obs_datetime
                                                 AND facilityObs.voided = 0
                                  INNER JOIN obs siteTypeObs
                                             ON siteTypeObs.encounter_id =
                                                facilityObs.encounter_id
                                                 AND siteTypeObs.voided = 0
                                                 AND siteTypeObs.concept_id =
                                                     (SELECT concept_id
                                                      FROM   concept_view
                                                      WHERE  retired = 0
                                                        AND concept_full_name =
                                                            'NCD Form, Site Type')
                                  LEFT JOIN obs districtObs
                                            ON districtObs.encounter_id =
                                               siteTypeObs.encounter_id
                                                AND districtObs.voided = 0
                                                AND districtObs.concept_id =
                                                    (SELECT concept_id
                                                     FROM   concept_view
                                                     WHERE  retired = 0
                                                       AND concept_full_name =
                                                           'NCD Form, District')
) AS OrgUnitLogic
                      ON OrgUnitLogic.person_id = pi.patient_id
                          AND OrgUnitLogic.encounter_id = ee.encounter_id
WHERE  pp.program_id IN (SELECT program_id
                         FROM   program
                         WHERE  retired = 0)
  AND pp.voided = 0 ",
      "tableName": "ncd_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
      "name": "Referrals_instance_table_creation",
      "type": "customSql",
      "readerSql": "select
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
      GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
      (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
      then \"Fixed\"
      ELSE
      (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
      end) as \"Channel Type\",
      piUIC.identifier as \"UIC\",
      per.gender as \"Gender\",
      per.birthdate as \"Date of Birth\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Telephone' Then pac.value else null end)) as \"Patient telephone Number\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nationality' then cv.concept_full_name else null end)) as \"Nationality\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'education' then cv.concept_full_name else null end)) as \"Education\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ethnicity' then cv.concept_full_name else null end)) as \"Ethnicity\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'District of Birth' then cv.concept_full_name else null end)) as \"District of Birth\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Contact Name' Then pac.value else null end)) as \"Next-of-kin Contact Name\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Address' Then pac.value else null end)) as \"Next-of-kin Address\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Telephone Number' Then pac.value else null end)) as \"Next-of-kin Telephone Number\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Population' then cv.concept_full_name else null end)) as \"Population\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Referral source' then cv.concept_full_name else null end)) as \"Referred by\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Contact Tracing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Contact Tracing\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Index Client Code' Then pac.value else null end)) as \"Index Client Code\",
      CAST(GROUP_CONCAT(DISTINCT (case when pat1.name = 'Date index client tested' Then pac.value else null end)) AS DATE) as \"Date index client tested\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Moonlight Testing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Moonlight Testing\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Dreams Activity' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Dreams Activity\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nearest Clinic/Hospital' Then pac.value else null end)) as \"Nearest Clinic/Hospital\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Have you ever been tested for HIV' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Have you ever been tested for HIV\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'If yes for ever been tested for HIV, Result?' then cv.concept_full_name else null end)) as \"If yes for ever been tested for HIV, Result?\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ever been tested in the last twelve months' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Ever been tested in the last twelve months\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Couple testing ?' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Couple testing ?\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'If couple testing yes,capture the registration no.' Then pac.value else null end)) as \"If couple testing yes,capture the registration no.\",
      case when OrgUnitLogic.sitetype = 'Outreach'
      then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
      ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
      end as \"OrgUnit\",
      personInstanceDateChanged.dateChanged as \"date_created\",
      pi.identifier as \"Patient_Identifier\"
      from patient_identifier pi
      inner join person per on pi.patient_id = per.person_id
      and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
      inner join patient pat on pi.patient_id = pat.patient_id
      Inner Join (/*To get the max changed date for a person instance*/
      Select
      pid as person_id,
      max(DateChanged) as dateChanged
      from (
      /*Person name max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
      Union All
      /*Person max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
      Union All
      /*Person identifier max date created*/
      Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
      Union All
      /*Person address max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
      Union All
      /*Person attribute max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
      ) as personInstanceDateChanged
      group by pid
      ) as personInstanceDateChanged
      On personInstanceDateChanged.person_id = pat.patient_id
      inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
      inner join person_address perAdd on pi.patient_id = perAdd.person_id
      LEFT JOIN (/*Patient id along with the site type value*/
      Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt
      inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
      where  perAtttype.name = 'Site Type'
      and perAtt.voided=0
      ) as patientSitetype
      on patientSitetype.person_id = pi.patient_id
      LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
      LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
      LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
      and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
      inner join
      (Select
      facilityObs.person_id,
      (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
      (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
      (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
      from obs facilityObs
      Inner Join
      (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
      where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Referrals Form, Facility')
      and voided=0
      group by person_id) as facilityObsDateTimePerPerson
      on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
      And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
      And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
      and facilityObs.voided = 0
      Inner join obs siteTypeObs
      on siteTypeObs.encounter_id = facilityObs.encounter_id
      and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Referrals Form, Site Type')
      Left join obs districtObs
      on districtObs.encounter_id = siteTypeObs.encounter_id
      and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='Referrals Form, District')
      ) as OrgUnitLogic
      on OrgUnitLogic.person_id = pi.patient_id
      where pi.patient_id in ( /*Filtering if patient is enrolled in any FORM*/
      Select patient_id from patient_program pp where program_id in (
      Select program_id from
      program where retired=0
      )
      and voided = 0
      )
      group by pi.patient_id",
      "tableName": "referrals_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
      "name": "Referrals_program_table_creation",
      "type": "customSql",
      "readerSql":  "SELECT pi.identifier                        AS \"Patient_Identifier\",
      CASE
      WHEN OrgUnitLogic.sitetype = 'Outreach' THEN
      Concat('ZWNSC-OU-', Upper(OrgUnitLogic.facility), '-', Upper(
      OrgUnitLogic.district))
      ELSE Concat('ZWNSC-', Upper(OrgUnitLogic.facility))
      END                                  AS \"OrgUnit\",
      'vatFxlZR2lj'                        AS program,
      Cast(Date(pp.date_enrolled) AS DATE) AS \"enrollment_date\",
      Cast(Date(pp.date_enrolled) AS DATE) AS \"incident_date\",
      ( pp.date_created )                  AS \"date_created\",
      ( pp.patient_program_id )            AS \"program_unique_id\",
      CASE
      WHEN pp.voided = 0
      AND pp.date_completed IS NOT NULL THEN 'COMPLETED'
      ELSE 'ACTIVE'
      END                                  AS status
      FROM   patient_program pp
      INNER JOIN patient_identifier pi
      ON pp.patient_id = pi.patient_id
      AND pi.identifier_type IN (SELECT patient_identifier_type_id
      FROM   patient_identifier_type
      WHERE  NAME = 'Patient Identifier'
      AND retired = 0)
      INNER JOIN episode_patient_program epp
      ON epp.patient_program_id = pp.patient_program_id
      INNER JOIN (select episode_id, min(encounter_id) as \"encounter_id\" from episode_encounter group by episode_id) as ee
      ON epp.episode_id = ee.episode_id
      INNER JOIN (SELECT facilityObs.person_id,
      facilityObs.encounter_id,
      (SELECT concept_full_name
      FROM   concept_view
      WHERE  retired = 0
      AND concept_id = facilityObs.value_coded) AS
      facility
    ,
      (SELECT concept_full_name
      FROM   concept_view
      WHERE  retired = 0
      AND concept_id = siteTypeObs.value_coded) AS sitetype,
      (SELECT concept_full_name
      FROM   concept_view
      WHERE  retired = 0
      AND concept_id = districtObs.value_coded) AS district
      FROM   obs facilityObs
      INNER JOIN (SELECT concept_id,
      person_id,
      obs_datetime AS facilityObsDateTime
      FROM   obs
      WHERE  concept_id =
      (SELECT concept_id
      FROM   concept_view
      WHERE  retired = 0
      AND concept_full_name
      =
      'Referrals Form, Facility')
      AND voided = 0) AS
      facilityObsDateTimePerPerson
      ON facilityObsDateTimePerPerson.concept_id =
      facilityObs.concept_id
      AND facilityObsDateTimePerPerson.person_id
      =
      facilityObs.person_id
      AND
      facilityObsDateTimePerPerson.facilityobsdatetime =
      facilityObs.obs_datetime
      AND facilityObs.voided = 0
      INNER JOIN obs siteTypeObs
      ON siteTypeObs.encounter_id =
      facilityObs.encounter_id
      AND siteTypeObs.voided = 0
      AND siteTypeObs.concept_id =
      (SELECT concept_id
      FROM   concept_view
      WHERE  retired = 0
      AND concept_full_name =
      'Referrals Form, Site Type')
      LEFT JOIN obs districtObs
      ON districtObs.encounter_id =
      siteTypeObs.encounter_id
      AND districtObs.voided = 0
      AND districtObs.concept_id =
      (SELECT concept_id
      FROM   concept_view
      WHERE  retired = 0
      AND concept_full_name =
      'Referrals Form, District')
      ) AS OrgUnitLogic
      ON OrgUnitLogic.person_id = pi.patient_id
      AND OrgUnitLogic.encounter_id = ee.encounter_id
      WHERE  pp.program_id IN (SELECT program_id
      FROM   program
      WHERE  retired = 0)
      AND pp.voided = 0",
      "tableName": "referrals_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
    "name": "IPV_instance_table_creation",
      "type": "customSql",
     "readerSql":  "select
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
      GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
      (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
      then \"Fixed\"
      ELSE
      (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
      end) as \"Channel Type\",
      piUIC.identifier as \"UIC\",
      per.gender as \"Gender\",
      per.birthdate as \"Date of Birth\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Telephone' Then pac.value else null end)) as \"Patient telephone Number\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nationality' then cv.concept_full_name else null end)) as \"Nationality\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'education' then cv.concept_full_name else null end)) as \"Education\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ethnicity' then cv.concept_full_name else null end)) as \"Ethnicity\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'District of Birth' then cv.concept_full_name else null end)) as \"District of Birth\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Contact Name' Then pac.value else null end)) as \"Next-of-kin Contact Name\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Address' Then pac.value else null end)) as \"Next-of-kin Address\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Telephone Number' Then pac.value else null end)) as \"Next-of-kin Telephone Number\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Population' then cv.concept_full_name else null end)) as \"Population\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Referral source' then cv.concept_full_name else null end)) as \"Referred by\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Contact Tracing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Contact Tracing\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Index Client Code' Then pac.value else null end)) as \"Index Client Code\",
      CAST(GROUP_CONCAT(DISTINCT (case when pat1.name = 'Date index client tested' Then pac.value else null end)) AS DATE) as \"Date index client tested\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Moonlight Testing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Moonlight Testing\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Dreams Activity' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Dreams Activity\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nearest Clinic/Hospital' Then pac.value else null end)) as \"Nearest Clinic/Hospital\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Have you ever been tested for HIV' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Have you ever been tested for HIV\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'If yes for ever been tested for HIV, Result?' then cv.concept_full_name else null end)) as \"If yes for ever been tested for HIV, Result?\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ever been tested in the last twelve months' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Ever been tested in the last twelve months\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Couple testing ?' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Couple testing ?\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'If couple testing yes,capture the registration no.' Then pac.value else null end)) as \"If couple testing yes,capture the registration no.\",
      case when OrgUnitLogic.sitetype = 'Outreach'
      then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
      ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
      end as \"OrgUnit\",
      personInstanceDateChanged.dateChanged as \"date_created\",
      pi.identifier as \"Patient_Identifier\"
      from patient_identifier pi
      inner join person per on pi.patient_id = per.person_id
      and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
      inner join patient pat on pi.patient_id = pat.patient_id
      Inner Join (/*To get the max changed date for a person instance*/
      Select
      pid as person_id,
      max(DateChanged) as dateChanged
      from (
      /*Person name max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
      Union All
      /*Person max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
      Union All
      /*Person identifier max date created*/
      Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
      Union All
      /*Person address max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
      Union All
      /*Person attribute max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
      ) as personInstanceDateChanged
      group by pid
      ) as personInstanceDateChanged
      On personInstanceDateChanged.person_id = pat.patient_id
      inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
      inner join person_address perAdd on pi.patient_id = perAdd.person_id
      LEFT JOIN (/*Patient id along with the site type value*/
      Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt
      inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
      where  perAtttype.name = 'Site Type'
      and perAtt.voided=0
      ) as patientSitetype
      on patientSitetype.person_id = pi.patient_id
      LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
      LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
      LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
      and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
      inner join
      (Select
      facilityObs.person_id,
      (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
      (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
      (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
      from obs facilityObs
      Inner Join
      (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
      where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='IPV Form, Facility')
      and voided=0
      group by person_id) as facilityObsDateTimePerPerson
      on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
      And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
      And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
      and facilityObs.voided = 0
      Inner join obs siteTypeObs
      on siteTypeObs.encounter_id = facilityObs.encounter_id
      and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='IPV Form, Site Type')
      Left join obs districtObs
      on districtObs.encounter_id = siteTypeObs.encounter_id
      and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='IPV Form, District')
      ) as OrgUnitLogic
      on OrgUnitLogic.person_id = pi.patient_id
      where pi.patient_id in ( /*Filtering if patient is enrolled in any FORM*/
      Select patient_id from patient_program pp where program_id in (
      Select program_id from
      program where retired=0
      )
      and voided = 0
      )
      group by pi.patient_id ",
      "tableName": "ipv_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
    "name": "IPV_program_table_creation",
      "type": "customSql",
      "readerSql":  "SELECT pi.identifier                             AS \"Patient_Identifier\",
       CASE
           WHEN OrgUnitLogic.sitetype = 'Outreach' THEN
               Concat('ZWNSC-OU-', Upper(OrgUnitLogic.facility), '-', Upper(
                       OrgUnitLogic.district))
           ELSE Concat('ZWNSC-', Upper(OrgUnitLogic.facility))
           END                                       AS \"OrgUnit\",
       'vatFxlZR2lj'                             AS program,
       Cast((Date(pp.date_enrolled)) AS DATE) AS \"enrollment_date\",
       Cast((Date(pp.date_enrolled)) AS DATE) AS \"incident_date\",
       (pp.date_created)                      AS \"date_created\",
       (pp.patient_program_id)                AS \"program_unique_id\",
       CASE
           WHEN pp.voided = 0
               AND pp.date_completed IS NOT NULL THEN 'COMPLETED'
           ELSE 'ACTIVE'
           END                                       AS status
FROM   patient_program pp
           INNER JOIN patient_identifier pi
                      ON pp.patient_id = pi.patient_id
                          AND pi.identifier_type IN (SELECT patient_identifier_type_id
                                                     FROM   patient_identifier_type
                                                     WHERE  NAME = 'Patient Identifier'
                                                       AND retired = 0)
                          INNER JOIN episode_patient_program epp
      ON epp.patient_program_id = pp.patient_program_id
      INNER JOIN (select episode_id, min(encounter_id) as \"encounter_id\" from episode_encounter group by episode_id) as ee
      ON epp.episode_id = ee.episode_id

           INNER JOIN (SELECT facilityObs.person_id,
                       facilityObs.encounter_id,
                              (SELECT concept_full_name
                               FROM   concept_view
                               WHERE  retired = 0
                                 AND concept_id = facilityObs.value_coded) AS
                                  facility
                               ,
                              (SELECT concept_full_name
                               FROM   concept_view
                               WHERE  retired = 0
                                 AND concept_id = siteTypeObs.value_coded) AS
                                  sitetype
                               ,
                              (SELECT concept_full_name
                               FROM   concept_view
                               WHERE  retired = 0
                                 AND concept_id = districtObs.value_coded) AS
                                  district
                       FROM   obs facilityObs
                                  INNER JOIN (SELECT concept_id,
                                                     person_id,
                                                     (obs_datetime) AS
                                                         facilityObsDateTime
                                              FROM   obs
                                              WHERE  concept_id =
                                                     (SELECT concept_id
                                                      FROM   concept_view
                                                      WHERE  retired = 0
                                                        AND concept_full_name
                                                          =
                                                            'IPV Form, Facility')
                                                AND voided = 0) AS
                           facilityObsDateTimePerPerson
                                             ON facilityObsDateTimePerPerson.concept_id =
                                                facilityObs.concept_id
                                                 AND facilityObsDateTimePerPerson.person_id
                                                    =
                                                     facilityObs.person_id
                                                 AND
                                                facilityObsDateTimePerPerson.facilityobsdatetime =
                                                facilityObs.obs_datetime
                                                 AND facilityObs.voided = 0
                                  INNER JOIN obs siteTypeObs
                                             ON siteTypeObs.encounter_id =
                                                facilityObs.encounter_id
                                                 AND siteTypeObs.voided = 0
                                                 AND siteTypeObs.concept_id =
                                                     (SELECT concept_id
                                                      FROM   concept_view
                                                      WHERE  retired = 0
                                                        AND concept_full_name =
                                                            'IPV Form, Site Type')
                                  LEFT JOIN obs districtObs
                                            ON districtObs.encounter_id =
                                               siteTypeObs.encounter_id
                                                AND districtObs.voided = 0
                                                AND districtObs.concept_id =
                                                    (SELECT concept_id
                                                     FROM   concept_view
                                                     WHERE  retired = 0
                                                       AND concept_full_name =
                                                           'IPV Form, District')
) AS OrgUnitLogic
                      ON OrgUnitLogic.person_id = pi.patient_id
                      AND OrgUnitLogic.encounter_id = ee.encounter_id
WHERE  pp.program_id IN (SELECT program_id
                         FROM   program
                         WHERE  retired = 0)
  AND pp.voided = 0",
      "tableName": "ipv_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
      "name": "TB_instance_table_creation",
      "type": "customSql",
      "readerSql":  "select
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Site Type' then cv.concept_full_name else null end)) as \"Site Type\",
      GROUP_CONCAT(distinct (case when pat1.name = 'Outreach site name' Then pac.value else null end)) as \"Outreach site name\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Outreach Classification' then cv.concept_full_name else null end)) as \"Outreach type\",
      (case when patientSitetype.siteType = (select concept_id from concept_view where concept_full_name = 'Static' and retired = 0)
      then \"Fixed\"
      ELSE
      (Select concept_full_name from concept_view where concept_id = patientSitetype.siteType)
      end) as \"Channel Type\",
      piUIC.identifier as \"UIC\",
      per.gender as \"Gender\",
      per.birthdate as \"Date of Birth\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Client Resident' then cv.concept_full_name else null end)) as \"Residence\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Marital Status' then cv.concept_full_name else null end)) as \"Marital Status\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'occupation' then cv.concept_full_name else null end)) as \"Occupation\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Telephone' Then pac.value else null end)) as \"Patient telephone Number\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nationality' then cv.concept_full_name else null end)) as \"Nationality\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'education' then cv.concept_full_name else null end)) as \"Education\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ethnicity' then cv.concept_full_name else null end)) as \"Ethnicity\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'District of Birth' then cv.concept_full_name else null end)) as \"District of Birth\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Contact Name' Then pac.value else null end)) as \"Next-of-kin Contact Name\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Address' Then pac.value else null end)) as \"Next-of-kin Address\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Next-of-kin Telephone Number' Then pac.value else null end)) as \"Next-of-kin Telephone Number\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Population' then cv.concept_full_name else null end)) as \"Population\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Referral source' then cv.concept_full_name else null end)) as \"Referred by\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Contact Tracing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Contact Tracing\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Index Client Code' Then pac.value else null end)) as \"Index Client Code\",
      CAST(GROUP_CONCAT(DISTINCT (case when pat1.name = 'Date index client tested' Then pac.value else null end)) AS DATE) as \"Date index client tested\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Moonlight Testing' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) as \"Moonlight Testing\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Dreams Activity' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Dreams Activity\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Nearest Clinic/Hospital' Then pac.value else null end)) as \"Nearest Clinic/Hospital\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Have you ever been tested for HIV' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Have you ever been tested for HIV\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'If yes for ever been tested for HIV, Result?' then cv.concept_full_name else null end)) as \"If yes for ever been tested for HIV, Result?\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Ever been tested in the last twelve months' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Ever been tested in the last twelve months\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'Couple testing ?' then (case when cv.concept_full_name = 'Yes' THEN 'true' when cv.concept_full_name = 'No' then 'false' else null end) else null end)) AS \"Couple testing ?\",
      GROUP_CONCAT(DISTINCT (case when pat1.name = 'If couple testing yes,capture the registration no.' Then pac.value else null end)) as \"If couple testing yes,capture the registration no.\",
      case when OrgUnitLogic.sitetype = 'Outreach'
      then concat('ZWNSC-OU-',upper(OrgUnitLogic.facility),'-',upper(OrgUnitLogic.district))
      ELSE concat('ZWNSC-',upper(OrgUnitLogic.facility))
      end as \"OrgUnit\",
      personInstanceDateChanged.dateChanged as \"date_created\",
      pi.identifier as \"Patient_Identifier\"
      from patient_identifier pi
      inner join person per on pi.patient_id = per.person_id
      and pi.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'Patient Identifier' and retired=0)
      inner join patient pat on pi.patient_id = pat.patient_id
      Inner Join (/*To get the max changed date for a person instance*/
      Select
      pid as person_id,
      max(DateChanged) as dateChanged
      from (
      /*Person name max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_name group by person_id
      Union All
      /*Person max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person group by person_id
      Union All
      /*Person identifier max date created*/
      Select patient_id as pid, max(coalesce(date_changed,date_created)) dateChanged from patient_identifier group by patient_id
      Union All
      /*Person address max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_address group by person_id
      Union All
      /*Person attribute max date created*/
      Select person_id as pid, max(coalesce(date_changed,date_created)) dateChanged from person_attribute group by person_id
      ) as personInstanceDateChanged
      group by pid
      ) as personInstanceDateChanged
      On personInstanceDateChanged.person_id = pat.patient_id
      inner join patient_identifier piUIC on pat.patient_id = piUIC.patient_id
      inner join person_address perAdd on pi.patient_id = perAdd.person_id
      LEFT JOIN (/*Patient id along with the site type value*/
      Select perAtt.person_id,perAtt.value as 'siteType' from person_attribute perAtt
      inner JOIN person_attribute_type perAtttype on perAtt.person_attribute_type_id = perAtttype.person_attribute_type_id
      where  perAtttype.name = 'Site Type'
      and perAtt.voided=0
      ) as patientSitetype
      on patientSitetype.person_id = pi.patient_id
      LEFT JOIN person_attribute pac on pi.patient_id = pac.person_id and pac.voided = 0
      LEFT JOIN person_attribute_type pat1 on pac.person_attribute_type_id = pat1.person_attribute_type_id
      LEFT jOIN concept_view cv on pac.value = cv.concept_id AND cv.retired = 0
      and piUIC.identifier_type in (select patient_identifier_type_id from patient_identifier_type where name = 'UIC' and retired=0)
      inner join
      (Select
      facilityObs.person_id,
      (select concept_full_name from concept_view where retired = 0 and concept_id= facilityObs.value_coded) as facility,
      (select concept_full_name from concept_view where retired = 0 and concept_id= siteTypeObs.value_coded) as sitetype,
      (select concept_full_name from concept_view where retired = 0 and concept_id= districtObs.value_coded) as district
      from obs facilityObs
      Inner Join
      (Select concept_id,person_id,max(obs_datetime) as facilityObsDateTime from obs
      where concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='TB History Form Template, Facility')
      and voided=0
      group by person_id) as facilityObsDateTimePerPerson
      on facilityObsDateTimePerPerson.concept_id = facilityObs.concept_id
      And facilityObsDateTimePerPerson.person_id = facilityObs.person_id
      And facilityObsDateTimePerPerson.facilityObsDateTime = facilityObs.obs_datetime
      and facilityObs.voided = 0
      Inner join obs siteTypeObs
      on siteTypeObs.encounter_id = facilityObs.encounter_id
      and siteTypeObs.voided = 0 and siteTypeObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='TB History Form Template, Site Type')
      Left join obs districtObs
      on districtObs.encounter_id = siteTypeObs.encounter_id
      and  districtObs.voided = 0 and districtObs.concept_id=(select concept_id from concept_view where retired = 0 and concept_full_name='TB History Form Template, District')
      ) as OrgUnitLogic
      on OrgUnitLogic.person_id = pi.patient_id
      where pi.patient_id in ( /*Filtering if patient is enrolled in any FORM*/
      Select patient_id from patient_program pp where program_id in (
      Select program_id from
      program where retired=0
      )
      and voided = 0
      )
      group by pi.patient_id",
      "tableName": "tb_instance_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    },
    {
      "name": "TB_program_table_creation",
      "type": "customSql",
      "readerSql":  "SELECT pi.identifier                        AS \"Patient_Identifier\",
      CASE
      WHEN OrgUnitLogic.sitetype = 'Outreach' THEN
      Concat('ZWNSC-OU-', Upper(OrgUnitLogic.facility), '-', Upper(
      OrgUnitLogic.district))
      ELSE Concat('ZWNSC-', Upper(OrgUnitLogic.facility))
      END                                  AS \"OrgUnit\",
      'vatFxlZR2lj'                        AS program,
      Cast(Date(pp.date_enrolled) AS DATE) AS \"enrollment_date\",
      Cast(Date(pp.date_enrolled) AS DATE) AS \"incident_date\",
      ( pp.date_created )                  AS \"date_created\",
      ( pp.patient_program_id )            AS \"program_unique_id\",
      CASE
      WHEN pp.voided = 0
      AND pp.date_completed IS NOT NULL THEN 'COMPLETED'
      ELSE 'ACTIVE'
      END                                  AS status
      FROM   patient_program pp
      INNER JOIN patient_identifier pi
      ON pp.patient_id = pi.patient_id
      AND pi.identifier_type IN (SELECT patient_identifier_type_id
      FROM   patient_identifier_type
      WHERE  NAME = 'Patient Identifier'
      AND retired = 0)
      INNER JOIN episode_patient_program epp
      ON epp.patient_program_id = pp.patient_program_id
      INNER JOIN (select episode_id, min(encounter_id) as \"encounter_id\" from episode_encounter group by episode_id) as ee
      ON epp.episode_id = ee.episode_id
      INNER JOIN (SELECT facilityObs.person_id,
      facilityObs.encounter_id,
      (SELECT concept_full_name
      FROM   concept_view
      WHERE  retired = 0
      AND concept_id = facilityObs.value_coded) AS
      facility
    ,
      (SELECT concept_full_name
      FROM   concept_view
      WHERE  retired = 0
      AND concept_id = siteTypeObs.value_coded) AS sitetype,
      (SELECT concept_full_name
      FROM   concept_view
      WHERE  retired = 0
      AND concept_id = districtObs.value_coded) AS district
      FROM   obs facilityObs
      INNER JOIN (SELECT concept_id,
      person_id,
      obs_datetime AS facilityObsDateTime
      FROM   obs
      WHERE  concept_id =
      (SELECT concept_id
      FROM   concept_view
      WHERE  retired = 0
      AND concept_full_name
      =
      'TB History Form Template, Facility')
      AND voided = 0) AS
      facilityObsDateTimePerPerson
      ON facilityObsDateTimePerPerson.concept_id =
      facilityObs.concept_id
      AND facilityObsDateTimePerPerson.person_id
      =
      facilityObs.person_id
      AND
      facilityObsDateTimePerPerson.facilityobsdatetime =
      facilityObs.obs_datetime
      AND facilityObs.voided = 0
      INNER JOIN obs siteTypeObs
      ON siteTypeObs.encounter_id =
      facilityObs.encounter_id
      AND siteTypeObs.voided = 0
      AND siteTypeObs.concept_id =
      (SELECT concept_id
      FROM   concept_view
      WHERE  retired = 0
      AND concept_full_name =
      'TB History Form Template, Site Type')
      LEFT JOIN obs districtObs
      ON districtObs.encounter_id =
      siteTypeObs.encounter_id
      AND districtObs.voided = 0
      AND districtObs.concept_id =
      (SELECT concept_id
      FROM   concept_view
      WHERE  retired = 0
      AND concept_full_name =
      'TB History Form Template, District')
      ) AS OrgUnitLogic
      ON OrgUnitLogic.person_id = pi.patient_id
      AND OrgUnitLogic.encounter_id = ee.encounter_id
      WHERE  pp.program_id IN (SELECT program_id
      FROM   program
      WHERE retired = 0)
      AND pp.voided = 0 ",
      "tableName": "tb_program_enrollment_table",
      "chunkSizeToRead": "500",
      "columnsToIgnore": []
    }
  ],
  "procedures":[
    {
      "name":"Discharge Date Procedure",
      "sourceFilePath":"classpath:procedureSql/dischargeDateProc.sql"
    },
    {
      "name":"Age Group Procedure",
      "sourceFilePath":"classpath:procedureSql/ageGroupProc.sql"
    }
  ],
  "views": [

    {
      "name": "patient_program_view",
      "sourceFilePath":"classpath:viewSql/patientProgramView.sql"
    },
    {
      "name": "patient_visits_encounters_view",
      "sourceFilePath": "classpath:viewSql/patientVisitsEncountersView.sql"
    },
    {
      "name": "appointment_admin_panel_view",
      "sql": "SELECT * FROM appointment_service_default LEFT OUTER JOIN service_availability_default USING (appointment_service_id, service_name)"
    },

    {
      "name": "patient_details_view",
      "sourceFilePath": "classpath:viewSql/patientDetailsView.sql"
    },
    {
      "name": "patient_information_view",
      "sourceFilePath": "classpath:viewSql/patientInformationView.sql"
    },
    {
      "name":"bed_management_view",
      "sourceFilePath":"classpath:viewSql/bedManagementView.sql"
    },
    {
      "name":"bed_management_locations_view",
      "sourceFilePath":"classpath:viewSql/locationWiseDischarge.sql"
    },
    {
      "name": "patient_bed_view",
      "sourceFilePath": "classpath:viewSql/patientBedView.sql"
    },
    {
      "name": "patient_operation_theater_view",
      "sourceFilePath": "classpath:viewSql/patientOperationTheaterView.sql"
    },
    {
      "name": "patient_appointment_view",
      "sourceFilePath": "classpath:viewSql/patientAppointmentView.sql"
    },
    {
      "name": "patient_program_medication_view",
      "sourceFilePath": "classpath:viewSql/patientProgramMedicationView.sql"
    },
    {
      "name": "patient_diagnosis_condition_view",
      "sourceFilePath": "classpath:viewSql/patientDiagnosisConditionView.sql"
    },
    {
      "name": "patient_bed_tags_history_view",
      "sourceFilePath": "classpath:viewSql/patientBedTagView.sql"
    },

        {
 "name": "hts_program_events_table",
 "sql": "SELECT 'vatFxlZR2lj':: TEXT AS program,
        'bY9Dg3Je4CN':: TEXT AS program_stage,

        max(CASE WHEN phtc.\"phtc_site_type\" = 'Outreach'
              THEN concat('ZWNSC-OU-',upper(COALESCE(phtc.\"phtc_facility\", (SELECT phtc_facility FROM provider_hiv_test_counselling phtc_temp WHERE phtc_facility IS NOT NULL AND  phtc_temp.patient_id = pedd.patient_id ORDER BY phtc_temp.encounter_id DESC LIMIT 1))),'-',upper(phtc.\"phtc_district\"))
         ELSE concat('ZWNSC-',upper(COALESCE(phtc.\"phtc_facility\",  (SELECT phtc_facility FROM provider_hiv_test_counselling phtc_temp WHERE phtc_facility IS NOT NULL AND phtc_temp.patient_id  = pedd.patient_id ORDER BY phtc_temp.encounter_id DESC LIMIT 1))))
         END) AS \"OrgUnit\",

        max(CASE WHEN   COALESCE(phtc.obs_datetime, '01-01-0001' ) >= COALESCE(pht.obs_datetime, '01-01-0001' )
                AND  COALESCE(phtc.obs_datetime, '01-01-0001' ) >=  COALESCE(hst.obs_datetime, '01-01-0001' )
            THEN date(phtc.obs_datetime)

            WHEN ( COALESCE(hst.obs_datetime, '01-01-0001' ) >= COALESCE(phtc.obs_datetime, '01-01-0001' ) )
                 AND ( COALESCE(hst.obs_datetime, '01-01-0001' ) >= COALESCE(pht.obs_datetime, '01-01-0001' ) )
            THEN date(hst.obs_datetime)
         ELSE
            date(pht.obs_datetime)
         END) AS \"event_date\",

         'COMPLETED' :: TEXT AS status,

        max(pedd.\"visit_id\") AS \"event_unique_id\",
        max(ppv.patient_program_id) as \"patient_program_id\",
        max(DATE(ppv.\"date_enrolled\"))  AS \"enrollment_date\",

        max(CASE WHEN COALESCE(phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(hst.date_created, '01-01-0001 00:00:00' )
                AND COALESCE(phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_created, '01-01-0001 00:00:00' )
             THEN phtc.date_created

            WHEN COALESCE(hst.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_created, '01-01-0001 00:00:00' )
                 AND COALESCE(hst.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_created, '01-01-0001 00:00:00' )
            THEN hst.date_created
        ELSE
            pht.date_created
        END) AS \"date_created\",

        max(pi.\"Patient_Identifier\") AS \"Patient_Identifier\",
        max( CASE WHEN hst.hst_assisted_st = 'Yes' THEN 1
                  WHEN hst.hst_assisted_st =  'No' THEN 0
              ELSE NULL END ) :: BOOLEAN AS \"Assisted ST\",

        max( CASE WHEN phtc.you_partner_currently_pregnant = 'Yes' THEN 1
                  WHEN phtc.you_partner_currently_pregnant = 'No' THEN 0
             ELSE NULL END ):: BOOLEAN  AS \"You/partner currently pregnant?\",

        max(CASE WHEN phtc_client_received_post_test_counseling = 'Yes' THEN 1
                  WHEN phtc_client_received_post_test_counseling = 'No' THEN 0
             ELSE NULL END) :: BOOLEAN AS \"Client received post test counseling?\",

         max(CASE WHEN  phtc_family_planning_counselling IS NOT NULL AND COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' )
             THEN
                 CASE WHEN phtc_family_planning_counselling = 'Yes' THEN 1
                      WHEN phtc_family_planning_counselling = 'No' THEN 0
                 ELSE NULL END
             WHEN  phtc_family_planning_counselling IS NULL
             THEN
                 CASE WHEN pht_family_planning_counselling = 'Yes' THEN 1
                      WHEN pht_family_planning_counselling = 'No' THEN 0
                 ELSE NULL END
             WHEN pht_family_planning_counselling IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN
                 CASE WHEN pht_family_planning_counselling = 'Yes' THEN 1
                      WHEN pht_family_planning_counselling = 'No' THEN 0
                 ELSE NULL END
             WHEN  pht_family_planning_counselling IS NULL
             THEN
                 CASE WHEN phtc_family_planning_counselling = 'Yes' THEN 1
                      WHEN phtc_family_planning_counselling = 'No' THEN 0
                 ELSE NULL END
             ELSE NULL
         END):: BOOLEAN  AS \"Family Planning Counselling\",

        max(CASE WHEN ever_been_tested = 'Yes' THEN 1
                 WHEN ever_been_tested = 'No' THEN 0
             ELSE NULL END) :: BOOLEAN AS \"Ever been tested\",

         max(CASE WHEN  phtc_history_of_sexual_abuse IS NOT NULL AND COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' )
             THEN
                 CASE WHEN phtc_history_of_sexual_abuse = 'Yes' THEN 1
                      WHEN phtc_history_of_sexual_abuse = 'No' THEN 0
                 ELSE NULL END
             WHEN  phtc_history_of_sexual_abuse IS NULL
             THEN
                 CASE WHEN pht_history_of_sexual_abuse = 'Yes' THEN 1
                      WHEN pht_history_of_sexual_abuse = 'No' THEN 0
                 ELSE NULL END
             WHEN pht_history_of_sexual_abuse IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN
                 CASE WHEN pht_history_of_sexual_abuse = 'Yes' THEN 1
                      WHEN pht_history_of_sexual_abuse = 'No' THEN 0
                 ELSE NULL END
             WHEN   pht_history_of_sexual_abuse IS NULL
             THEN
                 CASE WHEN phtc_history_of_sexual_abuse = 'Yes' THEN 1
                      WHEN phtc_history_of_sexual_abuse = 'No' THEN 0
                 ELSE NULL END
             ELSE NULL
         END) :: BOOLEAN   AS \"History of sexual abuse\",

        CASE WHEN max(has_your_most_recent_sex_partner_been_tested_in_the_last_3_) IN ('Yes - negative', 'Yes - positive', 'Yes - dont know results') THEN 1
                  WHEN max(has_your_most_recent_sex_partner_been_tested_in_the_last_3_) = 'No' THEN 0
             ELSE NULL END :: BOOLEAN AS \"Has your most recent sex partner been tested in the last 3months?\",

         max(CASE WHEN COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(hst.date_modified,hst.date_created, '01-01-0001 00:00:00' )
                 AND COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) THEN
              CASE WHEN phtc_was_referred_to_multiple_responses_possible  IS NOT NULL THEN
              (SELECT string_agg (
                           CASE WHEN phtc_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Private Doctor' THEN 'Private doctor'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other' THEN 'Other'
                                END ,',') FROM provider_hiv_test_counselling phtctemp WHERE phtctemp.encounter_id = pedd.encounter_id AND
                                phtctemp.patient_id = pedd.patient_id GROUP BY phtctemp.encounter_id)
              WHEN  COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(hst.date_modified,hst.date_created, '01-01-0001 00:00:00' )  THEN
                         CASE WHEN pht_was_referred_to_multiple_responses_possible IS NOT NULL THEN
                              (SELECT string_agg (
                                CASE WHEN pht_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                    END ,', ') FROM post_hiv_test_counselling phttemp WHERE phttemp.encounter_id = pedd.encounter_id AND phttemp.patient_id = pedd.patient_id GROUP BY phttemp.encounter_id)
                          ELSE
                               CASE WHEN hst_external_referral_to_multiple_responses_possible IS NOT NULL THEN
                                 (SELECT string_agg (
                                     CASE WHEN hst_external_referral_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                          WHEN hst_external_referral_to_multiple_responses_possible   = 'Nutritional information' THEN 'Nutritional information'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other' THEN 'Other'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                          END ,', ') FROM hiv_self_testing hsttemp WHERE hsttemp.encounter_id = pedd.encounter_id AND hsttemp.patient_id = pedd.patient_id GROUP BY hsttemp.encounter_id)

                               ELSE
                               NULL  END
                         END
              ELSE
                  CASE WHEN hst_external_referral_to_multiple_responses_possible IS NOT NULL THEN
                    (SELECT string_agg (
                                    CASE WHEN hst_external_referral_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                          WHEN hst_external_referral_to_multiple_responses_possible   = 'Nutritional information' THEN 'Nutritional information'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other' THEN 'Other'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                          END ,', ') FROM hiv_self_testing hsttemp WHERE  hsttemp.encounter_id = pedd.encounter_id AND hsttemp.patient_id = pedd.patient_id GROUP BY hsttemp.encounter_id)

                  ELSE NULL END
               END

         WHEN COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' )
                  AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(hst.date_modified,hst.date_created, '01-01-0001 00:00:00' ) THEN

                  CASE WHEN pht_was_referred_to_multiple_responses_possible IS NOT NULL THEN
                     (SELECT string_agg (
                     CASE WHEN pht_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                    END  ,', ') FROM post_hiv_test_counselling phttemp WHERE phttemp.encounter_id = pedd.encounter_id AND phttemp.patient_id = pedd.patient_id GROUP BY phttemp.encounter_id)
                  WHEN COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(hst.date_modified,hst.date_created, '01-01-0001 00:00:00' )
                  THEN
                  CASE WHEN phtc_was_referred_to_multiple_responses_possible  IS NOT NULL THEN
                  (SELECT string_agg (
                           CASE WHEN phtc_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Private Doctor' THEN 'Private doctor'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other' THEN 'Other'
                                END ,',') FROM provider_hiv_test_counselling phtctemp WHERE phtctemp.encounter_id = pedd.encounter_id AND phtctemp.patient_id = pedd.patient_id GROUP BY phtctemp.encounter_id)
                  ELSE
                               CASE WHEN hst_external_referral_to_multiple_responses_possible IS NOT NULL THEN
                               (SELECT string_agg (
                                     CASE WHEN hst_external_referral_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                          WHEN hst_external_referral_to_multiple_responses_possible   = 'Nutritional information' THEN 'Nutritional information'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other' THEN 'Other'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                          END ,', ') FROM hiv_self_testing hsttemp WHERE hsttemp.encounter_id = pedd.encounter_id AND hsttemp.patient_id = pedd.patient_id GROUP BY hsttemp.encounter_id)
                               ELSE
                               NULL  END
                  END
                  ELSE
                  CASE WHEN hst_external_referral_to_multiple_responses_possible IS NOT NULL THEN
                  (SELECT string_agg (
                                     CASE WHEN hst_external_referral_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                          WHEN hst_external_referral_to_multiple_responses_possible   = 'Nutritional information' THEN 'Nutritional information'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other' THEN 'Other'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                          END ,', ') FROM hiv_self_testing hsttemp WHERE hsttemp.encounter_id = pedd.encounter_id AND hsttemp.patient_id = pedd.patient_id GROUP BY hsttemp.encounter_id)
                  ELSE NULL END
                  END
         ELSE
             CASE WHEN hst_external_referral_to_multiple_responses_possible IS NOT NULL THEN
             (SELECT string_agg (
                                     CASE WHEN hst_external_referral_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                          WHEN hst_external_referral_to_multiple_responses_possible   = 'Nutritional information' THEN 'Nutritional information'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Other' THEN 'Other'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                          WHEN hst_external_referral_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                          END ,', ') FROM hiv_self_testing hsttemp WHERE hsttemp.encounter_id = pedd.encounter_id AND hsttemp.patient_id = pedd.patient_id GROUP BY hsttemp.encounter_id)

             WHEN COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' )THEN
                 CASE WHEN phtc_was_referred_to_multiple_responses_possible  IS NOT NULL THEN
                  (SELECT string_agg (
                           CASE WHEN phtc_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Private Doctor' THEN 'Private doctor'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'PReP' THEN 'PReP'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'PEP' THEN 'PEP'
                                WHEN phtc_was_referred_to_multiple_responses_possible = 'Other' THEN 'Other'
                                END ,',') FROM provider_hiv_test_counselling phtctemp WHERE phtctemp.encounter_id = pedd.encounter_id AND phtctemp.patient_id = pedd.patient_id GROUP BY phtctemp.encounter_id)
                ELSE
                        CASE WHEN pht_was_referred_to_multiple_responses_possible IS NOT NULL THEN
                         (SELECT string_agg (
                             CASE WHEN pht_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                  WHEN pht_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                  END ,', ') FROM post_hiv_test_counselling phttemp WHERE phttemp.encounter_id = pedd.encounter_id AND phttemp.patient_id = pedd.patient_id GROUP BY phttemp.encounter_id)
                             ELSE NULL  END
                  END
                  ELSE
                  CASE WHEN pht_was_referred_to_multiple_responses_possible IS NOT NULL THEN
                   (SELECT string_agg (
                                CASE WHEN pht_was_referred_to_multiple_responses_possible = 'Antenatal PMTCT' THEN  'Antenatal/ PMTCT'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'STI treatment centre' THEN 'STI treatment centre'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Social welfare' THEN 'Social Welfare'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'TB diagnostic center' THEN 'TB Diagnostic center'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Other pyscho social support services' THEN 'Other pyscho-social support services'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Other medical services' THEN 'Other medical services'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Private doctor' THEN 'Private doctor'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'OI-ART clinic' THEN 'OI/ART clinic'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Nutritional information' THEN 'Nutritional information'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Male circumcision' THEN 'Male circumcision'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Family Planning' THEN 'Family planning'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Home based care' THEN 'Home based care'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'VIAC' THEN 'VIAC'
                                    WHEN pht_was_referred_to_multiple_responses_possible = 'Not applicable' THEN 'Not applicable'
                                    END ,', ') FROM post_hiv_test_counselling phttemp WHERE phttemp.encounter_id = pedd.encounter_id AND phttemp.patient_id = pedd.patient_id GROUP BY phttemp.encounter_id)
                  ELSE NULL END
                  END

END)  AS \"referred by\",

max(CASE WHEN phtc.hiv_test_results IS NOT NULL AND COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' )
             THEN phtc.hiv_test_results
             WHEN  phtc.hiv_test_results IS NULL
             THEN  pht_hiv_test_result
             WHEN   pht_hiv_test_result IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN  pht_hiv_test_result
             WHEN   pht_hiv_test_result IS NULL
             THEN phtc.hiv_test_results
             ELSE NULL
         END)  AS \"HIV test results\",

         max(CASE WHEN phtc_have_you_ever_talked_about_t_c_with_your_partner_spous IS NOT NULL AND  COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' )
             THEN phtc_have_you_ever_talked_about_t_c_with_your_partner_spous
             WHEN  phtc_have_you_ever_talked_about_t_c_with_your_partner_spous IS NULL
             THEN  pht_have_you_ever_talked_about_t_c_with_your_partner_spouse
             WHEN pht_have_you_ever_talked_about_t_c_with_your_partner_spouse IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN  pht_have_you_ever_talked_about_t_c_with_your_partner_spouse
             WHEN   pht_in_the_last_twelve_month_exchanged_money_or_goods_for_s IS NULL
             THEN phtc_have_you_ever_talked_about_t_c_with_your_partner_spous
             ELSE NULL
         END)  AS \"Have you ever talked about T and C with your partner/spouse?\",

        max(if_yes_where_were_you_last_tested) AS \"If yes, where were you last tested?\",

        max(CASE WHEN phtc_in_the_last_twelve_month_exchanged_money_or_goods_for_ IS NOT NULL AND COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' )
             THEN phtc_in_the_last_twelve_month_exchanged_money_or_goods_for_
             WHEN  phtc_in_the_last_twelve_month_exchanged_money_or_goods_for_ IS NULL
             THEN  pht_in_the_last_twelve_month_exchanged_money_or_goods_for_s
             WHEN  pht_in_the_last_twelve_month_exchanged_money_or_goods_for_s IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN  pht_in_the_last_twelve_month_exchanged_money_or_goods_for_s
             WHEN   pht_in_the_last_twelve_month_exchanged_money_or_goods_for_s IS NULL AND (pht.date_created >= phtc.date_created)
             THEN phtc_in_the_last_twelve_month_exchanged_money_or_goods_for_
             ELSE NULL
         END)  AS \"In the last twelve month exchanged money or goods for sex\",


        max(CASE WHEN hst_consent_to_follow_up = 'Yes' THEN 1
                 WHEN hst_consent_to_follow_up =  'No' THEN 0
            ELSE NULL END) :: BOOLEAN AS \"Consent to follow-up\",

        max(phtc_late_read_result) AS \"Late read result?\",

          max(CASE WHEN phtc_mc_counselling_provided IS NOT NULL AND COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' )
             THEN
                 CASE WHEN phtc_mc_counselling_provided = 'Yes' THEN 1
                      WHEN phtc_mc_counselling_provided =  'No' THEN 0
                 ELSE NULL END
             WHEN  phtc_mc_counselling_provided IS NULL
             THEN
                 CASE WHEN pht_mc_counselling_provided = 'Yes' THEN 1
                      WHEN pht_mc_counselling_provided =  'No' THEN 0
                 ELSE NULL END
             WHEN  pht_mc_counselling_provided IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN
                  CASE WHEN pht_mc_counselling_provided = 'Yes' THEN 1
                       WHEN pht_mc_counselling_provided =  'No' THEN 0
                 ELSE NULL END
             WHEN  pht_mc_counselling_provided IS NULL
             THEN
                 CASE WHEN phtc_mc_counselling_provided = 'Yes' THEN 1
                      WHEN phtc_mc_counselling_provided =  'No' THEN 0
                  ELSE NULL END
             ELSE NULL END) :: BOOLEAN  AS \"MC counselling provided\",

        max(phtc_site_type) AS \"Site type\",
        max(how_long_ago_were_you_last_tested_months) :: TEXT AS \"How long ago were you last tested (months)?\",


        max(CASE WHEN phtc_if_client_advised_to_return_for_re_testing_indicate_ti IS NOT NULL AND (COALESCE(phtc.date_modified,phtc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(pht.date_modified,pht.date_created,'01-01-0001 00:00:00' ))
             THEN
                 CASE WHEN phtc_if_client_advised_to_return_for_re_testing_indicate_ti IN ('2 weeks','4 weeks','3 months', '6 months','1 year') THEN 1
                      WHEN phtc_if_client_advised_to_return_for_re_testing_indicate_ti = 'N/A' THEN 0
                 END
             WHEN  phtc_if_client_advised_to_return_for_re_testing_indicate_ti IS NULL
             THEN
                 CASE WHEN pht_if_client_advised_to_return_for_re_testing_indicate_tim IN ('2 weeks','4 weeks','3 months', '6 months','1 year') THEN 1
                       WHEN pht_if_client_advised_to_return_for_re_testing_indicate_tim  = 'Other(specify)' then 0
                     END
             WHEN  pht_if_client_advised_to_return_for_re_testing_indicate_tim IS NOT NULL AND COALESCE(pht.date_modified,pht.date_created, '01-01-0001 00:00:00' ) >= COALESCE(phtc.date_modified,phtc.date_created,'01-01-0001 00:00:00' )
             THEN
                 CASE WHEN pht_if_client_advised_to_return_for_re_testing_indicate_tim IN ('2 weeks','4 weeks','3 months', '6 months','1 year')  THEN 1
                       WHEN pht_if_client_advised_to_return_for_re_testing_indicate_tim  = 'Other(specify)' then 0
                      END
             WHEN  pht_if_client_advised_to_return_for_re_testing_indicate_tim IS NULL
             THEN
                  CASE WHEN phtc_if_client_advised_to_return_for_re_testing_indicate_ti IN ('2 weeks','4 weeks','3 months', '6 months','1 year')  THEN 1
                       WHEN phtc_if_client_advised_to_return_for_re_testing_indicate_ti = 'N/A' THEN 0
                      END
             ELSE NULL END) :: BOOLEAN  AS \"If client advised to return for re-testing indicate timeline (2 weeks, 4 weeks, 3 months, 6 months, other)\",


         max(CASE WHEN phtc_tb_screening_have_you_had_a_cough = 'Yes' THEN 1
                  WHEN phtc_tb_screening_have_you_had_a_cough =  'No' THEN 0
             ELSE NULL END) :: BOOLEAN AS \"Have you had a cough?\",

         max(CASE WHEN provider_hiv_test_counselling_was_recency_testing_done = 'Yes' THEN 1
                  WHEN provider_hiv_test_counselling_was_recency_testing_done =  'No' THEN 0
             ELSE NULL END) :: BOOLEAN AS \"Was recency testing done?\",
         max(provider_hiv_test_counselling_what_was_the_result) AS \"What was the result?\",
         max(provider_hiv_test_counselling_date_of_recency_testing_resul) AS \"Date of recency testing result\",
         max(provider_hiv_test_counselling_what_was_the_testing_modality) AS \"What was the testing modality used?\",
         max(provider_hiv_test_counselling_why_was_it_not_done) AS \"Why was it not done?\"

FROM
patient_encounter_table pedd

    JOIN psi_patient_program_data ppv ON pedd.patient_id = ppv.patient_id
    JOIN patient_identifier pi ON ppv.patient_id = pi.patient_id
    LEFT OUTER JOIN provider_hiv_test_counselling phtc ON phtc.encounter_id = pedd.encounter_id
    LEFT OUTER JOIN post_hiv_test_counselling pht ON pht.encounter_id = pedd.encounter_id
    LEFT OUTER JOIN hiv_self_testing hst ON hst.encounter_id = pedd.encounter_id

    where ppv.program_id = (SELECT program_id FROM programs_default WHERE program_name= 'HTS Program')
    AND (pedd.encounter_id in (select encounter_id from provider_hiv_test_counselling
                                UNION select encounter_id from post_hiv_test_counselling
                                UNION select encounter_id from hiv_self_testing))

    GROUP BY hst.id_hiv_self_testing,phtc.id_provider_hiv_test_counselling
    ORDER BY date_created DESC;"
 },
 {
 "name": "viac_program_events_table",
 "sql": "select
        'vatFxlZR2lj':: TEXT as program,
        'YoxZS1bsBaW':: TEXT as program_stage,
        max(case when viac.\"viac_form_site_type\" = 'Outreach'
           then concat('ZWNSC-OU-',upper(COALESCE(viac.viac_form_facility,(SELECT viac_form_facility
           FROM viac_form_template
           WHERE viac_form_facility IS NOT NULL
           AND patient_id = ppv.patient_id
           ORDER BY encounter_id DESC
           LIMIT 1))),'-',upper(viac.\"viac_form_district\"))
           ELSE concat('ZWNSC-',upper(COALESCE(viac_form_facility,(SELECT viac_form_facility
           FROM viac_form_template
           WHERE viac_form_facility IS NOT NULL
           AND patient_id = ppv.patient_id
           ORDER BY encounter_id DESC
           LIMIT 1))))
           end) as \"OrgUnit\",
        max(date(viac.\"obs_datetime\")) as \"event_date\",
        'COMPLETED' :: TEXT as status,
        max(pedd.\"visit_id\") as \"event_unique_id\",
        max(ppv.patient_program_id) as \"patient_program_id\",
        max(DATE(ppv.\"date_enrolled\"))  as \"enrollment_date\",
        max(viac.\"date_created\") as \"date_created\",
        max(pi.\"Patient_Identifier\") as \"Patient_Identifier\",
        max(viac.\"viac_form_site_type\") as \"Site Type\",
        max(viac.\"viac_form_setting\") as \"Setting\",
        max(viac.\"viac_form_gravida\") as \"Gravida\",
        max(viac.\"viac_form_parity\") as \"Parity\",
        string_agg(
        case
        when viac.\"viac_form_type_of_visit\" = 'Viac Form, Initial (never been screened before for CaCx)' then 'Initial (never been screened before for CaCx)'
        when viac.\"viac_form_type_of_visit\" = 'Viac Form, Repeat' then 'Repeat'
        when viac.\"viac_form_type_of_visit\" = 'Viac Form, Treatment' then 'Treatment'
        when viac.\"viac_form_type_of_visit\" = 'Viac Form, Review after' then 'Review after'
        when viac.\"viac_form_type_of_visit\" = 'Viac Form, VIAC after Positive HPV DNA Test' then 'VIAC after Positive HPV DNA Test'
        when viac.\"viac_form_type_of_visit\" = 'Viac Form, Counseling Only' then 'Counseling Only'
        end ,', ') as \"Type of visit\",
        string_agg(
        case
        when viac.\"viac_form_repeat_specify_period\" = '1 year' then '1 year'
        when viac.\"viac_form_repeat_specify_period\" = 'Viac Form, 2 Years' then '2 years'
        when viac.\"viac_form_repeat_specify_period\" = 'Viac Form, 3 Years' then '3 Years'
        when viac.\"viac_form_repeat_specify_period\" = 'Viac Form, 4 Years' then '4 Years'
        when viac.\"viac_form_repeat_specify_period\" = 'Viac Form, 5 Years' then '5 Years'
        when viac.\"viac_form_repeat_specify_period\" = 'Viac Form, >5 Years' then '>5 Years'
        end ,', ') as \"Specify period\",
        string_agg(
        case
        when viac.\"viac_form_treatment_specify_treatment\" = 'Viac Form, Cryotherapy' then 'Cryotherapy'
        when viac.\"viac_form_treatment_specify_treatment\" = 'Viac Form, Thermocoagulation' then 'Thermocoagulation'
        when viac.\"viac_form_treatment_specify_treatment\" = 'Viac Form, Treatment LEEP' then 'LEEP'
        end ,', ') as \"Specify treatment\",
        string_agg(
        case
        when viac.\"viac_form_review_after_specify_details\" = 'Viac Form, Cryotherapy' then 'Cryotherapy'
        when viac.\"viac_form_review_after_specify_details\" = 'Viac Form, Thermocoagulation' then 'Thermocoagulation'
        when viac.\"viac_form_review_after_specify_details\" = 'Viac Form, Review after LEEP' then 'LEEP'
        when viac.\"viac_form_review_after_specify_details\" = 'Viac Form, Antibiotics' then 'Antibiotics'
        when viac.\"viac_form_review_after_specify_details\" = 'Other' then 'Other'
        end ,', ') as \"Specify details for review after\",
        max(viac.\"viac_form_hiv_status\") as \"HIV Status\",
        max(viac.\"viac_form_age_at_sexual_debut\") as \"Age at sexual debut\",
        max(viac.\"viac_form_no_of_lifetime_partners\") as \"No. of lifetime partners\",
        max(viac.\"viac_form_presenting_complaints\") as \"Presenting complaints\",
        string_agg(
        case
        when viac.\"viac_form_presenting_complaints_specify_details\" = 'Viac Form, Lower Abdominal Pain' then 'Lower Abdominal Pain'
        when viac.\"viac_form_presenting_complaints_specify_details\" = 'Viac Form, Lower Back Pain' then 'Lower Back Pain'
        when viac.\"viac_form_presenting_complaints_specify_details\" = 'Viac Form, Pelvic Inflamatory Disease' then 'Pelvic Inflamatory Disease'
        when viac.\"viac_form_presenting_complaints_specify_details\" = 'Viac Form, PV Discharge' then 'PV Discharge'
        when viac.\"viac_form_presenting_complaints_specify_details\" = 'Viac Form, PV Bleeding' then 'PV Bleeding'
        when viac.\"viac_form_presenting_complaints_specify_details\" = 'Other' then 'Other'
        end ,', ') as \"Specify details for presenting complaints\",
        max(viac.\"viac_form_ever_treated_for_stis\") as \"Ever treated for STIs\",
        string_agg(
        case
        when viac.\"viac_form_ever_treated_for_stis_specify_details\" = 'Viac Form, Genital Ulcer Disease' then 'Genital Ulcer Disease'
        when viac.\"viac_form_ever_treated_for_stis_specify_details\" = 'Viac Form, Vaginal Discharge Syndrome' then 'Vaginal Discharge Syndrome'
        when viac.\"viac_form_ever_treated_for_stis_specify_details\" = 'Viac Form, Pelvic Inflamatory Disease' then 'Pelvic Inflamatory Disease'
        when viac.\"viac_form_ever_treated_for_stis_specify_details\" = 'Viac Form, Genital Herpes' then 'Genital Herpes'
        when viac.\"viac_form_ever_treated_for_stis_specify_details\" = 'Viac Form, Genital warts' then 'Genital warts'
        when viac.\"viac_form_ever_treated_for_stis_specify_details\" = 'Other' then 'Other'
        end ,', ') as \"Specify details for ever treated for STIs\",
        string_agg(
        case
        when viac.\"viac_form_condom_use_with_regular_non_regular_partner\" = 'Always' then 'Always'
        when viac.\"viac_form_condom_use_with_regular_non_regular_partner\" = 'Sometimes' then 'Sometimes'
        when viac.\"viac_form_condom_use_with_regular_non_regular_partner\" = 'Never' then 'Never'
        when viac.\"viac_form_condom_use_with_regular_non_regular_partner\" = 'Viac Form, Abstinent' then 'Abstinent'
        end ,', ') as \"Condom use with regular/non regular partner\",
        string_agg(
        case
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Emergency contraception' then 'Emergency contraception'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Projesterone only pill (POP)' then 'Projesterone only pill (POP)'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Combined oral contaceptive (COC)' then 'Combined oral contaceptive (COC)'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Injectable (Petogen)' then 'Injectable (Petogen)'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Implanon Implants' then 'Implanon Implants'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Jadelle Implants' then 'Jadelle Implants'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Copper T IUCD' then 'Copper T IUCD'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, LNG-IUS IUCD' then 'LNG-IUS IUCD'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Vasectomy' then 'Vasectomy'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Tuberligation' then 'Tuberligation'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Viac Form, Condoms' then 'Condoms'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'None' then 'None'
        when viac.\"viac_form_prior_family_planning_predominantly_used\" = 'Other' then 'Other'
        end ,', ') as \"Prior family planning predominantly used\",
        max(viac.\"viac_form_have_you_ever_used_coc\") as \"Have you ever used COC\",
        string_agg(
        case
        when viac.\"viac_form_coc_for_how_many_years\" = 'Viac Form, less than 1' then '<1'
        when viac.\"viac_form_coc_for_how_many_years\" = '1 year' then '1 year'
        when viac.\"viac_form_coc_for_how_many_years\" = 'Viac Form, 2 Years' then '2 Years'
        when viac.\"viac_form_coc_for_how_many_years\" = 'Viac Form, 3 Years' then '3 Years'
        when viac.\"viac_form_coc_for_how_many_years\" = 'Viac Form, 4 Years' then '4 Years'
        when viac.\"viac_form_coc_for_how_many_years\" = 'Viac Form, 5 Years' then '5 Years'
        when viac.\"viac_form_coc_for_how_many_years\" = 'Viac Form, >5 Years' then '>5 Years'
        end ,', ') as \"For how many years on COC?\",
        max(case when viac.\"viac_form_history_of_smoking\" = 'Yes' then 1
                 when viac.\"viac_form_history_of_smoking\" = 'No' THEN 0
                    else null end) :: BOOLEAN as \"History of smoking\",
        string_agg(
        case
        when viac.\"viac_form_smoking_for_how_many_years\" = 'Viac Form, less than 1' then '<1'
        when viac.\"viac_form_smoking_for_how_many_years\" = '1 year' then '1 year'
        when viac.\"viac_form_smoking_for_how_many_years\" = 'Viac Form, 2 Years' then '2 Years'
        when viac.\"viac_form_smoking_for_how_many_years\" = 'Viac Form, 3 Years' then '3 Years'
        when viac.\"viac_form_smoking_for_how_many_years\" = 'Viac Form, 4 Years' then '4 Years'
        when viac.\"viac_form_smoking_for_how_many_years\" = 'Viac Form, 5 Years' then '5 Years'
        when viac.\"viac_form_smoking_for_how_many_years\" = 'Viac Form, >5 Years' then '>5 Years'
        end ,', ') as \"For how many years on Smoking\",
        max(viac.\"viac_form_current_medication_for_chronic_conditions\") as \"Current Medication for Chronic condition\",
        string_agg(
        case
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Viac Form, Anti-retrovirals' then 'Anti-retrovirals'
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Viac Form, Anti-hypertensives' then 'Anti-hypertensives'
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Viac Form, Diabetics' then 'Diabetics'
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Viac Form, Anti-Epleptics' then 'Anti-Epleptics'
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Viac Form, Chemotherapy' then 'Chemotherapy'
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Viac Form, Anti-Asthmatics' then 'Anti-Asthmatics'
        when viac.\"viac_form_chronic_conditions_specify_details\" = 'Other' then 'Other'
        end ,', ') as \"Specify details for chronic conditions\",
        max(case when viac.\"viac_form_prior_ca_cervix_screening_in_lifetime\" = 'Yes' then 1
                 when viac.\"viac_form_prior_ca_cervix_screening_in_lifetime\" = 'No' THEN 0
                    else null end) :: BOOLEAN as \"Prior CA CERVIX screening in lifetime\",

        string_agg(
        case
        when viac.\"viac_form_when_were_you_last_screened\" = 'Viac Form, less than 1' then '<1'
        when viac.\"viac_form_when_were_you_last_screened\" = '1 year' then '1 year'
        when viac.\"viac_form_when_were_you_last_screened\" = 'Viac Form, 2 Years' then '2 Years'
        when viac.\"viac_form_when_were_you_last_screened\" = 'Viac Form, 3 Years' then '3 Years'
        when viac.\"viac_form_when_were_you_last_screened\" = 'Viac Form, 4 Years' then '4 Years'
        when viac.\"viac_form_when_were_you_last_screened\" = 'Viac Form, 5 Years' then '5 Years'
        when viac.\"viac_form_when_were_you_last_screened\" = 'Viac Form, >5 Years' then '>5 Years'
        end ,', ') as \"When were you last screened?\",
        string_agg(
        case
        when viac.\"viac_form_method_used_in_your_last_screen\" = 'Viac Form, PAP SMEAR' then 'PAP SMEAR'
        when viac.\"viac_form_method_used_in_your_last_screen\" = 'Viac Form, VIAC' then 'VIAC'
        when viac.\"viac_form_method_used_in_your_last_screen\" = 'Viac Form, HPV DNA Testing' then 'HPV DNA Testing'
        end ,', ') as \"Method used in your last screen\",
        string_agg(
        case
        when viac.\"viac_form_screening_method_used_on_this_visit\" = 'Viac Form, VIAC/ VIA' then 'VIAC/ VIA'
        when viac.\"viac_form_screening_method_used_on_this_visit\" = 'Viac Form, HPV DNA' then 'HPV DNA'
        when viac.\"viac_form_screening_method_used_on_this_visit\" = 'Viac Form, PAP SMEAR' then 'PAP SMEAR'
        end ,', ') as \"Screening method used on this visit\",
        string_agg(
        case
        when viac.\"viac_form_specimen_collected_by\" = 'Viac Form, Self-collected specimen' then 'Self-collected specimen'
        when viac.\"viac_form_specimen_collected_by\" = 'Viac Form, Provider-collected specimen' then 'Provider-collected specimen'
        end ,', ') as \"Specimen collected by\",
        string_agg(
        case
        when viac.\"viac_form_result\" = 'Negative' then 'Negative'
        when viac.\"viac_form_result\" = 'Positive' then 'Positive'
        when viac.\"viac_form_result\" = 'Viac Form, Suspicious of Cancer' then 'Suspicious of Cancer'
        end ,', ') as \"Result\",
        string_agg(
        case
        when viac.\"viac_form_intervention\" = 'Viac Form, Eligible for Cryotherapy/thermocoagulation' then 'Eligible for Cryotherapy/thermocoagulation'
        when viac.\"viac_form_intervention\" = 'Viac Form, Eligible for LEEP' then 'Eligible for LEEP'
        when viac.\"viac_form_intervention\" = 'Viac Form, Extensive Lesion' then 'Extensive Lesion'
        end ,', ') as \"Intervention\",
        string_agg(
        case
        when viac.\"viac_form_other_pathological_lesions_seen\" = 'Viac Form, Polyps' then 'Polyps'
        when viac.\"viac_form_other_pathological_lesions_seen\" = 'Viac Form, Uterine Prolapse' then 'Uterine Prolapse'
        when viac.\"viac_form_other_pathological_lesions_seen\" = 'Viac Form, Nabothian Cysts' then 'Nabothian Cysts'
        when viac.\"viac_form_other_pathological_lesions_seen\" = 'Viac Form, Strawberry Lesions' then 'Strawberry Lesions'
        when viac.\"viac_form_other_pathological_lesions_seen\" = 'Other' then 'Other '
        end ,', ') as \"Other pathological lesions seen\"
        from psi_patient_program_data ppv
                join viac_form_template viac on ppv.patient_id = viac.patient_id
                join patient_identifier pi on ppv.patient_id = pi.patient_id
                join person_attributes pa on ppv.patient_id = pa.person_id
                join person_address_default pad on pa.person_id = pad.person_id
                join patient_encounter_table pedd on viac.encounter_id = pedd.encounter_id
                where ppv.program_id = (select program_id from programs_default where program_name = 'VIAC Program')
                group by viac.id_viac_form_template,viac.patient_id
                order by viac.id_viac_form_template desc;"
},
{
 "name": "fps_program_events_table",
 "sql": "SELECT
        'vatFxlZR2lj':: TEXT AS program,
        'KeomfqRdu8Q':: TEXT AS program_stage,
        'COMPLETED' :: TEXT AS status,

        max(CASE WHEN fps.\"fps_form_site_type\" = 'Outreach'
              THEN concat('ZWNSC-OU-',upper(
                   COALESCE(fps.\"fps_form_facility\", (SELECT \"fps_form_facility\" FROM fps_family_planning_service fps_temp WHERE fps_form_facility IS NOT NULL AND fps_temp.patient_id = pedd.patient_id
                      ORDER BY fps_temp.encounter_id DESC LIMIT 1))),'-',upper( fps.\"fps_district\"))
         ELSE concat('ZWNSC-',upper(
              COALESCE(fps.\"fps_form_facility\",  (SELECT \"fps_form_facility\" FROM fps_family_planning_service fps_temp WHERE fps_form_facility IS NOT NULL AND fps_temp.patient_id = pedd.patient_id
              ORDER BY fps_temp.encounter_id DESC LIMIT 1))))
         END) AS \"OrgUnit\",

         max(pedd.\"visit_id\") AS \"event_unique_id\",
         max(ppv.patient_program_id) as \"patient_program_id\",
         max(DATE(ppv.\"date_enrolled\"))  AS \"enrollment_date\",

         max(CASE WHEN COALESCE(fps.obs_datetime, '01-01-0001' ) >= COALESCE(fpc.obs_datetime, '01-01-0001' )
                AND  COALESCE(fps.obs_datetime, '01-01-0001' ) >=  COALESCE(fpcounselling.obs_datetime, '01-01-0001' )
            THEN date(fps.obs_datetime)

            WHEN ( COALESCE(fpc.obs_datetime, '01-01-0001' ) >= COALESCE(fps.obs_datetime, '01-01-0001' ) )
                 AND ( COALESCE(fpc.obs_datetime, '01-01-0001' ) >= COALESCE(fpcounselling.obs_datetime, '01-01-0001' ) )
            THEN date(fpc.obs_datetime)
         ELSE
            date(fpcounselling.obs_datetime)
         END) AS \"event_date\",

         max(CASE WHEN COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created, '01-01-0001 00:00:00' )
                AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_created, '01-01-0001 00:00:00' )
             THEN fps.date_created

            WHEN COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created, '01-01-0001 00:00:00' )
                 AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_created, '01-01-0001 00:00:00' )
            THEN fpc.date_created
        ELSE
            fpcounselling.date_created
        END) AS \"date_created\",

         max(pi.\"Patient_Identifier\") AS \"Patient_Identifier\",
         max(pdd.age) AS \"Age\",

         max(CASE WHEN fps.\"fps_reg_is_client_accompanied_by_her_partner\" = 'Yes' THEN 1
                  WHEN fps.\"fps_reg_is_client_accompanied_by_her_partner\" = 'No' THEN 0
             ELSE NULL END) :: BOOLEAN AS \"Is client accompanied by her Partner\",

         max(fps.\"fps_reg_reason_for_the_visit\") AS \"Reason for the visit\",
         max(fps.\"fps_reg_reason_for_family_planning\") AS \"Reason for family planning\",

         max(CASE WHEN fps.\"fps_reg_occasion\" = 'FPS REG,Post Partum' THEN 'Post Partum'
                         WHEN fps.\"fps_reg_occasion\" = 'FPS REG,Post abortion' THEN 'Post abortion'
                         WHEN fps.\"fps_reg_occasion\" = 'FPS REG,Interval' THEN 'Interval'
                     END) AS \"Occasion\",

       max(CASE WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Friend/Relative' THEN 'Friend/Relative'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Other FP client' THEN 'Other FP client'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Partner/Spouse' THEN 'Partner/Spouse'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Health worker' THEN 'Health worker'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Poster/Leaflet/Brochure' THEN 'Poster/Leaflet/Brochure'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Community Mobilizer' THEN 'Community Mobilizer'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,TV' THEN 'TV'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Radio' THEN 'Radio'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,New Start T&C/New Life' THEN 'New Start T&C/New Life'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Other T&C service provider' THEN 'Other T&C service provider'
                        WHEN fps.\"fps_reg_how_did_you_hear_about_the_fp_services_at_sites\" = 'FPS REG,Other site' THEN 'Other site'
                        END) AS \"How did you hear about the FP services at sites?\",

           max(fps.\"fps_form_other_for_how_did_you_hear_about_the_fp_services_a\") AS \"If other, specify details\",
           max(fps.\"fps_form_referred_in_for\") AS \"Referred in for\",
           max(fps.\"fps_form_menarche\") AS \"Menarche\",
           max(fps.\"fps_form_lnmp\") AS \"LNMP\",
           max(fps.fps_form_menstrual_cycle_no_of_bleeding_days_length_of_cycl) AS \"Menstrual Cycle\",
           max(fps.\"fps_form_no_of_bleeding_days_length_of_cycle\") AS \"Number of bleeding days\",
           max(fps.\"fps_form_number_of_living_children_indicate_number_and_ages\") AS \"Number of Children and ages\",
           max(fps.\"fps_form_date_of_last_delivery\") AS \"Date of last delivery\",

           max(CASE WHEN fps.\"fps_form_used_checklist_to_exclude_pregnancy\" = 'Yes' THEN 1
                    WHEN fps.\"fps_form_used_checklist_to_exclude_pregnancy\" = 'No' THEN 0
               ELSE NULL END) :: BOOLEAN AS \"Used checklist to exclude pregnancy\",

       max(CASE WHEN  fps.\"fps_form_have_you_ever_used_any_contraception_before_tick_a\" IS NOT NULL THEN
                (SELECT string_agg (
                                CASE WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Vasectomy' THEN 'Vasecotomy'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a  = 'FPS FORM,Projesterone only pill (POP)' THEN 'Projesterone only pill (POP)'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Injectable (Petogen)' THEN 'Injectable'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a  = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Copper T IUCD' THEN 'Copper T IUCD'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a  = 'FPS FORM,LNG-IUS IUCD' THEN 'LNG-IUS IUCD'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Tuberligation' THEN 'Tuberligation'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'Condoms' THEN 'Condoms'
                                    WHEN fps_form_have_you_ever_used_any_contraception_before_tick_a = 'None' THEN 'None'
                                    END ,', ') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
                ELSE NULL
                END ) AS \"Ever used contraception before\",

           max(fps.\"fps_form_p_v_loss\") AS \"P.V. Loss\",
           max(CASE WHEN fps.\"fps_form_post_coital_bleeding\" = 'Yes' THEN 1
                         WHEN fps.\"fps_form_post_coital_bleeding\" = 'No' THEN 0
                    ELSE NULL END) :: BOOLEAN AS \"Post coital bleeding\",

            CASE WHEN max(fps.\"fps_form_pain_during_intercourse_dyspareunia\") ='Yes' THEN 1
                     WHEN max(fps.\"fps_form_pain_during_intercourse_dyspareunia\") ='No' THEN 0
                ELSE NULL END :: BOOLEAN AS \"Pain during intercourse\",

             max(CASE WHEN fps.\"fps_form_any_discharge\" = 'Yes' THEN 1
                         WHEN fps.\"fps_form_any_discharge\" = 'No' THEN 0
                   ELSE NULL END) :: BOOLEAN AS \"Any Discharge\",

             max(CASE WHEN fps.\"fps_form_pain_during_micturation\" = 'Yes' THEN 1
                         WHEN fps.\"fps_form_pain_during_micturation\" = 'No' THEN 0
                    ELSE NULL END) :: BOOLEAN AS \"Pain during micturation\",

             max(CASE WHEN fps.\"fps_form_allergies_state_below_if_any\" = 'Yes' THEN 1
                        WHEN fps.\"fps_form_allergies_state_below_if_any\" = 'No' THEN 0
                    ELSE NULL END) :: BOOLEAN AS \"Allergies (state below if any)\",

             CASE WHEN string_agg(
                                  CASE
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Varicose Veins' THEN 'Varicose Veins'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Anemia' THEN 'Anemia'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'Diabetes Mellitus' THEN 'Diabetes Mellitus'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Thromboplebitis' THEN 'Thromboplebitis'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Heart condition' THEN 'Heart condition'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Liver problems' THEN 'Liver problems'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Epilepsy' THEN 'Epilepsy'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Cancer of the breast' THEN 'Cancer of the breast'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'N/A' THEN 'N/A'
                                END ,', ') != 'N/A' AND
            string_agg(
                                  CASE WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Varicose Veins' THEN 'Varicose Veins'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Anemia' THEN 'Anemia'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'Diabetes Mellitus' THEN 'Diabetes Mellitus'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Thromboplebitis' THEN 'Thromboplebitis'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Heart condition' THEN 'Heart condition'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Liver problems' THEN 'Liver problems'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Epilepsy' THEN 'Epilepsy'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'FPS FORM,Cancer of the breast' THEN 'Cancer of the breast'
                                  WHEN fps.\"fps_form_does_the_client_have_a_history_of_any_of_the_follo\" = 'N/A' THEN 'N/A'
                                END ,', ') IS NOT NULL THEN  1
                ELSE NULL END :: BOOLEAN AS \"Does the client have a History\",

            max(CASE WHEN fps.\"fps_form_any_other_illness\" = 'Yes' THEN 1
                     WHEN fps.\"fps_form_any_other_illness\" = 'No' THEN 0
                 ELSE NULL END) :: BOOLEAN AS \"Any other illness?\",

            max(fps.\"fps_form_clinical_history\") AS \"Clinical History\",
            max(fps.\"fps_form_hiv_infection\") AS \"HIV infection?\",
            max(fps.\"fps_form_diagnosed_when\") AS \"Diagnosed when?\",
            max(fps.\"fps_form_recent_cd4_cell_count\") AS \"Recent CD4 cell count\",

            max(CASE WHEN fps.\"fps_form_currently_receiving_art\" = 'Yes' THEN 1
                    WHEN fps.\"fps_form_currently_receiving_art\" = 'No' THEN 0
                    ELSE NULL END) :: BOOLEAN AS \"Currently receiving ART?\",

           max(CASE WHEN fps.\"fps_form_in_the_past_included_in_pmtct_program\" = 'Yes' THEN 1
                WHEN fps.\"fps_form_in_the_past_included_in_pmtct_program\" = 'No' THEN 0
                    ELSE NULL END) :: BOOLEAN AS \"In the past included in PMTCT program?\",

           max(CASE WHEN fps.\"fps_form_is_the_client_taking_any_medications\" = 'Yes' THEN 1
                   WHEN fps.\"fps_form_is_the_client_taking_any_medications\" = 'No' THEN 0
              ELSE NULL END) :: BOOLEAN AS \"Is the client taking any medications\",

            max(CASE WHEN fps.\"fps_form_did_the_client_have_any_surgical_operation\" = 'Yes' THEN 1
                   WHEN fps.\"fps_form_did_the_client_have_any_surgical_operation\" = 'No' THEN 0
              ELSE NULL END) :: BOOLEAN AS \"Did the client have any surgical operation?\",

            CASE WHEN string_agg(CASE WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Heart' THEN 'Heart'
                                WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Lung' THEN 'Lung'
                                WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Abdomen' THEN 'Abdomen'
                                WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Head, neck, mouth, throat, ears' THEN 'Head, neck, mouth, throat, ears'
                                WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Limbs' THEN 'Limbs'
                                WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Breasts' THEN 'Breasts'
                                WHEN fps.\"fps_form_general_clinical_examination_any_clinical_abnormal\" = 'FPS FORM,Skin' THEN 'Skin'
                END ,', ') IS NOT NULL THEN 1
                ELSE 0 END :: BOOLEAN AS \"General clinical examination\",


        max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_weight IS NOT NULL
                    THEN fps.fps_form_weight
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_weight IS NOT NULL
                    THEN fpc.fp_continuation_weight
              ELSE
                  fpcounselling.fp_counselling_only_weight
         END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fp_continuation_weight IS NOT NULL
              THEN fpc.fp_continuation_weight
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_weight IS NOT NULL
              THEN fps.fps_form_weight
              ELSE
                fpcounselling.fp_counselling_only_weight
              END
      ELSE
         CASE WHEN fpcounselling.fp_counselling_only_weight IS NOT NULL
              THEN fpcounselling.fp_counselling_only_weight
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_weight IS NOT NULL
              THEN fps.fps_form_weight
              ELSE
                  fpc.fp_continuation_weight
              END
      END) AS \"Weight\",
        max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_bp_systolic IS NOT NULL
              THEN fps.fps_bp_systolic
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_bp_systolic IS NOT NULL
              THEN fpc.fp_continuation_bp_systolic
              ELSE
                  fpcounselling.fps_counselling_only_bp_systolic
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fp_continuation_bp_systolic IS NOT NULL
              THEN fpc.fp_continuation_bp_systolic
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_bp_systolic IS NOT NULL
              THEN fps.fps_bp_systolic
              ELSE
                fpcounselling.fps_counselling_only_bp_systolic
              END
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_bp_systolic IS NOT NULL
              THEN fpcounselling.fps_counselling_only_bp_systolic
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' ) AND fps.fps_bp_systolic IS NOT NULL
              THEN fps.fps_bp_systolic
              ELSE
                  fpc.fp_continuation_bp_systolic
              END
      END) AS \"BP Systolic\",

      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_bp_diastolic IS NOT NULL
              THEN fps.fps_bp_diastolic
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_bp_diastolic IS NOT NULL
              THEN fpc.fp_continuation_bp_diastolic
              ELSE
                  fpcounselling.fps_counselling_only_bp_diastolic
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fp_continuation_bp_diastolic IS NOT NULL
              THEN fpc.fp_continuation_bp_diastolic
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_bp_diastolic IS NOT NULL
              THEN fps.fps_bp_diastolic
              ELSE
                fpcounselling.fps_counselling_only_bp_diastolic
              END
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_bp_diastolic IS NOT NULL
              THEN fpcounselling.fps_counselling_only_bp_diastolic
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' ) AND fps.fps_bp_diastolic IS NOT NULL
              THEN fps.fps_bp_diastolic
              ELSE
                  fpc.fp_continuation_bp_diastolic
              END
      END) AS \"BP Diastolic\",

      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_temp IS NOT NULL
              THEN fps.fps_form_temp
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fp_cont_form_temperature IS NOT NULL
              THEN fpc.fp_cont_form_temperature
              ELSE
                  fpcounselling.fp_couns_form_temperature
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fp_cont_form_temperature IS NOT NULL
              THEN fpc.fp_cont_form_temperature
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_temp IS NOT NULL
              THEN fps.fps_form_temp
              ELSE
                fpcounselling.fp_couns_form_temperature
              END
      ELSE
         CASE WHEN fpcounselling.fp_couns_form_temperature IS NOT NULL
              THEN fpcounselling.fp_couns_form_temperature
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_temp IS NOT NULL
              THEN fps.fps_form_temp
              ELSE
                  fpc.fp_cont_form_temperature
              END
      END) AS \"Temperature\",

           max(fps.\"fps_form_p\") AS \"P\",
           max(fps.\"fps_form_r\") AS \"R\",

           max(CASE WHEN  fps.\"fps_form_genital_examination_does_the_client_have_any_of_th\" IS NOT NULL THEN
                (SELECT string_agg (
                                CASE WHEN fps_form_genital_examination_does_the_client_have_any_of_th = 'FPS FORM,Vulvar warts' THEN 'Vulvar warts'
                                    WHEN fps_form_genital_examination_does_the_client_have_any_of_th  = 'FPS FORM,Genital ulcer' THEN 'Genital ulcer'
                                    WHEN fps_form_genital_examination_does_the_client_have_any_of_th = 'FPS FORM,lesions syndrome' THEN 'lesions syndrome'
                                    WHEN fps_form_genital_examination_does_the_client_have_any_of_th = 'FPS FORM,Vaginal Discharge syndrome' THEN 'Vaginal Discharge syndrome'
                                    WHEN fps_form_genital_examination_does_the_client_have_any_of_th  ='FPS FORM,PID' THEN 'PID'
                                    WHEN fps_form_genital_examination_does_the_client_have_any_of_th = 'Other' THEN 'Other'
                                    END ,', ') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
                ELSE NULL
                END ) AS \"Genital examination: Does the client have any of the following conditions?\",

         max(fps.\"fps_form_uterus_size\") AS \"Uterus Size\",
         max(fps.\"fps_form_uterus_position\") AS \"Uterus Position\",
         max(fps.\"fps_form_adnexae_comment\") AS \"Adnexae (comment)\",
         max(fps.fps_form_diagnosis) AS \"Diagnosis\",

         string_agg(CASE WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Projesterone only pill (POP)' THEN 'Projesterone only pill (POP)'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Injectable (Petogen)' THEN 'Injectables'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Copper T IUCD' THEN 'Copper T IUCD'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,LNG-IUS IUCD' THEN 'LNG-IUS IUCD'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Vasectomy' THEN 'Vasectomy'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                WHEN fps.\"fps_form_preferred_method_state\" = 'FPS FORM,Tuberligation' THEN 'Tuberligation'
                END ,', ') AS \"Preferred method (state)\",

          max(CASE WHEN fps.\"fps_form_changing_state\" = 'Yes' THEN 1
                   WHEN fps.\"fps_form_changing_state\" = 'No' THEN 0
              ELSE NULL END) :: BOOLEAN AS \"Changing State\",

          max(CASE WHEN fps.\"fps_form_medically_eligible\" = 'Yes' THEN 1
                   WHEN fps.\"fps_form_medically_eligible\" = 'No' THEN 0
              ELSE NULL END) :: BOOLEAN AS \"Medically eligible\",

          CASE WHEN max(fps.\"fps_form_pregnancy_test\") ='Yes' THEN 1
              WHEN max(fps.\"fps_form_pregnancy_test\") ='No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Pregnancy test (Negative/positive)\",

          max(fps.fps_form_if_yes_for_pregnancy_test) AS \"Result of Pregnancy test\" ,

            max(CASE WHEN  fps.fps_form_method_issued_and_or_administered IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,'01-01-0001 00:00:00' )
             THEN
                  CASE WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Projesterone only pill (POP)' THEN 'Projesterone only pill (POP)'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Injectable (Petogen)' THEN 'Injectable'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Copper T IUCD' THEN 'Copper T IUCD'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,LNG-IUS IUCD' THEN 'LNG-IUS IUCD'
                       WHEN  fps.fps_form_method_issued_and_or_administered = 'FPS FORM,Vasectomy' THEN 'Vasectomy'
                       WHEN  fps.fps_form_method_issued_and_or_administered = 'FPS FORM,Tuberligation' THEN 'Tuberligation'
                  END
             WHEN  fps.fps_form_method_issued_and_or_administered IS NULL
             THEN
                  CASE WHEN  fps_continuation_method_administered ='FPS FORM,Projesterone only pill (POP)' THEN 'Projesterone only pill (POP)'
                       WHEN  fps_continuation_method_administered ='FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN  fps_continuation_method_administered ='FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC'
                       WHEN  fps_continuation_method_administered ='Injectables' THEN ' Injectables'
                       WHEN  fps_continuation_method_administered ='FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN  fps_continuation_method_administered ='FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                       WHEN  fps_continuation_method_administered ='IUCD' THEN 'IUCD'
                       WHEN  fps_continuation_method_administered ='TUBAL LIGATION' THEN 'TUBAL LIGATION'
                       WHEN  fps_continuation_method_administered = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                       WHEN  fps_continuation_method_administered = 'Condoms' THEN 'Condoms'
                  END

             WHEN fps_continuation_method_administered IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN
                 CASE WHEN  fps_continuation_method_administered ='FPS FORM,Projesterone only pill (POP)' THEN 'Projesterone only pill (POP)'
                       WHEN  fps_continuation_method_administered ='FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN  fps_continuation_method_administered ='FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC'
                       WHEN  fps_continuation_method_administered ='Injectables' THEN ' Injectables'
                       WHEN  fps_continuation_method_administered ='FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN  fps_continuation_method_administered ='FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                       WHEN  fps_continuation_method_administered ='IUCD' THEN 'IUCD'
                       WHEN  fps_continuation_method_administered ='TUBAL LIGATION' THEN 'TUBAL LIGATION'
                       WHEN  fps_continuation_method_administered = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                       WHEN  fps_continuation_method_administered = 'Condoms' THEN 'Condoms'
                  END
             WHEN  fps_continuation_method_administered IS NULL
             THEN
                 CASE WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Projesterone only pill (POP)' THEN 'Projesterone only pill (POP)'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Injectable (Petogen)' THEN 'Injectable'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,Copper T IUCD' THEN 'Copper T IUCD'
                       WHEN  fps.fps_form_method_issued_and_or_administered ='FPS FORM,LNG-IUS IUCD' THEN 'LNG-IUS IUCD'
                       WHEN  fps.fps_form_method_issued_and_or_administered = 'FPS FORM,Vasectomy' THEN 'Vasectomy'
                       WHEN  fps.fps_form_method_issued_and_or_administered = 'FPS FORM,Tuberligation' THEN 'Tuberligation'
                  END
             ELSE NULL
         END) AS \"Method issued and/or administered\",

          max(CASE WHEN fps.\"fps_form_dual_protection_discussed\" = 'Yes' THEN 1
                WHEN fps.\"fps_form_dual_protection_discussed\" = 'No' THEN 0
            ELSE NULL END) :: BOOLEAN AS \"Dual Protection discussed\",

          max(fps.\"fps_form_name_of_counselor\") AS \"Name of Counselor\",
          max(CASE WHEN fps.\"fps_form_device_removal\" = 'Yes' THEN 1
                WHEN fps.\"fps_form_device_removal\" = 'No' THEN 0
              ELSE NULL END) :: BOOLEAN AS \"Device removal\",

          max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
              AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
          THEN
          CASE WHEN fps.fps_form_fp_type IS NOT NULL
              THEN
                CASE WHEN fps.fps_form_fp_type = 'FPS FORM,Implanon' THEN 'Implanon'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,Jadelle' THEN 'Jadelle'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,Copper T' THEN 'Copper T'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                     END
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fps_continuation_removal_method IS NOT NULL
              THEN
                  CASE WHEN fpc.fps_continuation_removal_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN fpc.fps_continuation_removal_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN fpc.fps_continuation_removal_method = 'IUCD' THEN 'IUCD'
                       WHEN fpc.fps_continuation_removal_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                  END

              ELSE

                  CASE WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Implanon' THEN 'Implanon'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Jadelle' THEN 'Jadelle'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Copper T' THEN 'Copper T'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,LNG-IUS' THEN 'LNG-IUS'
                  END
              END

       WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fps_continuation_removal_method IS NOT NULL
              THEN
                  CASE WHEN fpc.fps_continuation_removal_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN fpc.fps_continuation_removal_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN fpc.fps_continuation_removal_method = 'IUCD' THEN 'IUCD'
                       WHEN fpc.fps_continuation_removal_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                  END
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_fp_type IS NOT NULL
              THEN
                  CASE WHEN fps.fps_form_fp_type = 'FPS FORM,Implanon' THEN 'Implanon'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,Jadelle' THEN 'Jadelle'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,Copper T' THEN 'Copper T'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                     END
              ELSE
                CASE WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Implanon' THEN 'Implanon'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Jadelle' THEN 'Jadelle'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Copper T' THEN 'Copper T'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,LNG-IUS' THEN 'LNG-IUS'
                  END
              END
      ELSE
         CASE WHEN fpcounselling.fp_counselling_only_fp_type IS NOT NULL
              THEN
                  CASE WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Implanon' THEN 'Implanon'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Jadelle' THEN 'Jadelle'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,Copper T' THEN 'Copper T'
                       WHEN fpcounselling.fp_counselling_only_fp_type = 'FP Counselling Only,LNG-IUS' THEN 'LNG-IUS'
                  END
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_fp_type IS NOT NULL
              THEN
                 CASE WHEN fps.fps_form_fp_type = 'FPS FORM,Implanon' THEN 'Implanon'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,Jadelle' THEN 'Jadelle'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,Copper T' THEN 'Copper T'
                     WHEN fps.fps_form_fp_type = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                     END
              ELSE
                  CASE WHEN fpc.fps_continuation_removal_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                       WHEN fpc.fps_continuation_removal_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                       WHEN fpc.fps_continuation_removal_method = 'IUCD' THEN 'IUCD'
                       WHEN fpc.fps_continuation_removal_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                  END
              END
      END) AS \"FP type\",

     max(CASE WHEN  fps.fps_form_expiry_date IS NOT NULL AND (COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created, '01-01-0001 00:00:00' ))
             THEN fps.fps_form_expiry_date
             WHEN  fps.fps_form_expiry_date IS NULL
             THEN  fpc.fp_continuation_expiry_date_of_the_method_given
             WHEN fpc.fp_continuation_expiry_date_of_the_method_given IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_continuation_expiry_date_of_the_method_given
             WHEN  fpc.fp_continuation_expiry_date_of_the_method_given IS NULL
             THEN fps.fps_form_expiry_date
             ELSE NULL
         END) AS \"Expiry Date\",

       max(CASE WHEN fps.\"fps_form_state_reason_for_removal\" = 'FPS FORM,Expired' THEN 'Expired'
                                WHEN fps.\"fps_form_state_reason_for_removal\" = 'FPS FORM,Desire TO be pregnant' THEN 'Desire TO be pregnant'
                                WHEN fps.\"fps_form_state_reason_for_removal\" = 'FPS FORM,Health concerns' THEN 'Health concerns'
                                WHEN fps.\"fps_form_state_reason_for_removal\" = 'FPS FORM,Complications' THEN 'Complications'
                                WHEN fps.\"fps_form_state_reason_for_removal\" = 'Other' THEN 'Other'
                END) AS \"State reason for removal\",

      max(CASE WHEN fps.\"fps_form_device_inserted_by\" = 'FPS FORM,PSI/PSF' THEN 'PSI/PSF'
                      WHEN fps.\"fps_form_device_inserted_by\" = 'Other' THEN 'Other'
                      WHEN fps.\"fps_form_device_inserted_by\" = 'UNKNOWN' THEN 'UNKNOWN'
                END ) AS \"Device Inserted by\",

      max(CASE WHEN  fps.fp_initial_form_state_procedure IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,            '01-01-0001 00:00:00' )
             THEN fps.fp_initial_form_state_procedure
             WHEN  fps.fp_initial_form_state_procedure IS NULL
             THEN  fpc.fps_continuation_state_procedure
             WHEN fpc.fps_continuation_state_procedure IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fps_continuation_state_procedure
             WHEN  fpc.fps_continuation_state_procedure IS NULL
             THEN fps.fp_initial_form_state_procedure
             ELSE NULL
         END) AS \"State Procedure\",

      max(CASE WHEN  fps.fps_form_date_of_procedure_indicate IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,            '01-01-0001 00:00:00' )
             THEN fps.fps_form_date_of_procedure_indicate
             WHEN  fps.fps_form_date_of_procedure_indicate IS NULL
             THEN  fpc.fp_continuation_date_of_procedure_indicate
             WHEN fpc.fp_continuation_date_of_procedure_indicate IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_continuation_date_of_procedure_indicate
             WHEN  fpc.fp_continuation_date_of_procedure_indicate IS NULL
             THEN fps.fps_form_date_of_procedure_indicate
             ELSE NULL
         END) AS \"Date of Procedure indicate\",

       max(CASE WHEN  fps_form_pre_procedure_counseling_and_assessment_conducted IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created, '01-01-0001 00:00:00' )
             THEN
                  CASE WHEN  fps.\"fps_form_pre_procedure_counseling_and_assessment_conducted\" = 'Yes' THEN 1
                       WHEN  fps.\"fps_form_pre_procedure_counseling_and_assessment_conducted\" = 'No' THEN 0
                    ELSE NULL END
             WHEN  fps_form_pre_procedure_counseling_and_assessment_conducted IS NULL
             THEN
                 CASE WHEN fp_continuation_pre_procedure_counseling_and_assessment_con = 'Yes' THEN 1
                       WHEN fp_continuation_pre_procedure_counseling_and_assessment_con = 'No' THEN 0
                  ELSE NULL END
             WHEN fp_continuation_pre_procedure_counseling_and_assessment_con IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN
                 CASE WHEN fp_continuation_pre_procedure_counseling_and_assessment_con = 'Yes' THEN 1
                       WHEN fp_continuation_pre_procedure_counseling_and_assessment_con = 'No' THEN 0
                  ELSE NULL END
             WHEN  fp_continuation_pre_procedure_counseling_and_assessment_con IS NULL
             THEN
                CASE WHEN  fps.\"fps_form_pre_procedure_counseling_and_assessment_conducted\" = 'Yes' THEN 1
                       WHEN  fps.\"fps_form_pre_procedure_counseling_and_assessment_conducted\" = 'No' THEN 0
                    ELSE NULL END
             ELSE NULL
         END) :: BOOLEAN AS \"Pre-Procedure counseling and assessment conducted?\",


         max(CASE WHEN  fps_form_indicate_name_of_counselor IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created, '01-01-0001 00:00:00' )
             THEN fps.fps_form_indicate_name_of_counselor
             WHEN  fps.fps_form_indicate_name_of_counselor IS NULL
             THEN  fpc.fp_continuation_indicate_name_of_counselor
             WHEN fpc.fp_continuation_indicate_name_of_counselor IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_continuation_indicate_name_of_counselor
             WHEN  fpc.fp_continuation_indicate_name_of_counselor IS NULL
             THEN fps.fps_form_indicate_name_of_counselor
             ELSE NULL
         END) AS \"Indicate name of counsellor\",

         max(CASE WHEN  fps.fps_form_start_of_procedure_indicate_time IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,            '01-01-0001 00:00:00' )
             THEN fps.fps_form_start_of_procedure_indicate_time
             WHEN  fps.fps_form_start_of_procedure_indicate_time IS NULL
             THEN  fpc.fp_cont_form_start_of_procedure_indicate_time
             WHEN fpc.fp_cont_form_start_of_procedure_indicate_time IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_cont_form_start_of_procedure_indicate_time
             WHEN  fpc.fp_cont_form_start_of_procedure_indicate_time IS NULL
             THEN fps.fps_form_start_of_procedure_indicate_time
             ELSE NULL
         END) AS \"Start of procedure indicate time\",

         max(CASE WHEN  fps.fps_form_end_of_procedure_indicate_time IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,            '01-01-0001 00:00:00' )
             THEN fps.fps_form_end_of_procedure_indicate_time
             WHEN  fps.fps_form_end_of_procedure_indicate_time IS NULL
             THEN  fpc.fp_cont_form_end_of_procedure_indicate_time
             WHEN fpc.fp_cont_form_end_of_procedure_indicate_time IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_cont_form_end_of_procedure_indicate_time
             WHEN  fpc.fp_cont_form_end_of_procedure_indicate_time IS NULL
             THEN fps.fps_form_end_of_procedure_indicate_time
             ELSE NULL
         END) AS \"End of procedure, indicate time\",


         max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN  fps.fps_form_complications_during_insertions IS NOT NULL
              THEN
                  CASE WHEN  fps.fps_form_complications_during_insertions = 'Yes' THEN 1
                       WHEN  fps.fps_form_complications_during_insertions = 'No' THEN 0
                    ELSE NULL END

              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fp_continuation_complications_during_insertions IS NOT NULL
              THEN
                 CASE WHEN fp_continuation_complications_during_insertions = 'Yes' THEN 1
                       WHEN fp_continuation_complications_during_insertions = 'No' THEN 0
                  ELSE NULL END
              ELSE
                 CASE WHEN fps_counselling_only_complications_during_insertions = 'Yes' THEN 1
                      WHEN  fps_counselling_only_complications_during_insertions = 'No' THEN 0
                  ELSE NULL END
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fp_continuation_complications_during_insertions IS NOT NULL
              THEN
                   CASE WHEN fp_continuation_complications_during_insertions = 'Yes' THEN 1
                       WHEN fp_continuation_complications_during_insertions = 'No' THEN 0
                   ELSE NULL END
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_complications_during_insertions IS NOT NULL
              THEN
                     CASE WHEN  fps.fps_form_complications_during_insertions = 'Yes' THEN 1
                       WHEN  fps.fps_form_complications_during_insertions = 'No' THEN 0
                    ELSE NULL END
              ELSE
                CASE WHEN  fps_counselling_only_complications_during_insertions = 'Yes' THEN 1
                     WHEN  fps_counselling_only_complications_during_insertions = 'No' THEN 0
                  ELSE NULL END
              END
      ELSE
         CASE WHEN fps_counselling_only_complications_during_insertions IS NOT NULL
              THEN
                  CASE WHEN fps_counselling_only_complications_during_insertions = 'Yes' THEN 1
                       WHEN fps_counselling_only_complications_during_insertions = 'No' THEN 0
                  ELSE NULL END
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_complications_during_insertions IS NOT NULL
              THEN
                 CASE WHEN  fps.fps_form_complications_during_insertions = 'Yes' THEN 1
                       WHEN fps.fps_form_complications_during_insertions = 'No' THEN 0
                    ELSE NULL END
              ELSE
                 CASE WHEN  fp_continuation_complications_during_insertions = 'Yes' THEN 1
                     WHEN  fp_continuation_complications_during_insertions  = 'No' THEN 0
                  ELSE NULL END
              END
      END) :: BOOLEAN AS \"Complications during insertions\",

      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_if_complication_is_yes IS NOT NULL
              THEN fps.fps_form_if_complication_is_yes
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fps_continuation_if_yes_select_the_complications IS NOT NULL
              THEN fpc.fps_continuation_if_yes_select_the_complications
              ELSE
                  fpcounselling.fps_counselling_only_if_complication_is_yes
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fps_continuation_if_yes_select_the_complications IS NOT NULL
              THEN fpc.fps_continuation_if_yes_select_the_complications
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_if_complication_is_yes IS NOT NULL
              THEN fps.fps_form_if_complication_is_yes
              ELSE
                fpcounselling.fps_counselling_only_if_complication_is_yes
              END
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_if_complication_is_yes IS NOT NULL
              THEN fpcounselling.fps_counselling_only_if_complication_is_yes
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_if_complication_is_yes IS NOT NULL
              THEN fps.fps_form_if_complication_is_yes
              ELSE
                  fpc.fps_continuation_if_yes_select_the_complications
              END
      END) AS \"if yes,select the complication\",

      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN  fps.\"fps_form_adverse_event\" IS NOT NULL
              THEN
                  CASE WHEN  fps.\"fps_form_adverse_event\" = 'Yes' THEN 1
                       WHEN  fps.\"fps_form_adverse_event\" = 'No' THEN 0
                    ELSE NULL END

              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_adverse_event IS NOT NULL
              THEN
                 CASE WHEN fpc.fp_continuation_adverse_event = 'Yes' THEN 1
                       WHEN fpc.fp_continuation_adverse_event = 'No' THEN 0
                  ELSE NULL END
              ELSE
                 CASE WHEN fps_counselling_only_adverse_event = 'Yes' THEN 1
                      WHEN  fps_counselling_only_adverse_event = 'No' THEN 0
                  ELSE NULL END
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fp_continuation_adverse_event IS NOT NULL
              THEN
                   CASE WHEN fpc.fp_continuation_adverse_event = 'Yes' THEN 1
                       WHEN fpc.fp_continuation_adverse_event = 'No' THEN 0
                   ELSE NULL END
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.\"fps_form_referred_out\" IS NOT NULL
              THEN
                     CASE WHEN  fps.\"fps_form_adverse_event\" = 'Yes' THEN 1
                       WHEN  fps.\"fps_form_adverse_event\" = 'No' THEN 0
                    ELSE NULL END
              ELSE
                CASE WHEN  fps_counselling_only_adverse_event = 'Yes' THEN 1
                     WHEN  fps_counselling_only_adverse_event = 'No' THEN 0
                  ELSE NULL END
              END
      ELSE
         CASE WHEN fps_counselling_only_adverse_event IS NOT NULL
              THEN
                  CASE WHEN fps_counselling_only_adverse_event = 'Yes' THEN 1
                       WHEN fps_counselling_only_adverse_event = 'No' THEN 0
                  ELSE NULL END
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.\"fps_form_referred_out\"  IS NOT NULL
              THEN
                 CASE WHEN  fps.\"fps_form_adverse_event\" = 'Yes' THEN 1
                       WHEN  fps.\"fps_form_adverse_event\" = 'No' THEN 0
                    ELSE NULL END
              ELSE
                 CASE WHEN  fpc.fp_continuation_adverse_event = 'Yes' THEN 1
                     WHEN  fpc.fp_continuation_adverse_event  = 'No' THEN 0
                  ELSE NULL END
              END
      END) :: BOOLEAN AS \"Adverse Event\",

      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_if_yes_select_the_adverse_event IS NOT NULL
              THEN fps.fps_form_if_yes_select_the_adverse_event
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_if_yes_select_the_adverse_event IS NOT NULL
              THEN fpc.fp_continuation_if_yes_select_the_adverse_event
              ELSE
                  fpcounselling.fps_counselling_only_if_yes_select_the_adverse_event
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fp_continuation_if_yes_select_the_adverse_event IS NOT NULL
              THEN fpc.fp_continuation_if_yes_select_the_adverse_event
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_if_yes_select_the_adverse_event IS NOT NULL
              THEN fps.fps_form_if_yes_select_the_adverse_event
              ELSE
                fpcounselling.fps_counselling_only_if_yes_select_the_adverse_event
              END
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_if_yes_select_the_adverse_event IS NOT NULL
              THEN fpcounselling.fps_counselling_only_if_yes_select_the_adverse_event
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_if_yes_select_the_adverse_event IS NOT NULL
              THEN fps.fps_form_if_yes_select_the_adverse_event
              ELSE
                  fpc.fp_continuation_if_yes_select_the_adverse_event
              END
      END) AS \"if yes,select the adverse event\",

      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_procedure_done_by IS NOT NULL
              THEN fps.fps_form_procedure_done_by
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_procedure_done_by_name_of_counsellor IS NOT NULL
              THEN fpc.fp_continuation_procedure_done_by_name_of_counsellor
              ELSE
                  fpcounselling.fps_counselling_only_procedure_done_by_name_of_counsellor
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fp_continuation_procedure_done_by_name_of_counsellor IS NOT NULL
              THEN fpc.fp_continuation_procedure_done_by_name_of_counsellor
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_procedure_done_by IS NOT NULL
              THEN fps.fps_form_procedure_done_by
              ELSE
                fpcounselling.fps_counselling_only_procedure_done_by_name_of_counsellor
              END
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_procedure_done_by_name_of_counsellor IS NOT NULL
              THEN fpcounselling.fps_counselling_only_procedure_done_by_name_of_counsellor
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_procedure_done_by IS NOT NULL
              THEN fps.fps_form_procedure_done_by
              ELSE
                  fpc.fp_continuation_procedure_done_by_name_of_counsellor
              END
      END) AS \"Procedure done by\",

      CASE WHEN max(fps.\"fps_form_condoms_given\") IN ('Male', 'Female') THEN 1
           WHEN max(fps.\"fps_form_condoms_given\") ='FPS FORM,Not Given' THEN 0
      ELSE NULL END :: BOOLEAN AS \"Condoms given\" ,

      max(CASE WHEN  fps.fps_form_batch_number IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,            '01-01-0001 00:00:00' )
             THEN fps.fps_form_batch_number
             WHEN  fps.fps_form_batch_number IS NULL
             THEN  fpc.fp_continuation_batch_number_of_the_method_given
             WHEN fpc.fp_continuation_batch_number_of_the_method_given IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_continuation_batch_number_of_the_method_given
             WHEN  fpc.fp_continuation_batch_number_of_the_method_given IS NULL
             THEN fps.fps_form_batch_number
             ELSE NULL
         END) AS \"Batch Number\",




         max(CASE WHEN  fps.fps_form_manufacture IS NOT NULL AND COALESCE(fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_created,'01-01-0001 00:00:00' )
             THEN  fps.fps_form_manufacture
             WHEN  fps.fps_form_manufacture IS NULL
             THEN  fpc.fp_continuation_manufacturer_of_the_method_given
             WHEN fpc.fp_continuation_manufacturer_of_the_method_given IS NOT NULL AND COALESCE(fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_created,'01-01-0001 00:00:00')
             THEN fpc.fp_continuation_manufacturer_of_the_method_given
             WHEN  fpc.fp_continuation_manufacturer_of_the_method_given IS NULL
             THEN fps.fps_form_manufacture
             ELSE NULL
         END) AS \"Manufacture\",

         max(fps.fps_form_treatment) AS \"Treatment\",

          max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.\"fps_form_referred_out\" IS NOT NULL
              THEN
                  CASE WHEN fps.\"fps_form_referred_out\" = 'Yes' THEN 1
                       WHEN fps.\"fps_form_referred_out\" = 'No' THEN 0
                    ELSE NULL END

              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fp_continuation_referred_out IS NOT NULL
              THEN
                 CASE WHEN fpc.fp_continuation_referred_out = 'Yes' THEN 1
                       WHEN fpc.fp_continuation_referred_out = 'No' THEN 0
                  ELSE NULL END
              ELSE
                 CASE WHEN fps_counselling_only_referred_out = 'Yes' THEN 1
                      WHEN  fps_counselling_only_referred_out = 'No' THEN 0
                  ELSE NULL END
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fp_continuation_referred_out IS NOT NULL
              THEN
                   CASE WHEN fpc.fp_continuation_referred_out = 'Yes' THEN 1
                       WHEN fpc.fp_continuation_referred_out = 'No' THEN 0
                   ELSE NULL END
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.\"fps_form_referred_out\" IS NOT NULL
              THEN
                    CASE WHEN fps.\"fps_form_referred_out\" = 'Yes' THEN 1
                       WHEN fps.\"fps_form_referred_out\" = 'No' THEN 0
                    ELSE NULL END
              ELSE
                CASE WHEN  fps_counselling_only_referred_out = 'Yes' THEN 1
                     WHEN  fps_counselling_only_referred_out = 'No' THEN 0
                  ELSE NULL END
              END
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_referred_out IS NOT NULL
              THEN
                  CASE WHEN fps_counselling_only_referred_out = 'Yes' THEN 1
                       WHEN fps_counselling_only_referred_out = 'No' THEN 0
                  ELSE NULL END
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.\"fps_form_referred_out\"  IS NOT NULL
              THEN
                CASE WHEN fps.\"fps_form_referred_out\" = 'Yes' THEN 1
                      WHEN fps.\"fps_form_referred_out\" = 'No' THEN 0
                  ELSE NULL END
              ELSE
                 CASE WHEN  fpc.fp_continuation_referred_out = 'Yes' THEN 1
                     WHEN  fpc.fp_continuation_referred_out  = 'No' THEN 0
                  ELSE NULL END
              END
      END) :: BOOLEAN AS \"Referred out?\",

       max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
                 AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' ) THEN
              CASE WHEN fps_form_indicate_where_client_was_referred_to  IS NOT NULL THEN
              (SELECT string_agg (
                           CASE WHEN fps_form_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to =  'Medical (state the problem)' THEN 'Medical (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to =  'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                END ,',') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND
                                fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
              WHEN  COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' )  THEN
                         CASE WHEN fp_continuation_indicate_where_client_was_referred_to IS NOT NULL THEN
                              (SELECT string_agg (
                                CASE WHEN fp_continuation_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                          ELSE
                               CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to IS NOT NULL THEN
                                 (SELECT string_agg (
                                     CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)

                               ELSE
                               NULL  END
                         END
              ELSE
                  CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to IS NOT NULL THEN
                   (SELECT string_agg (
                                      CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                  ELSE NULL END
               END

         WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
                  AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' ) THEN

                  CASE WHEN fp_continuation_indicate_where_client_was_referred_to IS NOT NULL THEN
                       (SELECT string_agg (
                                 CASE WHEN fp_continuation_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                  WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' )
                  THEN
                  CASE WHEN fps_form_indicate_where_client_was_referred_to  IS NOT NULL THEN
                (SELECT string_agg (
                           CASE WHEN fps_form_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to =  'Medical (state the problem)' THEN 'Medical (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to =  'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                END ,',') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND
                                fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
                  ELSE
                               CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to IS NOT NULL THEN
                                 (SELECT string_agg (
                                       CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                               ELSE
                               NULL  END
                  END
                  ELSE
                  CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to IS NOT NULL THEN
                    (SELECT string_agg (

                                      CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                  ELSE NULL END
                  END
         ELSE
             CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to IS NOT NULL THEN
             (SELECT string_agg (
                                     CASE WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                          WHEN fps_counselling_only_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)

             WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )THEN
                 CASE WHEN fps_form_indicate_where_client_was_referred_to  IS NOT NULL THEN
                 (SELECT string_agg (
                           CASE WHEN fps_form_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to =  'Medical (state the problem)' THEN 'Medical (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to =  'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                WHEN fps_form_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                END ,',') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND
                                fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
                ELSE
                        CASE WHEN fp_continuation_indicate_where_client_was_referred_to IS NOT NULL THEN
                          (SELECT string_agg (
                                 CASE WHEN fp_continuation_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                             ELSE NULL  END
                  END
                  ELSE
                  CASE WHEN fp_continuation_indicate_where_client_was_referred_to IS NOT NULL THEN
                    (SELECT string_agg (
                                 CASE WHEN fp_continuation_indicate_where_client_was_referred_to = 'ANC' THEN 'ANC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VMMC' THEN 'VMMC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC/PAP Smear' THEN 'VIAC/PAP Smear'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'PNC' THEN 'PNC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'OI/ART' THEN 'OI/ART'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'High blood pressure' THEN 'High blood pressure'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'STI treatment' THEN 'STI treatment'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Permanent methods (tubaligation, vasectomy)' THEN 'Permanent methods (tubaligation, vasectomy)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'VIAC' THEN 'VIAC'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Surgical (state the problem)' THEN 'Surgical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Medical (state the problem)' THEN 'Medical (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Gynaecological problem (state the problem)' THEN 'Gynaecological problem (state the problem)'
                                    WHEN fp_continuation_indicate_where_client_was_referred_to = 'Other' THEN 'Other'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                  ELSE NULL END
                  END

END)  AS \"Indicate where client was referred to\",

      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_state_reason_for_referral IS NOT NULL
              THEN fps.fps_form_state_reason_for_referral
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_state_reason_for_referral IS NOT NULL
              THEN fpc.fp_continuation_state_reason_for_referral
              ELSE
                  fpcounselling.fps_counselling_only_state_reason_for_referral
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fp_continuation_state_reason_for_referral IS NOT NULL
              THEN fpc.fp_continuation_state_reason_for_referral
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_state_reason_for_referral IS NOT NULL
              THEN fps.fps_form_state_reason_for_referral
              ELSE
                fpcounselling.fps_counselling_only_state_reason_for_referral
              END
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_state_reason_for_referral IS NOT NULL
              THEN fpcounselling.fps_counselling_only_state_reason_for_referral
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_state_reason_for_referral IS NOT NULL
              THEN fps.fps_form_state_reason_for_referral
              ELSE
                  fpc.fp_continuation_state_reason_for_referral
              END
      END) AS \"State reason for Referral\",



      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" IS NOT NULL
              THEN
                  CASE WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" = 'Yes' THEN 1
                       WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" = 'No' THEN 0
                    ELSE NULL END

              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fp_continuation_referral_slip_and_instructions_to_leave_sli IS NOT NULL
              THEN
                 CASE WHEN fpc.fp_continuation_referral_slip_and_instructions_to_leave_sli = 'Yes' THEN 1
                       WHEN fpc.fp_continuation_referral_slip_and_instructions_to_leave_sli = 'No' THEN 0
                  ELSE NULL END
              ELSE
                 CASE WHEN fps_counselling_only_referral_slip_and_instructions_to_leav = 'Yes' THEN 1
                      WHEN  fps_counselling_only_referral_slip_and_instructions_to_leav = 'No' THEN 0
                  ELSE NULL END
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fp_continuation_referral_slip_and_instructions_to_leave_sli IS NOT NULL
              THEN
                   CASE WHEN fp_continuation_referral_slip_and_instructions_to_leave_sli = 'Yes' THEN 1
                       WHEN fp_continuation_referral_slip_and_instructions_to_leave_sli = 'No' THEN 0
                   ELSE NULL END
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" IS NOT NULL
              THEN
                    CASE WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" = 'Yes' THEN 1
                         WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" = 'No' THEN 0
                    ELSE NULL END
              ELSE
                CASE WHEN  fps_counselling_only_referral_slip_and_instructions_to_leav = 'Yes' THEN 1
                     WHEN  fps_counselling_only_referral_slip_and_instructions_to_leav = 'No' THEN 0
                  ELSE NULL END
              END
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_referral_slip_and_instructions_to_leav IS NOT NULL
              THEN
                  CASE WHEN fps_counselling_only_referral_slip_and_instructions_to_leav = 'Yes' THEN 1
                       WHEN fps_counselling_only_referral_slip_and_instructions_to_leav = 'No' THEN 0
                  ELSE NULL END
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\"  IS NOT NULL
              THEN
                  CASE WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" = 'Yes' THEN 1
                       WHEN fps.\"fps_form_referral_slip_and_instructions_to_leave_slip_at_th\" = 'No' THEN 0
                    ELSE NULL END
              ELSE
                 CASE WHEN  fpc.fp_continuation_referral_slip_and_instructions_to_leave_sli = 'Yes' THEN 1
                     WHEN  fpc.fp_continuation_referral_slip_and_instructions_to_leave_sli = 'No' THEN 0
                  ELSE NULL END
              END
         END) :: BOOLEAN AS \"Referral slip and instructions to leave slip at the clinic given\",



      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_state_review_date IS NOT NULL
              THEN fps.fps_form_state_review_date
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_state_review_date IS NOT NULL
              THEN fpc.fp_continuation_state_review_date
              ELSE
                  fpcounselling.fps_counselling_only_state_review_date
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fp_continuation_state_review_date IS NOT NULL
              THEN fpc.fp_continuation_state_review_date
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_state_review_date IS NOT NULL
              THEN fps.fps_form_state_review_date
              ELSE
                fpcounselling.fps_counselling_only_state_review_date
              END
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_state_review_date IS NOT NULL
              THEN fpcounselling.fps_counselling_only_state_review_date
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_state_review_date IS NOT NULL
              THEN fps.fps_form_state_review_date
              ELSE
                  fpc.fp_continuation_state_review_date
              END
      END) AS \"State Review Date\",

      max(fps.fps_form_follow_up_visits) AS \"Follow up visits\",

        max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_state_the_surgical_problem IS NOT NULL
              THEN fps.fps_form_state_the_surgical_problem
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_state_the_surgical_problem IS NOT NULL
              THEN fpc.fp_continuation_state_the_surgical_problem
              ELSE
                  fpcounselling.fps_counselling_only_state_the_surgical_problem
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fp_continuation_state_the_surgical_problem IS NOT NULL
              THEN fpc.fp_continuation_state_the_surgical_problem
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_state_the_surgical_problem IS NOT NULL
              THEN fps.fps_form_state_the_surgical_problem
              ELSE
                fpcounselling.fps_counselling_only_state_the_surgical_problem
              END
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_state_the_surgical_problem IS NOT NULL
              THEN fpcounselling.fps_counselling_only_state_the_surgical_problem
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_state_the_surgical_problem IS NOT NULL
              THEN fps.fps_form_state_the_surgical_problem
              ELSE
                  fpc.fp_continuation_state_the_surgical_problem
              END
      END) AS \"State the surgical problem\",

       max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_state_the_medical_problem IS NOT NULL
              THEN fps.fps_form_state_the_medical_problem
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_state_the_medical_problem IS NOT NULL
              THEN fpc.fp_continuation_state_the_medical_problem
              ELSE
                  fpcounselling.fps_counselling_only_state_the_medical_problem
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fp_continuation_state_the_medical_problem IS NOT NULL
              THEN fpc.fp_continuation_state_the_medical_problem
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_state_the_medical_problem IS NOT NULL
              THEN fps.fps_form_state_the_medical_problem
              ELSE
                fpcounselling.fps_counselling_only_state_the_medical_problem
              END
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_state_the_medical_problem IS NOT NULL
              THEN fpcounselling.fps_counselling_only_state_the_medical_problem
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_state_the_medical_problem IS NOT NULL
              THEN fps.fps_form_state_the_medical_problem
              ELSE
                  fpc.fp_continuation_state_the_medical_problem
              END
      END) AS \"State the medical problem\",

         max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
         AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fps.fps_form_state_the_gynaecological_problem IS NOT NULL
              THEN fps.fps_form_state_the_gynaecological_problem
              WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fpc.fp_continuation_state_the_gynaecological_problem IS NOT NULL
              THEN fpc.fp_continuation_state_the_gynaecological_problem
              ELSE
                  fpcounselling.fps_counselling_only_state_the_gynaecological_problem
              END

      WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
       AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00')
         THEN
         CASE WHEN fpc.fp_continuation_state_the_gynaecological_problem IS NOT NULL
              THEN fpc.fp_continuation_state_the_gynaecological_problem
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_state_the_gynaecological_problem IS NOT NULL
              THEN fps.fps_form_state_the_gynaecological_problem
              ELSE
                fpcounselling.fps_counselling_only_state_the_gynaecological_problem
              END
      ELSE
         CASE WHEN fpcounselling.fps_counselling_only_state_the_gynaecological_problem IS NOT NULL
              THEN fpcounselling.fps_counselling_only_state_the_gynaecological_problem
              WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created,
              '01-01-0001 00:00:00' )AND fps.fps_form_state_the_gynaecological_problem IS NOT NULL
              THEN fps.fps_form_state_the_gynaecological_problem
              ELSE
                  fpc.fp_continuation_state_the_gynaecological_problem
              END
      END) AS \"State the gynaecological problem\",

      max(CASE WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )
                 AND COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' ) THEN
              CASE WHEN fps_form_current_method  IS NOT NULL THEN
              (SELECT string_agg (
                           CASE WHEN fps_form_current_method = 'New' THEN 'New'
                                WHEN fps_form_current_method = 'Lapsed' THEN 'Lapsed'
                                WHEN fps_form_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                WHEN fps_form_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                WHEN fps_form_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                WHEN fps_form_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                WHEN fps_form_current_method = 'Injectables' THEN 'Injectables'
                                WHEN fps_form_current_method = 'IUCD' THEN 'IUCD'
                                WHEN fps_form_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                WHEN fps_form_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                WHEN fps_form_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                WHEN fps_form_current_method = 'Condoms' THEN 'Condoms'
                                WHEN fps_form_current_method = 'Others' THEN 'Others'
                                END ,',') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND
                                fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
              WHEN  COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' )  THEN
                         CASE WHEN fp_continuation_current_method IS NOT NULL THEN
                              (SELECT string_agg (
                                CASE WHEN fp_continuation_current_method = 'New' THEN 'New'
                                    WHEN fp_continuation_current_method = 'Lapsed' THEN 'Lapsed'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                    WHEN fp_continuation_current_method = 'Injectables' THEN 'Injectables'
                                    WHEN fp_continuation_current_method = 'IUCD' THEN 'IUCD'
                                    WHEN fp_continuation_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                    WHEN fp_continuation_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                    WHEN fp_continuation_current_method = 'Condoms' THEN 'Condoms'
                                    WHEN fp_continuation_current_method = 'Others' THEN 'Others'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                          ELSE
                               CASE WHEN fp_counselling_only_current_method IS NOT NULL THEN
                                 (SELECT string_agg (
                                     CASE WHEN fp_counselling_only_current_method = 'New' THEN 'New'
                                          WHEN fp_counselling_only_current_method = 'Lapsed' THEN 'Lapsed'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                          WHEN fp_counselling_only_current_method = 'Injectables' THEN 'Injectables'
                                          WHEN fp_counselling_only_current_method = 'IUCD' THEN 'IUCD'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                          WHEN fp_counselling_only_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                          WHEN fp_counselling_only_current_method = 'Condoms' THEN 'Condoms'
                                          WHEN fp_counselling_only_current_method = 'Others' THEN 'Others'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)

                               ELSE
                               NULL  END
                         END
              ELSE
                  CASE WHEN fp_counselling_only_current_method IS NOT NULL THEN
                   (SELECT string_agg (
                                     CASE WHEN fp_counselling_only_current_method = 'New' THEN 'New'
                                          WHEN fp_counselling_only_current_method = 'Lapsed' THEN 'Lapsed'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                          WHEN fp_counselling_only_current_method = 'Injectables' THEN 'Injectables'
                                          WHEN fp_counselling_only_current_method = 'IUCD' THEN 'IUCD'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                          WHEN fp_counselling_only_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                          WHEN fp_counselling_only_current_method = 'Condoms' THEN 'Condoms'
                                          WHEN fp_counselling_only_current_method = 'Others' THEN 'Others'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                  ELSE NULL END
               END

         WHEN COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' )
                  AND COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' ) THEN

                  CASE WHEN fp_continuation_current_method IS NOT NULL THEN
                       (SELECT string_agg (
                                CASE WHEN fp_continuation_current_method = 'New' THEN 'New'
                                    WHEN fp_continuation_current_method = 'Lapsed' THEN 'Lapsed'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                    WHEN fp_continuation_current_method = 'Injectables' THEN 'Injectables'
                                    WHEN fp_continuation_current_method = 'IUCD' THEN 'IUCD'
                                    WHEN fp_continuation_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                    WHEN fp_continuation_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                    WHEN fp_continuation_current_method = 'Condoms' THEN 'Condoms'
                                    WHEN fp_continuation_current_method = 'Others' THEN 'Others'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                  WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpcounselling.date_modified,fpcounselling.date_created, '01-01-0001 00:00:00' )
                  THEN
                  CASE WHEN fps_form_current_method  IS NOT NULL THEN
                (SELECT string_agg (
                           CASE WHEN fps_form_current_method = 'New' THEN 'New'
                                WHEN fps_form_current_method = 'Lapsed' THEN 'Lapsed'
                                WHEN fps_form_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                WHEN fps_form_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                WHEN fps_form_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                WHEN fps_form_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                WHEN fps_form_current_method = 'Injectables' THEN 'Injectables'
                                WHEN fps_form_current_method = 'IUCD' THEN 'IUCD'
                                WHEN fps_form_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                WHEN fps_form_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                WHEN fps_form_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                WHEN fps_form_current_method = 'Condoms' THEN 'Condoms'
                                WHEN fps_form_current_method = 'Others' THEN 'Others'
                                END ,',') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND
                                fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
                  ELSE
                               CASE WHEN fp_counselling_only_current_method IS NOT NULL THEN
                                 (SELECT string_agg (
                                     CASE WHEN fp_counselling_only_current_method = 'New' THEN 'New'
                                          WHEN fp_counselling_only_current_method = 'Lapsed' THEN 'Lapsed'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                          WHEN fp_counselling_only_current_method = 'Injectables' THEN 'Injectables'
                                          WHEN fp_counselling_only_current_method = 'IUCD' THEN 'IUCD'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                          WHEN fp_counselling_only_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                          WHEN fp_counselling_only_current_method = 'Condoms' THEN 'Condoms'
                                          WHEN fp_counselling_only_current_method = 'Others' THEN 'Others'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                               ELSE
                               NULL  END
                  END
                  ELSE
                  CASE WHEN fp_counselling_only_current_method IS NOT NULL THEN
                    (SELECT string_agg (
                                     CASE WHEN fp_counselling_only_current_method = 'New' THEN 'New'
                                          WHEN fp_counselling_only_current_method = 'Lapsed' THEN 'Lapsed'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                          WHEN fp_counselling_only_current_method = 'Injectables' THEN 'Injectables'
                                          WHEN fp_counselling_only_current_method = 'IUCD' THEN 'IUCD'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                          WHEN fp_counselling_only_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                          WHEN fp_counselling_only_current_method = 'Condoms' THEN 'Condoms'
                                          WHEN fp_counselling_only_current_method = 'Others' THEN 'Others'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)
                  ELSE NULL END
                  END
         ELSE
             CASE WHEN fp_counselling_only_current_method IS NOT NULL THEN
             (SELECT string_agg (
                                     CASE WHEN fp_counselling_only_current_method = 'New' THEN 'New'
                                          WHEN fp_counselling_only_current_method = 'Lapsed' THEN 'Lapsed'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                          WHEN fp_counselling_only_current_method = 'Injectables' THEN 'Injectables'
                                          WHEN fp_counselling_only_current_method = 'IUCD' THEN 'IUCD'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                          WHEN fp_counselling_only_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                          WHEN fp_counselling_only_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                          WHEN fp_counselling_only_current_method = 'Condoms' THEN 'Condoms'
                                          WHEN fp_counselling_only_current_method = 'Others' THEN 'Others'
                                          END ,', ') FROM fps_fp_counselling_only_form fpsctemp WHERE fpsctemp.encounter_id = pedd.encounter_id AND fpsctemp.patient_id = pedd.patient_id GROUP BY fpsctemp.encounter_id)

             WHEN COALESCE(fps.date_modified,fps.date_created, '01-01-0001 00:00:00' ) >= COALESCE(fpc.date_modified,fpc.date_created, '01-01-0001 00:00:00' )THEN
                 CASE WHEN fps_form_current_method  IS NOT NULL THEN
                 (SELECT string_agg (
                           CASE WHEN fps_form_current_method = 'New' THEN 'New'
                                WHEN fps_form_current_method = 'Lapsed' THEN 'Lapsed'
                                WHEN fps_form_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                WHEN fps_form_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                WHEN fps_form_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                WHEN fps_form_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                WHEN fps_form_current_method = 'Injectables' THEN 'Injectables'
                                WHEN fps_form_current_method = 'IUCD' THEN 'IUCD'
                                WHEN fps_form_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                WHEN fps_form_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                WHEN fps_form_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                WHEN fps_form_current_method = 'Condoms' THEN 'Condoms'
                                WHEN fps_form_current_method = 'Others' THEN 'Others'
                                END ,',') FROM fps_family_planning_service fpstemp WHERE fpstemp.encounter_id = pedd.encounter_id AND
                                fpstemp.patient_id = pedd.patient_id GROUP BY fpstemp.encounter_id)
                ELSE
                        CASE WHEN fp_continuation_current_method IS NOT NULL THEN
                          (SELECT string_agg (
                                CASE WHEN fp_continuation_current_method = 'New' THEN 'New'
                                    WHEN fp_continuation_current_method = 'Lapsed' THEN 'Lapsed'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                    WHEN fp_continuation_current_method = 'Injectables' THEN 'Injectables'
                                    WHEN fp_continuation_current_method = 'IUCD' THEN 'IUCD'
                                    WHEN fp_continuation_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                    WHEN fp_continuation_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                    WHEN fp_continuation_current_method = 'Condoms' THEN 'Condoms'
                                    WHEN fp_continuation_current_method = 'Others' THEN 'Others'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                             ELSE NULL  END
                  END
                  ELSE
                  CASE WHEN fp_continuation_current_method IS NOT NULL THEN
                    (SELECT string_agg (
                                CASE WHEN fp_continuation_current_method = 'New' THEN 'New'
                                    WHEN fp_continuation_current_method = 'Lapsed' THEN 'Lapsed'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Projesterone ONLY pill (POP)' THEN 'Projesterone ONLY pill (POP)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Combined oral contaceptive (COC)' THEN 'Combined oral contaceptive (COC)'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Jadelle Implants' THEN 'Jadelle Implants'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Implanon Implants' THEN 'Implanon Implants'
                                    WHEN fp_continuation_current_method = 'Injectables' THEN 'Injectables'
                                    WHEN fp_continuation_current_method = 'IUCD' THEN 'IUCD'
                                    WHEN fp_continuation_current_method = 'FPS FORM,LNG-IUS' THEN 'LNG-IUS'
                                    WHEN fp_continuation_current_method = 'TUBAL LIGATION' THEN 'TUBAL LIGATION'
                                    WHEN fp_continuation_current_method = 'FPS FORM,Emergency contraception' THEN 'Emergency contraception'
                                    WHEN fp_continuation_current_method = 'Condoms' THEN 'Condoms'
                                    WHEN fp_continuation_current_method = 'Others' THEN 'Others'
                                    END ,', ') FROM fps_fp_continuation_form fpctemp WHERE fpctemp.encounter_id = pedd.encounter_id AND fpctemp.patient_id = pedd.patient_id GROUP BY fpctemp.encounter_id)
                  ELSE NULL END
                  END

END)  AS \"Current Method\"





FROM
patient_encounter_table pedd

    JOIN psi_patient_program_data ppv ON pedd.patient_id = ppv.patient_id
    JOIN patient_identifier pi ON ppv.patient_id = pi.patient_id
    JOIN person_details_default pdd ON ppv.patient_id = pdd.person_id
    LEFT OUTER JOIN fps_family_planning_service fps ON fps.encounter_id = pedd.encounter_id
    LEFT OUTER JOIN fps_fp_continuation_form fpc ON fpc.encounter_id = pedd.encounter_id
    LEFT OUTER JOIN fps_fp_counselling_only_form fpcounselling ON fpcounselling.encounter_id = pedd.encounter_id
    WHERE (ppv.program_id = (SELECT program_id FROM programs_default WHERE program_name= 'FPS Program'))
    AND (pedd.encounter_id IN (SELECT encounter_id FROM fps_family_planning_service
                                UNION SELECT encounter_id FROM fps_fp_continuation_form
                                UNION SELECT encounter_id FROM fps_fp_counselling_only_form))

    GROUP BY fps.id_fps_family_planning_service,fpc.id_fps_fp_continuation_form,fpcounselling.id_fps_fp_counselling_only_form
    ORDER BY  date_created DESC;"
},
{
 "name": "art_program_events_table",
 "sql": "SELECT
    'vatFxlZR2lj':: TEXT AS program,
    'axGKY6FAhRm':: TEXT AS program_stage,
    CASE WHEN art1_1.aivc_site_type = 'Outreach'
         THEN
             concat('ZWNSC-OU-',upper( COALESCE(art1_1.aivc_facility,(SELECT art.aivc_facility
              FROM art_initial_visit_compulsory_question_1_of_2 art
              WHERE art.aivc_facility IS NOT NULL
                AND art.patient_id = art1_1.patient_id
              ORDER BY art.encounter_id DESC
              LIMIT 1))),
             '-',upper(art1_1.aivc_district))
         ELSE
           concat('ZWNSC-',upper( COALESCE(aivc_facility,(SELECT art.aivc_facility
            FROM art_initial_visit_compulsory_question_1_of_2 art
            WHERE art.aivc_facility IS NOT NULL
              AND art.patient_id = art1_1.patient_id
            ORDER BY art.encounter_id DESC
            LIMIT 1))))
           END  AS \"OrgUnit\",
    CASE WHEN COALESCE(art1_1.obs_datetime, '01-01-0001' ) >= COALESCE(art2_2.obs_datetime, '01-01-0001' )
         THEN date(art1_1.obs_datetime)
         WHEN ( COALESCE(art2_2.obs_datetime, '01-01-0001' ) >= COALESCE(art1_1.obs_datetime, '01-01-0001' ) )
         THEN date(art2_2.obs_datetime)
         END AS \"event_date\",
    'COMPLETED' :: TEXT AS status,
     COALESCE(art1_1.visit_id,art2_2.visit_id) AS \"event_unique_id\",
     ppv.patient_program_id                              AS \"patient_program_id\",
     DATE(ppv.\"date_enrolled\") AS \"enrollment_date\",
     CASE WHEN   COALESCE(art1_1.date_created, '01-01-0001 00:00:00' ) >= COALESCE(art2_2.date_created, '01-01-0001  00:00:00' )
          THEN art1_1.date_created
          WHEN ( COALESCE(art2_2.date_created, '01-01-0001 00:00:00' ) >= COALESCE(art1_1.date_created, '01-01-0001  00:00:00' ) )
          THEN art2_2.date_created
          END AS \"date_created\",
     pi.\"Patient_Identifier\" AS \"Patient_Identifier\",
     aivc_site_type AS \"SiteType\",
     aivc_setting AS \"setting\",
     aivc_workplace AS \"Workplace\",
     aivc_social_history_details AS \"Social History Details\",
     aivc_chief_complaint AS \"Chief Compliant\",
     CASE WHEN aivc_sourse_giving_history = 'Other (specify)'  THEN 'Other'
          ELSE aivc_sourse_giving_history END  AS \"Source giving History\",
     aivc_sourse_giving_history_other AS \"If other,specify details\",
     aivc_how_do_you_think_you_acquired_hiv AS \"How do you think you acquired HIV?\",
     aivc_have_you_had_a_positive_hiv_test AS \"Have you had a positive HIV test?\",
     aivc_why_were_u_tested AS \"Why were you tested?\",
     aivc_when_was_the_test_done AS \"When was the test done?\",
     CASE WHEN aivc_do_you_have_a_partner ='Yes' THEN 1
          WHEN aivc_do_you_have_a_partner = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Do you have partner\",
     aivc_is_your_sexual_partner_aware_of_your_hiv_status AS \"Is your (sexual) partner aware of your HIV status?\",
     aivc_has_you_partner_been_tested AS \"Has your partner been tested?\",
     aivc_partners_test_result AS \"Partners test result\",
    CASE WHEN aivc_do_you_have_any_children = 'Yes' THEN 1
          WHEN aivc_do_you_have_any_children = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Do you have any children?\",
     aivc_how_many_children_do_you_have AS \"How many children do you have?\",
     CASE WHEN aivc_have_any_of_your_children_been_tested_for_hiv = 'Yes' THEN 1
          WHEN aivc_have_any_of_your_children_been_tested_for_hiv = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have any of your children been tested for HIV?\",
     aivc_number_of_children_hiv_positive AS \"Number of Children HIV positive\",
     aivc_number_of_children_hiv_negative AS \"Number of Children HIV negative\",
     CASE WHEN aivc_have_you_had_cd4_count_lab_test = 'Yes' THEN 1
          WHEN aivc_have_you_had_cd4_count_lab_test = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you had CD4 count lab test ?\",
     aivc_cd4_count_results AS \"CD4 count results\",
     CASE WHEN aivc_did_you_have_fever_recently = 'Yes' THEN 1
          WHEN aivc_did_you_have_fever_recently = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Did you have fever recently?\",
     aivc_duration_of_fever AS \"Duration of fever\",
     CASE WHEN aivc_did_you_have_night_sweats = 'Yes' THEN 1
          WHEN aivc_did_you_have_night_sweats = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Did you have night sweats?\",
     aivc_duration_of_night_sweats AS \"Duration of night sweats\",
     CASE WHEN aivc_do_you_have_weight_loss = 'Yes' THEN 1
          WHEN aivc_do_you_have_weight_loss = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Do you have weight loss?\",
     aivc_duration_of_weight_loss AS \"Duration of weight loss\",
     CASE WHEN aivc_do_you_have_shortness_of_breath = 'Yes' THEN 1
          WHEN aivc_do_you_have_shortness_of_breath = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Do you have shortness of breath?\",
     aivc_duration_of_shortness_of_breath AS \"Duration of shortness of breath\",
     CASE WHEN aivc_have_you_ever_had_tb = 'Yes' THEN 1
          WHEN aivc_have_you_ever_had_tb = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you ever had TB?\",
     aivc_how_many_episodes_of_tb AS \"How many episodes of TB?\",
     aivc_tb_dates_of_previous_episodes AS \"Dates of previous episodes\",
     CASE WHEN aivc_are_you_currently_being_treated_for_tb = 'Yes' THEN 1
          WHEN aivc_are_you_currently_being_treated_for_tb = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Are you currently being treated for TB?\",
     aivc_how_was_it_diagnosed AS \"How was it Diagnosed\",
     aivc_location_of_tb AS \"Location of TB\",
     CASE WHEN aivc_have_you_lived_with_someone_who_has_been_diagnosed_of_ = 'Yes' THEN 1
          WHEN aivc_have_you_lived_with_someone_who_has_been_diagnosed_of_ = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you lived with someone who has been diagnosed of TB in the last 3 months?\",
     CASE WHEN aivc_do_you_have_any_skin_problems = 'Yes' THEN 1
          WHEN aivc_do_you_have_any_skin_problems = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Do you have any skin problems\",
     CASE WHEN aivc_have_you_had_a_skin_rash_recently = 'Yes' THEN 1
          WHEN aivc_have_you_had_a_skin_rash_recently = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you had a skin rash recently?\",
     aivc_duration_of_skin_rash AS \"Duration of skin rash\",
     aivc_location_of_skin_rash_details AS \"Location of skin rash details\",
     CASE WHEN (split_part(aivc_mophology,',', 1) = 'Macular') OR (split_part(aivc_mophology,',', 2) = 'Macular')
               OR (split_part(aivc_mophology,',', 3) = 'Macular')  OR (split_part(aivc_mophology,',', 4) = 'Macular')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"Macular\",
     CASE WHEN (split_part(aivc_mophology,',', 1) = 'Papular') OR (split_part(aivc_mophology,',', 2) = 'Papular')
               OR (split_part(aivc_mophology,',', 3) = 'Papular')  OR (split_part(aivc_mophology,',', 4) = 'Papular')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"Papular\",
     CASE WHEN (split_part(aivc_mophology,',', 1) = 'Vasicular') OR (split_part(aivc_mophology,',', 2) = 'Vasicular')
               OR (split_part(aivc_mophology,',', 3) = 'Vasicular')  OR (split_part(aivc_mophology,',', 4) = 'Vasicular')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"Vasicular\",
     CASE WHEN (split_part(aivc_mophology,',', 1) = 'Mixed') OR (split_part(aivc_mophology,',', 2) = 'Mixed')
               OR (split_part(aivc_mophology,',', 3) = 'Mixed')  OR (split_part(aivc_mophology,',', 4) = 'Mixed')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"Mixed\",
     CASE WHEN aivc_did_the_skin_rash_start_after_taking_medications = 'Yes' THEN 1
          WHEN aivc_did_the_skin_rash_start_after_taking_medications = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Did the skin rash start after taking medications?\",
     CASE WHEN aivc_have_you_ever_had_herpes_zoster_shingles = 'Yes' THEN 1
          WHEN aivc_have_you_ever_had_herpes_zoster_shingles = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you ever had Herpes zoster/shingles?\",
     CASE WHEN aivc_did_you_experience_ant_itching = 'Yes' THEN 1
          WHEN aivc_did_you_experience_ant_itching = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Did you experience ant itching?\",
     CASE WHEN aivc_have_you_observed_a_lump_growing = 'Yes' THEN 1
          WHEN aivc_have_you_observed_a_lump_growing = 'No' THEN 0
          ELSE NULL END :: BOOLEAN  AS \"Have you observed a lump growing?\",
     aivc_location_lump_details AS \" Location lump details\",
     CASE WHEN aivc_are_you_know_where_you_are_and_what_you_are_doing_here = 'Yes' THEN 1
          WHEN aivc_are_you_know_where_you_are_and_what_you_are_doing_here = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Are you aware of where you are and what you are doing here?\",
     CASE WHEN aivc_are_you_know_who_i_am = 'Yes' THEN 1
          WHEN aivc_are_you_know_who_i_am = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Are you aware who I am?\",
     CASE WHEN aivc_are_you_know_the_date_day_year_or_season = 'Yes' THEN 1
          WHEN aivc_are_you_know_the_date_day_year_or_season = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Are you aware of the day, date, year or season?\",
     CASE WHEN aivc_have_you_become_forgetful = 'Yes' THEN 1
          WHEN aivc_have_you_become_forgetful = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you become forgetful?\",
     CASE WHEN aivc_do_you_need_to_be_reminded_of_things = 'Yes' THEN 1
          WHEN aivc_do_you_need_to_be_reminded_of_things = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Do you need to be reminded of things?\",
     CASE WHEN aivc_are_you_suffering_from_headaches = 'Yes' THEN 1
          WHEN aivc_are_you_suffering_from_headaches = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Are you suffering from headaches?\",
     aivc_duration_of_headache AS \"Duration of Headache\",
     aivc_headache_severity AS \"Severity of Headache\",
     aivc_headache_course AS \"Course of Headache\",
     aivc_headache_association AS \"Headache association\",
     CASE WHEN aivc_have_you_experienced_loss_of_vision = 'Yes' THEN 1
          WHEN aivc_have_you_experienced_loss_of_vision = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you experienced loss of vision?\",
     aivc_heent_if_yes_specify_details AS \"If yes, specify details\",
     CASE WHEN aivc_have_you_noticed_any_changes_in_or_around_the_mouth_an = 'Yes' THEN 1
          WHEN aivc_have_you_noticed_any_changes_in_or_around_the_mouth_an = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you noticed any changes in and around the mouth\",
     aivc_have_you_had_blisters_or_swelling_on_around_the_lips AS \"Have you had blisters or swelling on/around the lips?\",
     CASE WHEN (split_part(aivc_have_you_had_oral_thrush,',', 1) IN ('Several episodes?','Associated with pain or difficulty in swallowing')) OR
           (split_part(aivc_have_you_had_oral_thrush,',', 2) IN ('Several episodes?','Associated with pain or difficulty in swallowing')) THEN 1

           WHEN (split_part(aivc_have_you_had_oral_thrush,',', 1) = 'No') OR (split_part(aivc_have_you_had_oral_thrush,',', 2) = 'No') THEN 0
        ELSE NULL END :: BOOLEAN AS \"Have you had oral thrush?\",
    CASE WHEN aivc_have_you_had_a_cough = 'Yes' THEN 1
         WHEN aivc_have_you_had_a_cough = 'No' THEN 0
         ELSE NULL END :: BOOLEAN  AS \"Have you had a cough?\",
     aivc_type_of_cough AS \"Type of cough\",
     aivc_duration_of_the_cough AS \"Duration\",
     CASE WHEN aivc_have_you_had_a_chest_pain = 'Yes' THEN 1
          WHEN aivc_have_you_had_a_chest_pain = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you had a chest pain?\",
     aivc_location_of_the_chest_pain AS \"Location of the chest pain\",
     aivc_when_does_chest_pain_occur  AS \"When does chest pain occur\",
     aivc_duration_of_chest_pains AS \"Duration of chest pains?\",
     CASE WHEN aivc_have_you_experienced_shortness_of_breath = 'Yes' THEN 1
          WHEN aivc_have_you_experienced_shortness_of_breath = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you experienced shortness of breath?\",
     aivc_1_duration_of_shortness_of_breath_1 AS \"Duration of shortness of breath?\",
     aivc_when_does_the_shortness_of_breath_occur AS \"When does the shortness of breath occur?\",
     CASE WHEN aivc_have_you_had_more_than_one_episodes_of_pneumonia = 'Yes' THEN 1
          WHEN aivc_have_you_had_more_than_one_episodes_of_pneumonia = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you had more than one episodes of Pneumonia?\",
     aivc_how_many_episodes_of_pneumonia AS \"How many episodes of Pneumonia?\",
     CASE WHEN (split_part(aivc_have_you_had_swelling_of,',', 1) = 'Feet') OR (split_part(aivc_have_you_had_swelling_of,',', 2) = 'Feet')
               OR (split_part(aivc_have_you_had_swelling_of,',', 3) = 'Feet')  OR (split_part(aivc_have_you_had_swelling_of,',', 4) = 'Feet')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"Have you had swelling of Feet?\",
     CASE WHEN (split_part(aivc_have_you_had_swelling_of,',', 1) = 'Legs') OR (split_part(aivc_have_you_had_swelling_of,',', 2) = 'Legs')
               OR (split_part(aivc_have_you_had_swelling_of,',', 3) = 'Legs')  OR (split_part(aivc_have_you_had_swelling_of,',', 4) = 'Legs')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"Have you had swelling of Legs?\",
     CASE WHEN (split_part(aivc_have_you_had_swelling_of,',', 1) = 'Face') OR (split_part(aivc_have_you_had_swelling_of,',', 2) = 'Face')
               OR (split_part(aivc_have_you_had_swelling_of,',', 3) = 'Face')  OR (split_part(aivc_have_you_had_swelling_of,',', 4) = 'Face')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"Have you had swelling of Face?\",
     CASE WHEN (split_part(aivc_have_you_had_swelling_of,',', 1) = 'No') OR (split_part(aivc_have_you_had_swelling_of,',', 2) = 'No')
               OR (split_part(aivc_have_you_had_swelling_of,',', 3) = 'No')  OR (split_part(aivc_have_you_had_swelling_of,',', 4) = 'No')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"Have you had swelling No?\",
     CASE WHEN  aivc_have_you_experienced_nocturia = 'Yes' THEN 1
          WHEN aivc_have_you_experienced_nocturia  = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you experienced nocturia\",
     CASE WHEN aivc_do_you_have_a_high_blood_pressure = 'Yes' THEN 1
          WHEN aivc_do_you_have_a_high_blood_pressure = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Do you have a high blood pressure\",
     CASE WHEN aivc_are_you_on_hypertensive_drugs = 'Yes' THEN 1
          WHEN aivc_are_you_on_hypertensive_drugs = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Are you on Hypertensive drugs?\",
     aivc_if_yes_on_hypertensive_drugs_specify AS \"If yes, specify drug details\",
     CASE WHEN aivc_do_you_have_difficulty_swallowing = 'Yes' THEN 1
          WHEN aivc_do_you_have_difficulty_swallowing = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Do you have difficulty swallowing?\",
     CASE WHEN aivc_is_swallowing_painful = 'Yes' THEN 1
          WHEN aivc_is_swallowing_painful = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Is swallowing painful\",
     CASE WHEN aivc_do_you_vomit_frequently = 'Yes' THEN 1
          WHEN aivc_do_you_vomit_frequently = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Do you vomit frequently?\",
    aivc_when_do_you_vomit AS \"When do you vomit?\",
    aivc_vomit_content AS \"Vomit content\",
    CASE WHEN aivc_do_you_have_diarrhea = 'Yes' THEN 1
         WHEN aivc_do_you_have_diarrhea = 'No' THEN 0
         ELSE NULL END :: BOOLEAN AS \"Do you have diarrhea?\",
     aivc_diarrhea_duration AS \"Diarrhea duration\",
     aivc_diarrhea_details AS \"Diarrhea Details\",
    CASE WHEN aivc_do_you_have_frequent_abdominal_pain = 'Yes' THEN 1
         WHEN aivc_do_you_have_frequent_abdominal_pain = 'No' THEN 0
         ELSE NULL END :: BOOLEAN AS \"Do you have frequent abdominal pain?\",
    aivc_does_the_abdominal_pain_occur_during_fasting AS \"Does the abdominal pain occur during fasting?\",
    CASE WHEN aivc_do_you_have_frequent_epigastric_pain = 'Yes' THEN 1
         WHEN aivc_do_you_have_frequent_epigastric_pain = 'No' THEN 0
         ELSE NULL END :: BOOLEAN AS \"Do you have frequent epigastric pain?\",
     aivc_abdominal_pain_location AS \"Abdominal pain location\",
     aivc_abdominal_pain_duration AS \"Abdominal pain duration\",
     CASE WHEN aivc_have_you_experienced_muscle_aches = 'Yes' THEN 1
          WHEN aivc_have_you_experienced_muscle_aches = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you experienced muscle aches?\",
     CASE WHEN aivc_have_you_experienced_joint_pain = 'Yes' THEN 1
          WHEN aivc_have_you_experienced_joint_pain = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you experienced joint pain?\",
     aivc_joint_pain_duration AS \"Joint pain duration\",
     aivc_location_of_joint_pain AS \"Location of joint pain\",
     CASE WHEN aivc_have_you_experienced_joint_swelling = 'Yes' THEN 1
          WHEN aivc_have_you_experienced_joint_swelling = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you experienced joint swelling?\",
     aivc_joint_swelling_duration AS \"Joint swelling duration\",
     aivc_location_of_joint_swelling AS \"Location of joint swelling\",
     CASE WHEN aivc_do_you_feel_a_burning_sensation_with_micturation = 'Yes' THEN 1
          WHEN aivc_do_you_feel_a_burning_sensation_with_micturation = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Do you feel a burning sensation with micturation?\",
     CASE WHEN aivc_did_you_have_a_fever_rigors_or_chills_with_the_burning = 'Yes' THEN 1
          WHEN aivc_did_you_have_a_fever_rigors_or_chills_with_the_burning = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Did you have a fever rigors or chills with the burning sensation?\",
     CASE WHEN aivc_have_you_experienced_loss_of_sexual_interest = 'Yes' THEN 1
          WHEN aivc_have_you_experienced_loss_of_sexual_interest = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Have you experienced loss of sexual interest?\",
     CASE WHEN aivc_erectile_dysfunction = 'Yes' THEN 1
          WHEN aivc_erectile_dysfunction = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Erectile dysfunction (males only)\",
     CASE WHEN aivc_dysparenuia_painful_sexual_intercourse = 'Yes' THEN 1
          WHEN aivc_dysparenuia_painful_sexual_intercourse = 'No' THEN 0
          ELSE NULL END :: BOOLEAN AS \"Dysparenuia (females only)\",
    aivc_are_you_sexually_active AS  \"Are you sexually active?\",
    CASE WHEN aivc_female_have_you_observed_a_vaginal_discharge = 'Yes' THEN 1
         WHEN aivc_female_have_you_observed_a_vaginal_discharge = 'No'  THEN 0
         ELSE NULL END :: BOOLEAN AS \"Have you observed a vaginal discharge?\",
      CASE WHEN (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 1) = 'Whitish') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 2) = 'Whitish') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 3) = 'Whitish') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 4) = 'Whitish') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 5) = 'Whitish') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 6) = 'Whitish') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 7) = 'Whitish')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes on vaginal discharge, specify type-Whitish\",
      CASE WHEN (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 1) = 'Creamy') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 2) = 'Creamy') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 3) = 'Creamy') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 4) = 'Creamy') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 5) = 'Creamy') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 6) = 'Creamy') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 7) = 'Creamy')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes on vaginal discharge, specify type-Creamy\",
      CASE WHEN (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 1) = 'Foul smelling') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 2) = 'Foul smelling') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 3) = 'Foul smelling') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 4) = 'Foul smelling') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 5) = 'Foul smelling') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 6) = 'Foul smelling') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 7) = 'Foul smelling')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes on vaginal discharge, specify type-Foul smelling\",
      CASE WHEN (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 1) = 'Itchy') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 2) = 'Itchy') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 3) = 'Itchy') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 4) = 'Itchy') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 5) = 'Itchy') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 6) = 'Itchy') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 7) = 'Itchy')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes on vaginal discharge, specify type-Itchy\",
      CASE WHEN (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 1) = 'Blood stained') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 2) = 'Blood stained') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 3) = 'Blood stained') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 4) = 'Blood stained') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 5) = 'Blood stained') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 6) = 'Blood stained') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 7) = 'Blood stained')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes on vaginal discharge, specify type-Blood stained\",
      CASE WHEN (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 1) = ' Other') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 2) = ' Other') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 3) = ' Other') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 4) = ' Other') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 5) = ' Other') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 6) = ' Other') OR
                (split_part(aivc_female_if_yes_on_vaginal_discharge_specify_type,',', 7) = ' Other')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes on vaginal discharge, specify type- Other\",
      CASE WHEN aivc_female_have_you_noticed_non_painful_of_painful_ulcers_ = 'Yes' THEN 1
           WHEN aivc_female_have_you_noticed_non_painful_of_painful_ulcers_ = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \" Have you noticed ulcers on or around the labia\",
      CASE WHEN aivc_female_have_you_noticed_warts_on_the_genital_area = 'Yes' THEN 1
           WHEN aivc_female_have_you_noticed_warts_on_the_genital_area = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Have you noticed warts on the genital area?\",
      CASE WHEN aivc_female_have_you_noticed_ulcers_on_or_around_the_anal_a = 'Yes' THEN 1
           WHEN aivc_female_have_you_noticed_ulcers_on_or_around_the_anal_a = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Female Have you noticed ulcers on or around the anal area?\",
      CASE WHEN aivc_female_have_you_noticed_warts_on_or_around_the_anal_ar = 'Yes' THEN 1
           WHEN aivc_female_have_you_noticed_warts_on_or_around_the_anal_ar = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Female Have you noticed warts on or around the anal area?\",
      CASE WHEN aivc_male_have_you_observed_a_discharge_from_the_penis = 'Yes' THEN 1
           WHEN aivc_male_have_you_observed_a_discharge_from_the_penis = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Have you observed a discharge from the penis?\",
       CASE WHEN (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 1) = 'Whitish') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 2) = 'Whitish') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 3) = 'Whitish') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 4) = 'Whitish') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 5) = 'Whitish') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 6) = 'Whitish')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes on penis discharge, specify type - Whitish\",
      CASE WHEN (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 1) = 'Creamy') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 2) = 'Creamy') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 3) = 'Creamy') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 4) = 'Creamy') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 5) = 'Creamy') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 6) = 'Creamy')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes on penis discharge, specify type - Creamy\",
      CASE WHEN (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 1) = 'Foul smelling') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 2) = 'Foul smelling') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 3) = 'Foul smelling') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 4) = 'Foul smelling') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 5) = 'Foul smelling') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 6) = 'Foul smelling')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes on penis discharge, specify type - Foul smelling\",
      CASE WHEN (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 1) = 'Itchy') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 2) = 'Itchy') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 3) = 'Itchy') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 4) = 'Itchy') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 5) = 'Itchy') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 6) = 'Itchy')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes on penis discharge, specify type - Itchy\",
      CASE WHEN (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 1) = 'Blood stained') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 2) = 'Blood stained') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 3) = 'Blood stained') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 4) = 'Blood stained') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 5) = 'Blood stained') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 6) = 'Blood stained')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes on penis discharge, specify type - Blood stained\",
      CASE WHEN (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 1) = 'Other') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 2) = 'Other') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 3) = 'Other') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 4) = 'Other') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 5) = 'Other') OR
                (split_part(aivc_male_if_yes_on_penis_discharge_specify_type,',', 6) = 'Other')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes on penis discharge, specify type - Other\",
      CASE WHEN aivc_male_have_you_noticed_ulcers_on_the_penis = 'Yes' THEN 1
           WHEN aivc_male_have_you_noticed_ulcers_on_the_penis = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Have you noticed ulcers on the penis?\",
      CASE WHEN aivc_male_have_you_noticed_warts_around_the_genital_area = 'Yes' THEN 1
           WHEN aivc_male_have_you_noticed_warts_around_the_genital_area = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Male Have you noticed warts around the genital area?\",
      CASE WHEN aivc_male_have_you_noticed_ulcers_on_or_around_the_anal_are = 'Yes' THEN 1
           WHEN aivc_male_have_you_noticed_ulcers_on_or_around_the_anal_are = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Male Have you noticed ulcers on or around the anal area?\",
      CASE WHEN aivc_male_have_you_noticed_warts_on_or_around_the_anal_area = 'Yes' THEN 1
           WHEN aivc_male_have_you_noticed_warts_on_or_around_the_anal_area = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Male Have you noticed warts on or around the anal area?\",
      CASE WHEN aivc_are_you_currently_pregnant = 'Yes' THEN 1
           WHEN aivc_are_you_currently_pregnant = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \" Are you currently pregnant?\",
      CASE WHEN aivc_are_you_booked_for_antenatal_care = 'Yes' THEN 1
           WHEN aivc_are_you_booked_for_antenatal_care = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Are you booked for ANC?\",
      CASE WHEN aivc_do_you_know_the_edd = 'Yes' THEN 1
           WHEN aivc_do_you_know_the_edd = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Do you know the EDD?\",
      aivc_date AS \"Date\",
      CASE WHEN aivc_is_the_client_on_triple_therapy = 'Yes' THEN 1
           WHEN aivc_is_the_client_on_triple_therapy = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Is the client on triple therapy?\",
      CASE WHEN aivc_have_you_experienced_intermenstrual_bleeding = 'Yes' THEN 1
           WHEN aivc_have_you_experienced_intermenstrual_bleeding = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Have you experienced intermenstrual bleeding?\",
      aivc_duration_of_intermenstrual_bleeding AS \"Duration of intermenstrual bleeding\",
      CASE WHEN aivc_have_you_experienced_post_coital_bleeding = 'Yes' THEN 1
           WHEN aivc_have_you_experienced_post_coital_bleeding = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Have you experienced Post-coital bleeding?\",
      CASE WHEN aivc_have_you_had_several_episodes_of_vaginal_thrush = 'Yes' THEN 1
           WHEN aivc_have_you_had_several_episodes_of_vaginal_thrush = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Have you had several episodes of vaginal thrush?\",
      CASE WHEN aivc_do_you_use_contraceptives = 'Yes' THEN 1
           WHEN aivc_do_you_use_contraceptives = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Do you use contraceptives?\",
      CASE WHEN what_types_of_contraceptives_do_you_use = 'AIVC, Other' THEN 'Other'
           ELSE what_types_of_contraceptives_do_you_use END AS \"What types of contraceptives do you use?\",
      aivc_other_contraceptives AS \"If Other, specify details\",
      CASE WHEN aivc_have_you_been_screened_for_cervical_cancer = 'Yes' THEN 1
           WHEN aivc_have_you_been_screened_for_cervical_cancer = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Have you been screened for cervical cancer?\",
      aivc_date_of_screening AS \"Date of screening\",
      screening_result AS \"Screening result\",
      CASE WHEN aivc_have_you_observed_a_breast_lump_s = 'Yes' THEN 1
           WHEN aivc_have_you_observed_a_breast_lump_s = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Have you observed a breast lump(s)?\",
      aivc_duration_of_breast_lump AS \"Duration of breast lump\",
      aivc_location_of_breast_lump AS \"Location of breast lump\",
      aivc_do_you_have_a_discharge_from_the_nipple_s AS \"Do you have a discharge from the nipple(s)?\",
      CASE WHEN aivc_have_you_been_taking_other_medications_or_muti_herbs_w = 'Yes' THEN 1
           WHEN aivc_have_you_been_taking_other_medications_or_muti_herbs_w = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Have you been taking other medications or muti (herbs) within the past 2 months?\",
      CASE WHEN aivc_are_you_taking_tb_medicines = 'Yes' THEN 1
           WHEN aivc_are_you_taking_tb_medicines = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Are you taking TB medicines?\",
      CASE WHEN aivc_have_you_ever_experienced_a_drug_allergy = 'Yes' THEN 1
           WHEN aivc_have_you_ever_experienced_a_drug_allergy = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Have you ever experienced a drug allergy?\",
      aivc_if_yes_specify_drug_allergy_details AS \"If yes, specify drug allergy details\",
      CASE WHEN aivc_have_been_treated_for_any_of_the_following_conditions = 'Yes' THEN 1
           WHEN aivc_have_been_treated_for_any_of_the_following_conditions = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Have been treated for any of the following conditions?\",

      aivc_if_yes_specify_details AS \"If yes, Specify details for any of the  following conditions\",
      CASE WHEN (split_part(aivc_if_yes_specify_details,',', 1) = 'Cryptococcal Meningitis') OR
                (split_part(aivc_if_yes_specify_details,',', 2) = 'Cryptococcal Meningitis') OR
                (split_part(aivc_if_yes_specify_details,',', 3) = 'Cryptococcal Meningitis') OR
                (split_part(aivc_if_yes_specify_details,',', 4) = 'Cryptococcal Meningitis') OR
                (split_part(aivc_if_yes_specify_details,',', 5) = 'Cryptococcal Meningitis') OR
                (split_part(aivc_if_yes_specify_details,',', 6) = 'Cryptococcal Meningitis')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes, Specify details - Cryptococcal meningitis\",
      CASE WHEN (split_part(aivc_if_yes_specify_details,',', 1) = 'PCP') OR
                (split_part(aivc_if_yes_specify_details,',', 2) = 'PCP') OR
                (split_part(aivc_if_yes_specify_details,',', 3) = 'PCP') OR
                (split_part(aivc_if_yes_specify_details,',', 4) = 'PCP') OR
                (split_part(aivc_if_yes_specify_details,',', 5) = 'PCP') OR
                (split_part(aivc_if_yes_specify_details,',', 6) = 'PCP')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes, Specify details - PCP\",
      CASE WHEN (split_part(aivc_if_yes_specify_details,',', 1) = 'Non Hodgkins Lymphoma (Ca of the lymph nodes)') OR
                (split_part(aivc_if_yes_specify_details,',', 2) = 'Non Hodgkins Lymphoma (Ca of the lymph nodes)') OR
                (split_part(aivc_if_yes_specify_details,',', 3) = 'Non Hodgkins Lymphoma (Ca of the lymph nodes)') OR
                (split_part(aivc_if_yes_specify_details,',', 4) = 'Non Hodgkins Lymphoma (Ca of the lymph nodes)') OR
                (split_part(aivc_if_yes_specify_details,',', 5) = 'Non Hodgkins Lymphoma (Ca of the lymph nodes)') OR
                (split_part(aivc_if_yes_specify_details,',', 6) = 'Non Hodgkins Lymphoma (Ca of the lymph nodes)')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes, Specify details - Non Hodgkins Lymphoma (Ca of the lymph nodes)\",
      CASE WHEN (split_part(aivc_if_yes_specify_details,',', 1) = 'Respiratory disease') OR
                (split_part(aivc_if_yes_specify_details,',', 2) = 'Respiratory disease') OR
                (split_part(aivc_if_yes_specify_details,',', 3) = 'Respiratory disease') OR
                (split_part(aivc_if_yes_specify_details,',', 4) = 'Respiratory disease') OR
                (split_part(aivc_if_yes_specify_details,',', 5) = 'Respiratory disease') OR
                (split_part(aivc_if_yes_specify_details,',', 6) = 'Respiratory disease')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes, Specify details - Respiratory disease\",
      CASE WHEN (split_part(aivc_if_yes_specify_details,',', 1) = 'Cardiac Disease') OR
                (split_part(aivc_if_yes_specify_details,',', 2) = 'Cardiac Disease') OR
                (split_part(aivc_if_yes_specify_details,',', 3) = 'Cardiac Disease') OR
                (split_part(aivc_if_yes_specify_details,',', 4) = 'Cardiac Disease') OR
                (split_part(aivc_if_yes_specify_details,',', 5) = 'Cardiac Disease') OR
                (split_part(aivc_if_yes_specify_details,',', 6) = 'Cardiac Disease')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes, Specify details - Cardiac Disease\",
      CASE WHEN (split_part(aivc_if_yes_specify_details,',', 1) = 'Skin disease') OR
                (split_part(aivc_if_yes_specify_details,',', 2) = 'Skin disease') OR
                (split_part(aivc_if_yes_specify_details,',', 3) = 'Skin disease') OR
                (split_part(aivc_if_yes_specify_details,',', 4) = 'Skin disease') OR
                (split_part(aivc_if_yes_specify_details,',', 5) = 'Skin disease') OR
                (split_part(aivc_if_yes_specify_details,',', 6) = 'Skin disease')
          THEN 1
          ELSE NULL END :: BOOLEAN AS \"If yes, Specify details -   Skin disease\",
      aivc_medical_and_surigcal_history_notes AS \"Notes for the condition\",
      CASE WHEN aivc_have_you_been_sexually_abused = 'Yes' THEN 1
           WHEN aivc_have_you_been_sexually_abused = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Have you been sexually abused?\",
      CASE WHEN aivc_has_a_police_report_been_filed = 'Yes' THEN 1
           WHEN aivc_has_a_police_report_been_filed = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Has a police report been filed?\",
      CASE WHEN aivc_did_you_receive_any_medical_treatment_afterwards = 'Yes' THEN 1
           WHEN aivc_did_you_receive_any_medical_treatment_afterwards = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Did you receive any medical treatment afterwards?\",
      CASE WHEN aivc_did_you_receive_counseling = 'Yes' THEN 1
           WHEN aivc_did_you_receive_counseling = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Did you receive counseling?\",
      aivc_do_you_consider_yourself_to_be AS \"Do you consider yourself to be\",
      aivc_in_the_past_3_months_whom_have_you_had_sex_with AS \"In the past 3 months whom have you had sex with?\",
      aivc_which_gender_do_you_feel_attracted_to AS \"Which gender do you feel attracted to?\",
      aivc_during_the_sexual_act_which_one_of_these_do_you_practi AS \"During the sexual act which one of these do you practice?\",
      aivc_do_you_ever_ingage_in_transactional_sex AS \"Do you ever ingage in transactional sex?\",
      CASE WHEN aivc_are_you_or_have_you_ever_been_a_smoker = 'Yes' THEN 1
           WHEN aivc_are_you_or_have_you_ever_been_a_smoker = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Are you or have you ever been a smoker?\",
      CASE WHEN aivc_do_you_drink_alcoholic_beverages = 'Yes' THEN 1
           WHEN aivc_do_you_drink_alcoholic_beverages = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Do you drink alcoholic beverages?\",
      CASE WHEN aivc_do_you_use_illicit_drugs = 'Yes' THEN 1
           WHEN aivc_do_you_use_illicit_drugs = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"Do you use illicit drugs?\",
      aivc_what_types_of_illicit_drugs_do_you_use_and_how_often AS \"What types of illicit drugs do you use and how often?\",
      aivc_availability AS \"Availability\",
      aivc_assessment AS \"Assessment\",
      aivc_plan AS \"Plan\",
      CASE WHEN aivc_client_initiated_on_art = 'Yes' THEN 1
           WHEN aivc_client_initiated_on_art = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"[ART Form2] Client Initiated on ART ?\",
      aivc_date_client_initiated_on_art AS \"[ART Form2] Date client initiated on ART\",
      aivc_next_review_date AS \"[ART Form2] Next Review Date\",
      aivc_next_date_of_medication_resupply AS \"[ART Form2] Next Date Of Medication Resupply\",
      aivc_duration_of_medication AS \"[ART Form2] Duration Of Medication\",
      ap_activity_status AS \"[Assesment Form]Activity Status\",
      ap_type_of_transfer_out AS \"[Assesment Form]Type Of Transfer Out\",
      ap_transfer_out_date AS \"[Assesment Form]Transfer Out Date\",
      ap_date_of_death AS \"[Assesment Form]Date Of Death\",
      ap_cause_of_death AS \"[Assesment Form]Cause Of Death\",
      ap_specify_other_infections_and_parasitic_disease AS \"[Assesment Form]Specify Other Infections And Parasitic Disease\",
      ap_specify_other_natural_causes AS \"[Assesment Form]Specify Other Natural Causes\",
      ap_specify_other_disease_or_conditions_leading_to_death AS \"[Assesment Form]Specify other Disease or conditions leading to Death\",
      ap_date_client_reported_as_ltfu AS \"[Assesment Form]Date client reported as LTFU\",
      ap_period_initiated_on_art_before_ltfu AS \"[Assesment Form]Period initiated on ART before LTFU\",
      ap_date_client_opted_out AS \"[Assesment Form]Date Client Opted Out\",
      ap_transfer_in_date AS \"[Assesment Form]Transfer In Date\",
      ap_program_stop_date AS \"[Assesment Form]Program Stop date\",
      ap_type_of_follow_up AS \"[Assesment Form]Type Of Follow Up\",
      CASE WHEN ap_are_you_currently_breastfeeding = 'Yes' THEN 1
           WHEN ap_are_you_currently_breastfeeding = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"[Assesment Form]Are you currently breastfeeding?\",
      ap_duration_of_medication AS \"[Assesment Form]Duration Of Medication\",
      ap_next_date_of_medication_resupply AS \"[Assesment Form]Next Date Of Medication Resupply\",
      ap_next_review_date AS \"[Assesment Form]Next Review Date\",
      CASE WHEN ap_is_the_client_eligible_for_viral_load = 'Yes' THEN 1
           WHEN ap_is_the_client_eligible_for_viral_load = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"[Assesment Form]Is the client eligible for Viral Load?\",
      CASE WHEN ap_was_the_sample_sent_to_the_lab = 'Yes' THEN 1
           WHEN ap_was_the_sample_sent_to_the_lab = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"[Assesment Form]Was the sample sent to the lab\",
      ap_reason_sample_not_sent_to_the_lab AS \"[Assesment Form]Reason sample not sent to the lab\",
      ap_type_of_request AS \"[Assesment Form]Type of request\",
      ap_routine_type AS \"[Assesment Form]Routine Type\",
      ap_targeted_type AS \"[Assesment Form]Targeted Type\",
      ap_why_is_the_client_not_eligible_for_v_l AS \"[Assesment Form]Why is the client not eligible for V/L?\",
      ap_date_of_last_v_l AS \"[Assesment Form]Date of last V/L\",
      ap_what_is_the_value_of_the_v_l AS \"[Assesment Form]What is the value of the V/L?\",
      ap_date_viral_load_results_received AS \"[Assesment Form]Date Viral load results received\",
      ap_viral_load_result AS \"[Assesment Form]Viral Load result\",
      ap_viral_load_status AS \"[Assesment Form]Viral load status\",
      CASE WHEN ap_client_referred_for_eac = 'Yes' THEN 1
           WHEN ap_client_referred_for_eac = 'No' THEN 0
           ELSE NULL END :: BOOLEAN AS \"[Assesment Form]Client referred for EAC\",
      ap_next_viral_load_date AS \"[Assesment Form]Next Viral Load date\"


 FROM
(SELECT
DISTINCT visit_id ,
FIRST_VALUE(aivc_site_type)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_site_type IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC) AS aivc_site_type,
FIRST_VALUE(aivc_facility)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_facility IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)AS aivc_facility,
FIRST_VALUE(aivc_district)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_district IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)AS aivc_district,
FIRST_VALUE(art1.date_created)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN art1.date_created IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)AS date_created,
FIRST_VALUE(art1.obs_datetime)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN art1.obs_datetime IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)AS obs_datetime,
FIRST_VALUE(art1.patient_id)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN art1.patient_id IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)AS patient_id,
FIRST_VALUE(aivc_setting)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_setting IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)AS aivc_setting,
FIRST_VALUE(aivc_workplace)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_workplace IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)AS aivc_workplace,
FIRST_VALUE(aivc_social_history_details)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_social_history_details IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS   aivc_social_history_details,
FIRST_VALUE(aivc_chief_complaint)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_chief_complaint IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)AS aivc_chief_complaint,
FIRST_VALUE(aivc_sourse_giving_history)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_sourse_giving_history IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)AS aivc_sourse_giving_history,
FIRST_VALUE(aivc_sourse_giving_history_other)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_sourse_giving_history_other IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC) AS
       aivc_sourse_giving_history_other,
 FIRST_VALUE(aivc_how_do_you_think_you_acquired_hiv)
       OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_how_do_you_think_you_acquired_hiv IS NULL THEN 0 ELSE 1
       END  DESC, art1.encounter_id DESC) AS aivc_how_do_you_think_you_acquired_hiv,
 FIRST_VALUE(aivc_have_you_had_a_positive_hiv_test)
       OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_had_a_positive_hiv_test IS NULL THEN 0 ELSE 1
       END DESC, art1.encounter_id DESC) AS aivc_have_you_had_a_positive_hiv_test,
FIRST_VALUE(aivc_why_were_u_tested)
       OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_why_were_u_tested IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
       AS aivc_why_were_u_tested,
FIRST_VALUE(aivc_when_was_the_test_done)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_when_was_the_test_done IS NULL THEN 0 ELSE 1 END DESC,
      art1.encounter_id DESC) AS aivc_when_was_the_test_done,
FIRST_VALUE(aivc_do_you_have_a_partner)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_have_a_partner IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC) AS aivc_do_you_have_a_partner,
FIRST_VALUE(aivc_is_your_sexual_partner_aware_of_your_hiv_status)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_is_your_sexual_partner_aware_of_your_hiv_status IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
       AS aivc_is_your_sexual_partner_aware_of_your_hiv_status,
FIRST_VALUE(aivc_has_you_partner_been_tested)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_has_you_partner_been_tested IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_has_you_partner_been_tested,
FIRST_VALUE(aivc_partners_test_result)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_partners_test_result IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC) AS aivc_partners_test_result,
FIRST_VALUE(aivc_do_you_have_any_children)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_have_any_children IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_do_you_have_any_children,
FIRST_VALUE(aivc_how_many_children_do_you_have)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_how_many_children_do_you_have IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_how_many_children_do_you_have,
FIRST_VALUE(aivc_have_any_of_your_children_been_tested_for_hiv)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_any_of_your_children_been_tested_for_hiv IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_have_any_of_your_children_been_tested_for_hiv,
FIRST_VALUE(aivc_number_of_children_hiv_positive)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_number_of_children_hiv_positive IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_number_of_children_hiv_positive,
FIRST_VALUE(aivc_number_of_children_hiv_negative)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_number_of_children_hiv_negative IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_number_of_children_hiv_negative,
FIRST_VALUE(aivc_have_you_had_cd4_count_lab_test)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_had_cd4_count_lab_test IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_have_you_had_cd4_count_lab_test,
FIRST_VALUE(aivc_cd4_count_results)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_cd4_count_results IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_cd4_count_results,
FIRST_VALUE(aivc_did_you_have_fever_recently)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_did_you_have_fever_recently IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_did_you_have_fever_recently,
FIRST_VALUE(aivc_duration_of_fever)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_duration_of_fever IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_duration_of_fever,
FIRST_VALUE(aivc_did_you_have_night_sweats)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_did_you_have_night_sweats IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_did_you_have_night_sweats,
FIRST_VALUE(aivc_duration_of_night_sweats)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_duration_of_night_sweats IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_duration_of_night_sweats,
FIRST_VALUE(aivc_do_you_have_weight_loss)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_have_weight_loss IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_do_you_have_weight_loss,
FIRST_VALUE(aivc_duration_of_weight_loss)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_duration_of_weight_loss IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_duration_of_weight_loss,
FIRST_VALUE(aivc_do_you_have_shortness_of_breath)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_have_shortness_of_breath IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_do_you_have_shortness_of_breath,
FIRST_VALUE(aivc_duration_of_shortness_of_breath)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_duration_of_shortness_of_breath IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_duration_of_shortness_of_breath,
FIRST_VALUE(aivc_when_does_the_shortness_of_breath_occur)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_when_does_the_shortness_of_breath_occur IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_when_does_the_shortness_of_breath_occur,
FIRST_VALUE(aivc_have_you_ever_had_tb)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_ever_had_tb IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_have_you_ever_had_tb,
FIRST_VALUE(aivc_how_many_episodes_of_tb)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_how_many_episodes_of_tb IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_how_many_episodes_of_tb,
FIRST_VALUE(aivc_tb_dates_of_previous_episodes)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_tb_dates_of_previous_episodes IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_tb_dates_of_previous_episodes,
FIRST_VALUE(aivc_are_you_currently_being_treated_for_tb)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_are_you_currently_being_treated_for_tb IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC)
      AS aivc_are_you_currently_being_treated_for_tb,
FIRST_VALUE(aivc_how_was_it_diagnosed)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_how_was_it_diagnosed IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC) AS aivc_how_was_it_diagnosed,
FIRST_VALUE(aivc_location_of_tb)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_location_of_tb IS NULL THEN 0 ELSE 1 END DESC, art1.encounter_id DESC) AS aivc_location_of_tb,
FIRST_VALUE(aivc_have_you_lived_with_someone_who_has_been_diagnosed_of_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_lived_with_someone_who_has_been_diagnosed_of_ IS NULL THEN 0 ELSE 1 END DESC,
      art1.encounter_id DESC) AS aivc_have_you_lived_with_someone_who_has_been_diagnosed_of_,
FIRST_VALUE(aivc_do_you_have_any_skin_problems)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_have_any_skin_problems IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS  aivc_do_you_have_any_skin_problems,
FIRST_VALUE(aivc_have_you_had_a_skin_rash_recently)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_had_a_skin_rash_recently IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS  aivc_have_you_had_a_skin_rash_recently,
FIRST_VALUE(aivc_duration_of_skin_rash)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_duration_of_skin_rash IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS  aivc_duration_of_skin_rash,
FIRST_VALUE(aivc_location_of_skin_rash_details)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_location_of_skin_rash_details IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS  aivc_location_of_skin_rash_details,
FIRST_VALUE(aivc_mophology)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_mophology IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)  AS  aivc_mophology,
FIRST_VALUE(aivc_did_the_skin_rash_start_after_taking_medications)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_did_the_skin_rash_start_after_taking_medications IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS  aivc_did_the_skin_rash_start_after_taking_medications,
FIRST_VALUE(aivc_have_you_ever_had_herpes_zoster_shingles)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_ever_had_herpes_zoster_shingles IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS  aivc_have_you_ever_had_herpes_zoster_shingles,
FIRST_VALUE(aivc_did_you_experience_ant_itching)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_did_you_experience_ant_itching IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS  aivc_did_you_experience_ant_itching,
FIRST_VALUE(aivc_have_you_observed_a_lump_growing)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_observed_a_lump_growing IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS  aivc_have_you_observed_a_lump_growing,
FIRST_VALUE(aivc_location_lump_details)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_location_lump_details IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC) AS aivc_location_lump_details,
FIRST_VALUE(aivc_are_you_know_where_you_are_and_what_you_are_doing_here)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_are_you_know_where_you_are_and_what_you_are_doing_here IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_are_you_know_where_you_are_and_what_you_are_doing_here,
FIRST_VALUE(aivc_are_you_know_who_i_am)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_are_you_know_who_i_am IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC) AS aivc_are_you_know_who_i_am,
FIRST_VALUE(aivc_are_you_know_the_date_day_year_or_season)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_are_you_know_the_date_day_year_or_season IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_are_you_know_the_date_day_year_or_season,
FIRST_VALUE(aivc_have_you_become_forgetful)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_become_forgetful IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_have_you_become_forgetful,
FIRST_VALUE(aivc_do_you_need_to_be_reminded_of_things)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_need_to_be_reminded_of_things IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_do_you_need_to_be_reminded_of_things,
FIRST_VALUE(aivc_are_you_suffering_from_headaches)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_are_you_suffering_from_headaches IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_are_you_suffering_from_headaches,
FIRST_VALUE(aivc_duration_of_headache)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_duration_of_headache IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)  AS aivc_duration_of_headache,
FIRST_VALUE(aivc_headache_severity)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_headache_severity IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)  AS aivc_headache_severity,
FIRST_VALUE(aivc_headache_course)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_headache_course IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)  AS aivc_headache_course,
FIRST_VALUE(aivc_headache_association)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_headache_association IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)  AS aivc_headache_association,FIRST_VALUE(aivc_have_you_experienced_loss_of_vision)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_experienced_loss_of_vision IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_have_you_experienced_loss_of_vision,
FIRST_VALUE(aivc_heent_if_yes_specify_details)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_heent_if_yes_specify_details IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_heent_if_yes_specify_details,
FIRST_VALUE(aivc_have_you_noticed_any_changes_in_or_around_the_mouth_an)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_noticed_any_changes_in_or_around_the_mouth_an IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_have_you_noticed_any_changes_in_or_around_the_mouth_an,
FIRST_VALUE(aivc_have_you_had_blisters_or_swelling_on_around_the_lips)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_had_blisters_or_swelling_on_around_the_lips IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_have_you_had_blisters_or_swelling_on_around_the_lips,
FIRST_VALUE(aivc_have_you_had_oral_thrush)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_had_oral_thrush IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_have_you_had_oral_thrush,
FIRST_VALUE(aivc_have_you_had_a_cough)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_had_a_cough IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC) AS aivc_have_you_had_a_cough,
FIRST_VALUE(aivc_type_of_cough)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_type_of_cough IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC) AS aivc_type_of_cough,
FIRST_VALUE(aivc_duration_of_the_cough)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_duration_of_the_cough IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC) AS aivc_duration_of_the_cough,
FIRST_VALUE(aivc_have_you_had_a_chest_pain)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_had_a_chest_pain IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_have_you_had_a_chest_pain,
FIRST_VALUE(aivc_location_of_the_chest_pain)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_location_of_the_chest_pain IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_location_of_the_chest_pain,
FIRST_VALUE(aivc_when_does_chest_pain_occur)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_when_does_chest_pain_occur IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_when_does_chest_pain_occur,
FIRST_VALUE(aivc_duration_of_chest_pains)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_duration_of_chest_pains IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_duration_of_chest_pains,
FIRST_VALUE(aivc_have_you_experienced_shortness_of_breath)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_experienced_shortness_of_breath IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_have_you_experienced_shortness_of_breath,
FIRST_VALUE(aivc_1_duration_of_shortness_of_breath_1)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_1_duration_of_shortness_of_breath_1 IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_1_duration_of_shortness_of_breath_1,
FIRST_VALUE(aivc_have_you_had_more_than_one_episodes_of_pneumonia)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_had_more_than_one_episodes_of_pneumonia IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_have_you_had_more_than_one_episodes_of_pneumonia,
FIRST_VALUE(aivc_how_many_episodes_of_pneumonia)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_how_many_episodes_of_pneumonia IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_how_many_episodes_of_pneumonia,
FIRST_VALUE(aivc_have_you_had_swelling_of)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_had_swelling_of IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_have_you_had_swelling_of,
FIRST_VALUE(aivc_have_you_experienced_nocturia)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_experienced_nocturia IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_have_you_experienced_nocturia,
FIRST_VALUE(aivc_do_you_have_a_high_blood_pressure)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_have_a_high_blood_pressure IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_do_you_have_a_high_blood_pressure,
FIRST_VALUE(aivc_are_you_on_hypertensive_drugs)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_are_you_on_hypertensive_drugs IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_are_you_on_hypertensive_drugs,
FIRST_VALUE(aivc_if_yes_on_hypertensive_drugs_specify)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_if_yes_on_hypertensive_drugs_specify IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_if_yes_on_hypertensive_drugs_specify,
FIRST_VALUE(aivc_do_you_have_difficulty_swallowing)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_have_difficulty_swallowing IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
       AS aivc_do_you_have_difficulty_swallowing,
FIRST_VALUE(aivc_is_swallowing_painful)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_is_swallowing_painful IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC) AS aivc_is_swallowing_painful,
FIRST_VALUE(aivc_do_you_vomit_frequently)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_vomit_frequently IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_do_you_vomit_frequently,
FIRST_VALUE(aivc_when_do_you_vomit)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_when_do_you_vomit IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)  AS aivc_when_do_you_vomit,
FIRST_VALUE(aivc_vomit_content)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_vomit_content IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)  AS aivc_vomit_content,
FIRST_VALUE(aivc_do_you_have_diarrhea)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_have_diarrhea IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)  AS aivc_do_you_have_diarrhea,
FIRST_VALUE(aivc_diarrhea_duration)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_diarrhea_duration IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)  AS aivc_diarrhea_duration,
FIRST_VALUE(aivc_diarrhea_details)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_diarrhea_details IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)  AS aivc_diarrhea_details,
FIRST_VALUE(aivc_do_you_have_frequent_abdominal_pain)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_have_frequent_abdominal_pain IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
        AS aivc_do_you_have_frequent_abdominal_pain,
FIRST_VALUE(aivc_does_the_abdominal_pain_occur_during_fasting)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_does_the_abdominal_pain_occur_during_fasting IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_does_the_abdominal_pain_occur_during_fasting,
FIRST_VALUE(aivc_do_you_have_frequent_epigastric_pain)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_have_frequent_epigastric_pain IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_do_you_have_frequent_epigastric_pain,
FIRST_VALUE(aivc_abdominal_pain_location)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_abdominal_pain_location IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_abdominal_pain_location,
FIRST_VALUE(aivc_abdominal_pain_duration)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_abdominal_pain_duration IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_abdominal_pain_duration,
FIRST_VALUE(aivc_have_you_experienced_muscle_aches)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_experienced_muscle_aches IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_have_you_experienced_muscle_aches,
FIRST_VALUE(aivc_have_you_experienced_joint_pain)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_experienced_joint_pain IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_have_you_experienced_joint_pain,
FIRST_VALUE(aivc_joint_pain_duration)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_joint_pain_duration IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_joint_pain_duration,
FIRST_VALUE(aivc_location_of_joint_pain)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_location_of_joint_pain IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_location_of_joint_pain,
FIRST_VALUE(aivc_have_you_experienced_joint_swelling)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_experienced_joint_swelling IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_have_you_experienced_joint_swelling,
FIRST_VALUE(aivc_joint_swelling_duration)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_joint_swelling_duration IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_joint_swelling_duration,
FIRST_VALUE(aivc_location_of_joint_swelling)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_location_of_joint_swelling IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_location_of_joint_swelling,
FIRST_VALUE(aivc_do_you_feel_a_burning_sensation_with_micturation)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_feel_a_burning_sensation_with_micturation IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_do_you_feel_a_burning_sensation_with_micturation,
FIRST_VALUE(aivc_did_you_have_a_fever_rigors_or_chills_with_the_burning)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_did_you_have_a_fever_rigors_or_chills_with_the_burning IS NULL THEN 0 ELSE 1 END DESC,
      art1.encounter_id DESC)  AS aivc_did_you_have_a_fever_rigors_or_chills_with_the_burning,
FIRST_VALUE(aivc_have_you_experienced_loss_of_sexual_interest)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_experienced_loss_of_sexual_interest IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_have_you_experienced_loss_of_sexual_interest,
FIRST_VALUE(aivc_erectile_dysfunction)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_erectile_dysfunction IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)  AS aivc_erectile_dysfunction,FIRST_VALUE(aivc_dysparenuia_painful_sexual_intercourse)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_dysparenuia_painful_sexual_intercourse IS NULL THEN 0 ELSE 1 END DESC,art1.encounter_id DESC)
      AS aivc_dysparenuia_painful_sexual_intercourse

FROM
(SELECT max(id_art_initial_visit_compulsory_question_1_of_2) AS id_art_initial_visit_compulsory_question_1_of_2,
max(patient_id) AS patient_id,
encounter_id,
max(obs_datetime) AS obs_datetime,
max(date_created) AS date_created,
max(date_modified) AS date_modified,
max(location_id) AS location_id,
max(location_name) AS location_name,
max(program_id) AS program_id,
max(program_name) AS program_name,
max(aivc_facility) AS aivc_facility,
max(aivc_site_type) AS aivc_site_type,
max(aivc_district) AS aivc_district,
max(aivc_setting) AS aivc_setting,
max(aivc_workplace) AS aivc_workplace,
max(aivc_social_history_details) AS aivc_social_history_details,
max(aivc_chief_complaint) AS aivc_chief_complaint,
max(aivc_sourse_giving_history) AS aivc_sourse_giving_history ,
max(aivc_sourse_giving_history_other) AS aivc_sourse_giving_history_other ,
max(aivc_how_do_you_think_you_acquired_hiv) AS aivc_how_do_you_think_you_acquired_hiv,
max(aivc_have_you_had_a_positive_hiv_test) AS aivc_have_you_had_a_positive_hiv_test,
max(aivc_why_were_u_tested)  AS aivc_why_were_u_tested,
max(aivc_why_were_u_tested_other)  AS aivc_why_were_u_tested_other,
max(aivc_when_was_the_test_done) AS aivc_when_was_the_test_done,
max(aivc_do_you_have_a_partner) AS aivc_do_you_have_a_partner,
max(aivc_is_your_sexual_partner_aware_of_your_hiv_status) AS aivc_is_your_sexual_partner_aware_of_your_hiv_status,
max(aivc_has_you_partner_been_tested) AS aivc_has_you_partner_been_tested,
max(aivc_partners_test_result) AS aivc_partners_test_result,
max(aivc_do_you_have_any_children) AS aivc_do_you_have_any_children,
max(aivc_how_many_children_do_you_have) AS aivc_how_many_children_do_you_have,
max(aivc_have_any_of_your_children_been_tested_for_hiv) AS aivc_have_any_of_your_children_been_tested_for_hiv,
max(aivc_number_of_children_hiv_positive) AS aivc_number_of_children_hiv_positive,
max(aivc_number_of_children_hiv_negative) AS aivc_number_of_children_hiv_negative,
max(aivc_have_you_had_cd4_count_lab_test) AS aivc_have_you_had_cd4_count_lab_test,
max(aivc_cd4_count_results) AS aivc_cd4_count_results,
max(aivc_did_you_have_fever_recently) AS aivc_did_you_have_fever_recently,
max(aivc_duration_of_fever) AS aivc_duration_of_fever,
max(aivc_did_you_have_night_sweats) AS aivc_did_you_have_night_sweats,
max(aivc_duration_of_night_sweats) AS aivc_duration_of_night_sweats,
max(aivc_do_you_have_weight_loss) AS aivc_do_you_have_weight_loss,
max(aivc_duration_of_weight_loss) AS aivc_duration_of_weight_loss,
max(aivc_do_you_have_shortness_of_breath) AS aivc_do_you_have_shortness_of_breath,
max(aivc_duration_of_shortness_of_breath) AS aivc_duration_of_shortness_of_breath,
max(aivc_have_you_ever_had_tb) AS aivc_have_you_ever_had_tb,
max(aivc_how_many_episodes_of_tb) AS aivc_how_many_episodes_of_tb,
string_agg(aivc_tb_dates_of_previous_episodes,',') AS aivc_tb_dates_of_previous_episodes,
max(aivc_are_you_currently_being_treated_for_tb) AS aivc_are_you_currently_being_treated_for_tb,
max(aivc_how_was_it_diagnosed) AS aivc_how_was_it_diagnosed,
max(aivc_location_of_tb) AS aivc_location_of_tb,
max(aivc_have_you_lived_with_someone_who_has_been_diagnosed_of_) AS aivc_have_you_lived_with_someone_who_has_been_diagnosed_of_,
max(aivc_do_you_have_any_skin_problems) AS aivc_do_you_have_any_skin_problems,
max(aivc_have_you_had_a_skin_rash_recently) AS aivc_have_you_had_a_skin_rash_recently,
max(aivc_duration_of_skin_rash) AS aivc_duration_of_skin_rash,
max(aivc_location_of_skin_rash_details) AS aivc_location_of_skin_rash_details,
max(aivc_location_of_skin_rash) AS aivc_location_of_skin_rash,
string_agg(aivc_mophology,',') AS aivc_mophology,
max(aivc_did_the_skin_rash_start_after_taking_medications) AS aivc_did_the_skin_rash_start_after_taking_medications,
max(aivc_have_you_ever_had_herpes_zoster_shingles) AS aivc_have_you_ever_had_herpes_zoster_shingles,
max(aivc_did_you_experience_ant_itching) AS aivc_did_you_experience_ant_itching,
max(aivc_have_you_observed_a_lump_growing) AS aivc_have_you_observed_a_lump_growing,
max(aivc_abdominal_pain_duration) AS aivc_abdominal_pain_duration,
max(aivc_location_lump_details) AS aivc_location_lump_details,
max(aivc_location_lump) AS aivc_location_lump,
max(aivc_are_you_know_where_you_are_and_what_you_are_doing_here) AS aivc_are_you_know_where_you_are_and_what_you_are_doing_here,
max(aivc_are_you_know_who_i_am) AS aivc_are_you_know_who_i_am,
max(aivc_are_you_know_the_date_day_year_or_season) AS aivc_are_you_know_the_date_day_year_or_season,
max(aivc_have_you_become_forgetful) AS aivc_have_you_become_forgetful,
max(aivc_do_you_need_to_be_reminded_of_things) AS aivc_do_you_need_to_be_reminded_of_things,
max(aivc_are_you_suffering_from_headaches) AS aivc_are_you_suffering_from_headaches,
max(aivc_duration_of_headache) AS aivc_duration_of_headache,
max(aivc_headache_severity) AS aivc_headache_severity,
max(aivc_headache_course) AS aivc_headache_course,
max(aivc_headache_association) AS aivc_headache_association,
max(aivc_have_you_experienced_loss_of_vision) AS aivc_have_you_experienced_loss_of_vision,
string_agg(aivc_heent_if_yes_specify_details,',') AS aivc_heent_if_yes_specify_details,
max(aivc_have_you_noticed_any_changes_in_or_around_the_mouth_an) AS aivc_have_you_noticed_any_changes_in_or_around_the_mouth_an,
max(aivc_have_you_had_blisters_or_swelling_on_around_the_lips) AS aivc_have_you_had_blisters_or_swelling_on_around_the_lips,
string_agg(aivc_have_you_had_oral_thrush,',') AS aivc_have_you_had_oral_thrush,
max(aivc_have_you_had_a_cough) AS aivc_have_you_had_a_cough,
max(aivc_type_of_cough) AS aivc_type_of_cough,
max(aivc_duration_of_the_cough) AS aivc_duration_of_the_cough,
max(aivc_have_you_had_a_chest_pain) AS aivc_have_you_had_a_chest_pain,
max(aivc_location_of_the_chest_pain) AS aivc_location_of_the_chest_pain,
max(aivc_if_other_location_of_the_chest_pain_specify) AS aivc_if_other_location_of_the_chest_pain_specify,
max(aivc_when_does_chest_pain_occur) AS aivc_when_does_chest_pain_occur,
max(aivc_chest_pain_occur_other) AS aivc_chest_pain_occur_other,
max(aivc_duration_of_chest_pains) AS aivc_duration_of_chest_pains,
max(aivc_have_you_experienced_shortness_of_breath) AS aivc_have_you_experienced_shortness_of_breath,
max(aivc_1_duration_of_shortness_of_breath_1) AS aivc_1_duration_of_shortness_of_breath_1,
max(aivc_when_does_the_shortness_of_breath_occur) AS aivc_when_does_the_shortness_of_breath_occur,
max(aivc_have_you_had_more_than_one_episodes_of_pneumonia) AS aivc_have_you_had_more_than_one_episodes_of_pneumonia,
max(aivc_how_many_episodes_of_pneumonia) AS aivc_how_many_episodes_of_pneumonia,
string_agg(aivc_have_you_had_swelling_of,',') AS aivc_have_you_had_swelling_of,
max(aivc_have_you_experienced_nocturia) AS aivc_have_you_experienced_nocturia,
max(aivc_do_you_have_a_high_blood_pressure) AS aivc_do_you_have_a_high_blood_pressure,
max(aivc_are_you_on_hypertensive_drugs) AS aivc_are_you_on_hypertensive_drugs,
max(aivc_if_yes_on_hypertensive_drugs_specify) AS aivc_if_yes_on_hypertensive_drugs_specify,
max(aivc_do_you_have_difficulty_swallowing) AS aivc_do_you_have_difficulty_swallowing,
max(aivc_is_swallowing_painful) AS aivc_is_swallowing_painful,
max(aivc_do_you_vomit_frequently) AS aivc_do_you_vomit_frequently,
max(aivc_when_do_you_vomit) AS aivc_when_do_you_vomit,
max(aivc_if_other_on_vomit_specify) AS aivc_if_other_on_vomit_specify,
max(aivc_vomit_content) AS aivc_vomit_content,
max(aivc_vommit_content_other) AS aivc_vommit_content_other,
max(aivc_do_you_have_diarrhea) AS aivc_do_you_have_diarrhea,
max(aivc_diarrhea_duration) AS aivc_diarrhea_duration,
max(aivc_diarrhea_details) AS aivc_diarrhea_details,
max(aivc_do_you_have_frequent_abdominal_pain) AS aivc_do_you_have_frequent_abdominal_pain,
max(aivc_does_the_abdominal_pain_occur_during_fasting) AS aivc_does_the_abdominal_pain_occur_during_fasting,
max(aivc_do_you_have_frequent_epigastric_pain) AS aivc_do_you_have_frequent_epigastric_pain,
max(aivc_abdominal_pain_location) AS aivc_abdominal_pain_location,
max(aivc_have_you_experienced_muscle_aches) AS aivc_have_you_experienced_muscle_aches,
max(aivc_have_you_experienced_joint_pain) AS aivc_have_you_experienced_joint_pain,
max(aivc_joint_pain_duration) AS aivc_joint_pain_duration,
max(aivc_location_of_joint_pain) AS aivc_location_of_joint_pain,
max(aivc_have_you_experienced_joint_swelling) AS aivc_have_you_experienced_joint_swelling,
max(aivc_joint_swelling_duration) AS aivc_joint_swelling_duration,
max(aivc_location_of_joint_swelling) AS aivc_location_of_joint_swelling,
max(aivc_do_you_feel_a_burning_sensation_with_micturation) AS aivc_do_you_feel_a_burning_sensation_with_micturation,
max(aivc_did_you_have_a_fever_rigors_or_chills_with_the_burning) AS aivc_did_you_have_a_fever_rigors_or_chills_with_the_burning,
max(aivc_have_you_experienced_loss_of_sexual_interest) AS aivc_have_you_experienced_loss_of_sexual_interest,
max(aivc_erectile_dysfunction) AS aivc_erectile_dysfunction,
max(aivc_dysparenuia_painful_sexual_intercourse) AS aivc_dysparenuia_painful_sexual_intercourse
FROM art_initial_visit_compulsory_question_1_of_2 GROUP BY encounter_id) AS art1
INNER JOIN patient_encounter_table pedd ON pedd.encounter_id = art1.encounter_id ) art1_1

FULL OUTER JOIN

(SELECT
DISTINCT visit_id ,
FIRST_VALUE(art2.obs_datetime)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN art2.obs_datetime IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC) AS obs_datetime,
FIRST_VALUE(art2.date_created)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN art2.date_created IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)AS date_created,
FIRST_VALUE(art2.patient_id)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN art2.patient_id IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)AS patient_id,
FIRST_VALUE(aivc_are_you_sexually_active)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_are_you_sexually_active IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_are_you_sexually_active,
FIRST_VALUE(aivc_female_have_you_observed_a_vaginal_discharge)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_female_have_you_observed_a_vaginal_discharge IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_female_have_you_observed_a_vaginal_discharge,
FIRST_VALUE(aivc_female_if_yes_on_vaginal_discharge_specify_type)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_female_if_yes_on_vaginal_discharge_specify_type IS NULL THEN 0 ELSE 1 END DESC,
      art2.encounter_id DESC)AS aivc_female_if_yes_on_vaginal_discharge_specify_type,
FIRST_VALUE(aivc_female_have_you_noticed_non_painful_of_painful_ulcers_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_female_have_you_noticed_non_painful_of_painful_ulcers_ IS NULL THEN 0 ELSE 1 END DESC,
      art2.encounter_id DESC)AS aivc_female_have_you_noticed_non_painful_of_painful_ulcers_,
FIRST_VALUE(aivc_female_have_you_noticed_warts_on_the_genital_area)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_female_have_you_noticed_warts_on_the_genital_area IS NULL THEN 0 ELSE 1 END DESC,
      art2.encounter_id DESC)AS aivc_female_have_you_noticed_warts_on_the_genital_area,
FIRST_VALUE(aivc_female_have_you_noticed_ulcers_on_or_around_the_anal_a)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_female_have_you_noticed_ulcers_on_or_around_the_anal_a IS NULL THEN 0 ELSE 1 END DESC,
      art2.encounter_id DESC) AS  aivc_female_have_you_noticed_ulcers_on_or_around_the_anal_a,
 FIRST_VALUE(aivc_female_have_you_noticed_warts_on_or_around_the_anal_ar)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_female_have_you_noticed_warts_on_or_around_the_anal_ar IS NULL THEN 0 ELSE 1 END DESC,
      art2.encounter_id DESC) AS  aivc_female_have_you_noticed_warts_on_or_around_the_anal_ar,
FIRST_VALUE(aivc_male_have_you_observed_a_discharge_from_the_penis)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_male_have_you_observed_a_discharge_from_the_penis IS NULL THEN 0 ELSE 1 END DESC,
       art2.encounter_id DESC)AS aivc_male_have_you_observed_a_discharge_from_the_penis,
FIRST_VALUE(aivc_male_if_yes_on_penis_discharge_specify_type)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_male_if_yes_on_penis_discharge_specify_type IS NULL THEN 0 ELSE 1 END DESC,
       art2.encounter_id DESC)AS aivc_male_if_yes_on_penis_discharge_specify_type,
FIRST_VALUE(aivc_male_have_you_noticed_ulcers_on_the_penis)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_male_have_you_noticed_ulcers_on_the_penis IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC) AS
       aivc_male_have_you_noticed_ulcers_on_the_penis,
 FIRST_VALUE(aivc_male_have_you_noticed_warts_around_the_genital_area)
       OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_male_have_you_noticed_warts_around_the_genital_area IS NULL THEN 0 ELSE 1
       END  DESC, art2.encounter_id DESC) AS aivc_male_have_you_noticed_warts_around_the_genital_area,
 FIRST_VALUE(aivc_male_have_you_noticed_ulcers_on_or_around_the_anal_are)
       OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_male_have_you_noticed_ulcers_on_or_around_the_anal_are IS NULL THEN 0 ELSE 1
       END DESC, art2.encounter_id DESC) AS aivc_male_have_you_noticed_ulcers_on_or_around_the_anal_are,
FIRST_VALUE(aivc_male_have_you_noticed_warts_on_or_around_the_anal_area)
       OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_male_have_you_noticed_warts_on_or_around_the_anal_area IS NULL THEN 0 ELSE 1 END DESC,
       art2.encounter_id DESC) AS aivc_male_have_you_noticed_warts_on_or_around_the_anal_area,
FIRST_VALUE(aivc_are_you_currently_pregnant)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_are_you_currently_pregnant IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)
      AS aivc_are_you_currently_pregnant,
FIRST_VALUE(aivc_are_you_booked_for_antenatal_care)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_are_you_booked_for_antenatal_care IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
       AS aivc_are_you_booked_for_antenatal_care,
FIRST_VALUE(aivc_do_you_know_the_edd)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_know_the_edd IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC) AS aivc_do_you_know_the_edd,
FIRST_VALUE(aivc_date)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_date IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC) AS aivc_date,
FIRST_VALUE(aivc_is_the_client_on_triple_therapy)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_is_the_client_on_triple_therapy IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_is_the_client_on_triple_therapy,
FIRST_VALUE(aivc_have_you_experienced_intermenstrual_bleeding)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_experienced_intermenstrual_bleeding IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_have_you_experienced_intermenstrual_bleeding,
FIRST_VALUE(aivc_duration_of_intermenstrual_bleeding)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_duration_of_intermenstrual_bleeding IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_duration_of_intermenstrual_bleeding,
FIRST_VALUE(aivc_have_you_experienced_post_coital_bleeding)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_experienced_post_coital_bleeding IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_have_you_experienced_post_coital_bleeding,
FIRST_VALUE(aivc_have_you_had_several_episodes_of_vaginal_thrush)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_had_several_episodes_of_vaginal_thrush IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_have_you_had_several_episodes_of_vaginal_thrush,
FIRST_VALUE(aivc_do_you_use_contraceptives)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_use_contraceptives IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_do_you_use_contraceptives,
FIRST_VALUE(what_types_of_contraceptives_do_you_use)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN what_types_of_contraceptives_do_you_use IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS what_types_of_contraceptives_do_you_use,
FIRST_VALUE(aivc_other_contraceptives)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_other_contraceptives IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_other_contraceptives,
FIRST_VALUE(aivc_have_you_been_screened_for_cervical_cancer)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_been_screened_for_cervical_cancer IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_have_you_been_screened_for_cervical_cancer,
FIRST_VALUE(aivc_date_of_screening)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_date_of_screening IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_date_of_screening,
FIRST_VALUE(screening_result)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN screening_result IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS screening_result,
FIRST_VALUE(aivc_have_you_observed_a_breast_lump_s)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_observed_a_breast_lump_s IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_have_you_observed_a_breast_lump_s,
FIRST_VALUE(aivc_duration_of_breast_lump)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_duration_of_breast_lump IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_duration_of_breast_lump,
FIRST_VALUE(aivc_location_of_breast_lump)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_location_of_breast_lump IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_location_of_breast_lump,
FIRST_VALUE(aivc_do_you_have_a_discharge_from_the_nipple_s)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_have_a_discharge_from_the_nipple_s IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_do_you_have_a_discharge_from_the_nipple_s,
FIRST_VALUE(aivc_have_you_been_taking_other_medications_or_muti_herbs_w)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_been_taking_other_medications_or_muti_herbs_w IS NULL THEN 0 ELSE 1 END DESC,
       art2.encounter_id DESC) AS aivc_have_you_been_taking_other_medications_or_muti_herbs_w,
FIRST_VALUE(aivc_are_you_taking_tb_medicines)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_are_you_taking_tb_medicines IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_are_you_taking_tb_medicines,
FIRST_VALUE(aivc_have_you_ever_experienced_a_drug_allergy)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_ever_experienced_a_drug_allergy IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_have_you_ever_experienced_a_drug_allergy,
FIRST_VALUE(aivc_if_yes_specify_drug_allergy_details)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_if_yes_specify_drug_allergy_details IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_if_yes_specify_drug_allergy_details,
FIRST_VALUE(aivc_have_been_treated_for_any_of_the_following_conditions)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_been_treated_for_any_of_the_following_conditions IS NULL THEN 0 ELSE 1 END DESC,
       art2.encounter_id DESC)  AS aivc_have_been_treated_for_any_of_the_following_conditions,
FIRST_VALUE(aivc_if_yes_specify_details)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_if_yes_specify_details IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_if_yes_specify_details,
FIRST_VALUE(aivc_medical_and_surigcal_history_notes)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_medical_and_surigcal_history_notes IS NULL THEN 0 ELSE 1 END DESC, art2.encounter_id DESC)
      AS aivc_medical_and_surigcal_history_notes,
FIRST_VALUE(aivc_have_you_been_sexually_abused)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_have_you_been_sexually_abused IS NULL THEN 0 ELSE 1 END DESC,
      art2.encounter_id DESC) AS aivc_have_you_been_sexually_abused,
FIRST_VALUE(aivc_has_a_police_report_been_filed)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_has_a_police_report_been_filed IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)
      AS  aivc_has_a_police_report_been_filed,
FIRST_VALUE(aivc_did_you_receive_any_medical_treatment_afterwards)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_did_you_receive_any_medical_treatment_afterwards IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)
      AS  aivc_did_you_receive_any_medical_treatment_afterwards,
FIRST_VALUE(aivc_did_you_receive_counseling)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_did_you_receive_counseling IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)
      AS  aivc_did_you_receive_counseling,
FIRST_VALUE(aivc_do_you_consider_yourself_to_be)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_consider_yourself_to_be IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)
      AS  aivc_do_you_consider_yourself_to_be,
FIRST_VALUE(aivc_in_the_past_3_months_whom_have_you_had_sex_with)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_in_the_past_3_months_whom_have_you_had_sex_with IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)
      AS  aivc_in_the_past_3_months_whom_have_you_had_sex_with,
FIRST_VALUE(aivc_which_gender_do_you_feel_attracted_to)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_which_gender_do_you_feel_attracted_to IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)
      AS  aivc_which_gender_do_you_feel_attracted_to,
FIRST_VALUE(aivc_during_the_sexual_act_which_one_of_these_do_you_practi)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_during_the_sexual_act_which_one_of_these_do_you_practi IS NULL THEN 0 ELSE 1 END DESC,
      art2.encounter_id DESC) AS  aivc_during_the_sexual_act_which_one_of_these_do_you_practi,
FIRST_VALUE(aivc_do_you_ever_ingage_in_transactional_sex)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_ever_ingage_in_transactional_sex IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)
      AS  aivc_do_you_ever_ingage_in_transactional_sex,
FIRST_VALUE(aivc_are_you_or_have_you_ever_been_a_smoker)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_are_you_or_have_you_ever_been_a_smoker IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)
      AS  aivc_are_you_or_have_you_ever_been_a_smoker,
FIRST_VALUE(aivc_do_you_drink_alcoholic_beverages)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_drink_alcoholic_beverages IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)
      AS  aivc_do_you_drink_alcoholic_beverages,
FIRST_VALUE(aivc_do_you_use_illicit_drugs)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_do_you_use_illicit_drugs IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)
      AS  aivc_do_you_use_illicit_drugs,
FIRST_VALUE(aivc_what_types_of_illicit_drugs_do_you_use_and_how_often)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_what_types_of_illicit_drugs_do_you_use_and_how_often IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)
      AS  aivc_what_types_of_illicit_drugs_do_you_use_and_how_often,
FIRST_VALUE(aivc_availability)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_availability IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC) AS  aivc_availability,
FIRST_VALUE(aivc_assessment)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_assessment IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)  AS  aivc_assessment,
FIRST_VALUE(aivc_plan)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_plan IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)  AS  aivc_plan,
FIRST_VALUE(aivc_client_initiated_on_art)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_client_initiated_on_art IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)  AS  aivc_client_initiated_on_art,
FIRST_VALUE(aivc_date_client_initiated_on_art)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_date_client_initiated_on_art IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)  AS  aivc_date_client_initiated_on_art,
FIRST_VALUE(aivc_next_review_date)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_next_review_date IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)  AS  aivc_next_review_date,
FIRST_VALUE(aivc_next_date_of_medication_resupply)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_next_date_of_medication_resupply IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)  AS  aivc_next_date_of_medication_resupply,
FIRST_VALUE(aivc_duration_of_medication)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN aivc_duration_of_medication IS NULL THEN 0 ELSE 1 END DESC,art2.encounter_id DESC)  AS  aivc_duration_of_medication

FROM
(SELECT max(id_art_initial_visit_compulsory_question_2_of_2) AS id_art_initial_visit_compulsory_question_2_of_2,
max(patient_id) AS patient_id,
encounter_id,
max(obs_datetime) AS obs_datetime,
max(date_created) AS date_created,
max(date_modified) AS date_modified,
max(location_id) AS location_id,
max(location_name) AS location_name,
max(program_id) AS program_id,
max(program_name) AS program_name,
max(aivc_are_you_sexually_active) AS aivc_are_you_sexually_active,
max(aivc_female_have_you_observed_a_vaginal_discharge) AS aivc_female_have_you_observed_a_vaginal_discharge,
string_agg(aivc_female_if_yes_on_vaginal_discharge_specify_type,',') AS aivc_female_if_yes_on_vaginal_discharge_specify_type,
max(aivc_female_have_you_noticed_non_painful_of_painful_ulcers_) AS aivc_female_have_you_noticed_non_painful_of_painful_ulcers_,
max(aivc_female_have_you_noticed_warts_on_the_genital_area) AS aivc_female_have_you_noticed_warts_on_the_genital_area,
max(aivc_female_have_you_noticed_ulcers_on_or_around_the_anal_a) AS aivc_female_have_you_noticed_ulcers_on_or_around_the_anal_a,
max(aivc_female_have_you_noticed_warts_on_or_around_the_anal_ar) AS aivc_female_have_you_noticed_warts_on_or_around_the_anal_ar,
max(aivc_male_have_you_observed_a_discharge_from_the_penis) AS aivc_male_have_you_observed_a_discharge_from_the_penis ,
string_agg(aivc_male_if_yes_on_penis_discharge_specify_type,',') AS aivc_male_if_yes_on_penis_discharge_specify_type,
max(aivc_male_have_you_noticed_ulcers_on_the_penis) AS aivc_male_have_you_noticed_ulcers_on_the_penis,
max(aivc_male_have_you_noticed_warts_around_the_genital_area)  AS aivc_male_have_you_noticed_warts_around_the_genital_area,
max(aivc_male_have_you_noticed_ulcers_on_or_around_the_anal_are)  AS aivc_male_have_you_noticed_ulcers_on_or_around_the_anal_are,
max(aivc_male_have_you_noticed_warts_on_or_around_the_anal_area)  AS aivc_male_have_you_noticed_warts_on_or_around_the_anal_area,
max(aivc_are_you_currently_pregnant) AS aivc_are_you_currently_pregnant,
max(aivc_are_you_booked_for_antenatal_care) AS aivc_are_you_booked_for_antenatal_care,
max(aivc_do_you_know_the_edd) AS aivc_do_you_know_the_edd,
max(aivc_date) AS aivc_date,
max(aivc_is_the_client_on_triple_therapy) AS aivc_is_the_client_on_triple_therapy,
max(aivc_have_you_experienced_intermenstrual_bleeding) AS aivc_have_you_experienced_intermenstrual_bleeding,
max(aivc_duration_of_intermenstrual_bleeding) AS aivc_duration_of_intermenstrual_bleeding,
max(aivc_have_you_experienced_post_coital_bleeding) AS aivc_have_you_experienced_post_coital_bleeding,
max(aivc_have_you_had_several_episodes_of_vaginal_thrush) AS aivc_have_you_had_several_episodes_of_vaginal_thrush,
max(aivc_do_you_use_contraceptives) AS aivc_do_you_use_contraceptives,
max(what_types_of_contraceptives_do_you_use) AS what_types_of_contraceptives_do_you_use,
max(aivc_other_contraceptives) AS aivc_other_contraceptives,
max(aivc_have_you_been_screened_for_cervical_cancer) AS aivc_have_you_been_screened_for_cervical_cancer,
max(aivc_date_of_screening) AS aivc_date_of_screening,
max(screening_result) AS screening_result,
max(aivc_have_you_observed_a_breast_lump_s) AS aivc_have_you_observed_a_breast_lump_s,
max(aivc_duration_of_breast_lump) AS aivc_duration_of_breast_lump,
max(aivc_location_of_breast_lump) AS aivc_location_of_breast_lump,
max(aivc_do_you_have_a_discharge_from_the_nipple_s) AS aivc_do_you_have_a_discharge_from_the_nipple_s,
max(aivc_have_you_been_taking_other_medications_or_muti_herbs_w) AS aivc_have_you_been_taking_other_medications_or_muti_herbs_w,
max(aivc_medication_notes) AS aivc_medication_notes,
max(aivc_are_you_taking_tb_medicines) AS aivc_are_you_taking_tb_medicines,
max(aivc_have_you_ever_experienced_a_drug_allergy) AS aivc_have_you_ever_experienced_a_drug_allergy ,
max(aivc_if_yes_specify_drug_allergy_details) AS aivc_if_yes_specify_drug_allergy_details,
max(aivc_have_been_treated_for_any_of_the_following_conditions) AS aivc_have_been_treated_for_any_of_the_following_conditions,
string_agg(CASE WHEN aivc_if_yes_specify_details = 'Cryptococcal Meningitis code' THEN 'Cryptococcal Meningitis'
                WHEN aivc_if_yes_specify_details = 'PCP' THEN 'PCP'
                WHEN aivc_if_yes_specify_details = 'Non Hodgkins Lymphoma (Ca of the lymph nodes)' THEN 'Non Hodgkins Lymphoma (Ca of the lymph nodes)'
                WHEN aivc_if_yes_specify_details = 'Respiratory disease' THEN 'Respiratory disease'
                WHEN aivc_if_yes_specify_details = 'Cardiac Disease' THEN 'Cardiac Disease'
                WHEN aivc_if_yes_specify_details = 'Skin disease' THEN 'Skin disease'
                END ,',') AS aivc_if_yes_specify_details,
max(aivc_medical_and_surigcal_history_notes) AS aivc_medical_and_surigcal_history_notes ,
max(aivc_have_you_been_sexually_abused) AS aivc_have_you_been_sexually_abused,
max(aivc_has_a_police_report_been_filed) AS aivc_has_a_police_report_been_filed,
max(aivc_did_you_receive_any_medical_treatment_afterwards) AS aivc_did_you_receive_any_medical_treatment_afterwards,
max(aivc_did_you_receive_counseling) AS aivc_did_you_receive_counseling,
max(aivc_do_you_consider_yourself_to_be) AS aivc_do_you_consider_yourself_to_be,
max(aivc_in_the_past_3_months_whom_have_you_had_sex_with) AS aivc_in_the_past_3_months_whom_have_you_had_sex_with,
max(aivc_which_gender_do_you_feel_attracted_to) AS aivc_which_gender_do_you_feel_attracted_to,
max(aivc_during_the_sexual_act_which_one_of_these_do_you_practi) AS aivc_during_the_sexual_act_which_one_of_these_do_you_practi,
max(aivc_do_you_ever_ingage_in_transactional_sex) AS aivc_do_you_ever_ingage_in_transactional_sex,
max(aivc_are_you_or_have_you_ever_been_a_smoker) AS aivc_are_you_or_have_you_ever_been_a_smoker,
max(aivc_do_you_drink_alcoholic_beverages) AS aivc_do_you_drink_alcoholic_beverages,
max(aivc_do_you_use_illicit_drugs) AS aivc_do_you_use_illicit_drugs,
max(aivc_what_types_of_illicit_drugs_do_you_use_and_how_often) AS aivc_what_types_of_illicit_drugs_do_you_use_and_how_often,
max(aivc_availability) AS aivc_availability,
max(aivc_assessment) AS aivc_assessment,
max(aivc_plan) AS aivc_plan,
max(aivc_client_initiated_on_art) AS aivc_client_initiated_on_art,
max(aivc_date_client_initiated_on_art) AS aivc_date_client_initiated_on_art,
max(aivc_next_review_date) AS aivc_next_review_date,
max(aivc_next_date_of_medication_resupply) AS aivc_next_date_of_medication_resupply,
max(aivc_duration_of_medication) AS aivc_duration_of_medication
FROM art_initial_visit_compulsory_question_2_of_2 GROUP BY encounter_id) art2
INNER JOIN patient_encounter_table pedd ON pedd.encounter_id = art2.encounter_id) art2_2
ON art1_1.visit_id = art2_2.visit_id

FULL OUTER JOIN
(
SELECT DISTINCT visit_id ,
FIRST_VALUE(assesment.obs_datetime)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN assesment.obs_datetime IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC) AS obs_datetime,
FIRST_VALUE(assesment.date_created)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN assesment.date_created IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)AS date_created,
FIRST_VALUE(assesment.patient_id)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN assesment.patient_id IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)AS patient_id,
FIRST_VALUE(ap_activity_status)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_activity_status IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_activity_status,
FIRST_VALUE(ap_type_of_transfer_out)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_type_of_transfer_out IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_type_of_transfer_out,
FIRST_VALUE(ap_transfer_out_date)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_transfer_out_date IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_transfer_out_date,
FIRST_VALUE(ap_date_of_death)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_date_of_death IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_date_of_death,
FIRST_VALUE(ap_cause_of_death)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_cause_of_death IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_cause_of_death,
FIRST_VALUE(ap_specify_other_infections_and_parasitic_disease)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_specify_other_infections_and_parasitic_disease IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_specify_other_infections_and_parasitic_disease,
FIRST_VALUE(ap_specify_other_natural_causes)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_specify_other_natural_causes IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_specify_other_natural_causes,
FIRST_VALUE(ap_specify_other_disease_or_conditions_leading_to_death)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_specify_other_disease_or_conditions_leading_to_death IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_specify_other_disease_or_conditions_leading_to_death,
FIRST_VALUE(ap_date_client_reported_as_ltfu)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_date_client_reported_as_ltfu IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_date_client_reported_as_ltfu,
FIRST_VALUE(ap_period_initiated_on_art_before_ltfu)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_period_initiated_on_art_before_ltfu IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_period_initiated_on_art_before_ltfu,
FIRST_VALUE(ap_date_client_opted_out)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_date_client_opted_out IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_date_client_opted_out,
FIRST_VALUE(ap_transfer_in_date)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_transfer_in_date IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_transfer_in_date,
FIRST_VALUE(ap_program_stop_date)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_program_stop_date IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_program_stop_date,
FIRST_VALUE(ap_type_of_follow_up)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_type_of_follow_up IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_type_of_follow_up,
FIRST_VALUE(ap_are_you_currently_breastfeeding)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_are_you_currently_breastfeeding IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_are_you_currently_breastfeeding,
FIRST_VALUE(ap_duration_of_medication)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_duration_of_medication IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_duration_of_medication,
FIRST_VALUE(ap_next_date_of_medication_resupply)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_next_date_of_medication_resupply IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_next_date_of_medication_resupply,
FIRST_VALUE(ap_next_review_date)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_next_review_date IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_next_review_date,
FIRST_VALUE(ap_is_the_client_eligible_for_viral_load)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_is_the_client_eligible_for_viral_load IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_is_the_client_eligible_for_viral_load,
FIRST_VALUE(ap_was_the_sample_sent_to_the_lab)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_was_the_sample_sent_to_the_lab IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_was_the_sample_sent_to_the_lab,
FIRST_VALUE(ap_reason_sample_not_sent_to_the_lab)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_reason_sample_not_sent_to_the_lab IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_reason_sample_not_sent_to_the_lab,
FIRST_VALUE(ap_type_of_request)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_type_of_request IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_type_of_request,
FIRST_VALUE(ap_routine_type)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_routine_type IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_routine_type,
FIRST_VALUE(ap_targeted_type)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_targeted_type IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_targeted_type,
FIRST_VALUE(ap_why_is_the_client_not_eligible_for_v_l)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_why_is_the_client_not_eligible_for_v_l IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_why_is_the_client_not_eligible_for_v_l,
FIRST_VALUE(ap_date_of_last_v_l)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_date_of_last_v_l IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_date_of_last_v_l,
FIRST_VALUE(ap_what_is_the_value_of_the_v_l)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_what_is_the_value_of_the_v_l IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_what_is_the_value_of_the_v_l,
FIRST_VALUE(ap_date_viral_load_results_received)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_date_viral_load_results_received IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_date_viral_load_results_received,
FIRST_VALUE(ap_viral_load_result)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_viral_load_result IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_viral_load_result,
FIRST_VALUE(ap_viral_load_status)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_viral_load_status IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_viral_load_status,
FIRST_VALUE(ap_client_referred_for_eac)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_client_referred_for_eac IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_client_referred_for_eac,
FIRST_VALUE(ap_next_viral_load_date)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN ap_next_viral_load_date IS NULL THEN 0 ELSE 1 END DESC, assesment.encounter_id DESC)
      AS ap_next_viral_load_date

FROM
(SELECT max(id_assessment_and_plan_form_template) AS id_assessment_and_plan_form_template,
max(patient_id) AS patient_id,
encounter_id,
max(obs_datetime) AS obs_datetime,
max(date_created) AS date_created,
max(date_modified) AS date_modified,
max(location_id) AS location_id,
max(location_name) AS location_name,
max(program_id) AS program_id,
max(program_name) AS program_name,
max(ap_activity_status) AS ap_activity_status,
max(ap_type_of_transfer_out) AS ap_type_of_transfer_out,
max(ap_transfer_out_date) AS ap_transfer_out_date,
max(ap_date_of_death) AS ap_date_of_death,
max(ap_cause_of_death) AS ap_cause_of_death,
max(ap_specify_other_infections_and_parasitic_disease) AS ap_specify_other_infections_and_parasitic_disease,
max(ap_specify_other_natural_causes) AS ap_specify_other_natural_causes ,
max(ap_specify_other_disease_or_conditions_leading_to_death) AS ap_specify_other_disease_or_conditions_leading_to_death,
max(ap_date_client_reported_as_ltfu)  AS ap_date_client_reported_as_ltfu,
max(ap_period_initiated_on_art_before_ltfu)  AS ap_period_initiated_on_art_before_ltfu,
max(ap_date_client_opted_out)  AS ap_date_client_opted_out,
max(ap_transfer_in_date) AS ap_transfer_in_date,
max(ap_program_stop_date) AS ap_program_stop_date,
max(ap_type_of_follow_up) AS ap_type_of_follow_up,
max(ap_are_you_currently_breastfeeding) AS ap_are_you_currently_breastfeeding,
max(ap_duration_of_medication) AS ap_duration_of_medication,
max(ap_next_date_of_medication_resupply) AS ap_next_date_of_medication_resupply,
max(ap_next_review_date) AS ap_next_review_date,
max(ap_is_the_client_eligible_for_viral_load) AS ap_is_the_client_eligible_for_viral_load,
max(ap_was_the_sample_sent_to_the_lab) AS ap_was_the_sample_sent_to_the_lab,
max(ap_reason_sample_not_sent_to_the_lab) AS ap_reason_sample_not_sent_to_the_lab,
max(ap_type_of_request) AS ap_type_of_request,
max(ap_routine_type) AS ap_routine_type,
max(ap_targeted_type) AS ap_targeted_type,
max(ap_why_is_the_client_not_eligible_for_v_l) AS ap_why_is_the_client_not_eligible_for_v_l,
max(ap_date_of_last_v_l) AS ap_date_of_last_v_l,
max(ap_what_is_the_value_of_the_v_l) AS ap_what_is_the_value_of_the_v_l,
max(ap_date_viral_load_results_received) AS ap_date_viral_load_results_received,
max(ap_viral_load_result) AS ap_viral_load_result,
max(ap_viral_load_status) AS ap_viral_load_status,
max(ap_client_referred_for_eac) AS ap_client_referred_for_eac,
max(ap_next_viral_load_date) AS ap_next_viral_load_date
FROM assessment_and_plan_form_template GROUP BY encounter_id) assesment
INNER JOIN patient_encounter_table pedd ON pedd.encounter_id = assesment.encounter_id) assesment_1

ON art1_1.visit_id = assesment_1.visit_id

INNER JOIN psi_patient_program_data ppv on (ppv.patient_id = art1_1.patient_id or ppv.patient_id = art2_2.patient_id or ppv.patient_id = assesment_1.patient_id) and (ppv.program_id = (SELECT program_id FROM programs_default WHERE program_name= 'ART Program'))
INNER JOIN patient_identifier pi ON (art1_1.patient_id = pi.patient_id or art2_2.patient_id = pi.patient_id or assesment_1.patient_id = pi.patient_id)
ORDER BY date_created DESC;"
},
{
  "name": "prep_program_events_table",
 "sql": "select
     'vatFxlZR2lj':: TEXT AS program,
     'kv6FYqNxzOd':: TEXT AS program_stage,
  CASE WHEN prep_init_form_site_type = 'Outreach'  THEN
       concat('ZWNSC-OU-',upper(COALESCE(prep_init_form_facility,(SELECT prep_init_form_facility
       FROM prep_init_form_template
       WHERE prep_init_form_facility IS NOT NULL
       AND patient_id = prep1_1.patient_id
       ORDER BY encounter_id DESC
       LIMIT 1))),'-',upper(prep_init_form_district))
    WHEN prep_init_form_site_type = 'Static'   THEN
       concat('ZWNSC-',upper(COALESCE(prep_init_form_facility,(SELECT prep_init_form_facility
       FROM prep_init_form_template
       WHERE prep_init_form_facility IS NOT NULL
       AND patient_id = prep1_1.patient_id
       ORDER BY encounter_id DESC
       LIMIT 1))))
    WHEN prep_init_form_site_type IS NULL AND prep_cont_form_site_type = 'Outreach' THEN
       concat('ZWNSC-OU-',upper(COALESCE(prep_cont_form_facility,(SELECT prep_cont_form_facility
       FROM prep_cont_form_template
       WHERE prep_cont_form_facility IS NOT NULL
       AND patient_id = prep2_2.patient_id
       ORDER BY encounter_id DESC
       LIMIT 1))),'-',upper(prep_cont_form_district))
    ELSE
       concat('ZWNSC-',upper(COALESCE(prep_cont_form_facility,(SELECT prep_cont_form_facility
       FROM prep_cont_form_template
       WHERE prep_cont_form_facility IS NOT NULL
       AND patient_id = prep2_2.patient_id
       ORDER BY encounter_id DESC
       LIMIT 1))))
    END AS \"OrgUnit\",
     CASE WHEN COALESCE(prep1_1.obs_datetime, '01-01-0001' ) >= COALESCE(prep2_2.obs_datetime, '01-01-0001' )
         THEN date(prep1_1.obs_datetime)
         WHEN ( COALESCE(prep2_2.obs_datetime, '01-01-0001' ) >= COALESCE(prep1_1.obs_datetime, '01-01-0001' ) )
         THEN date(prep2_2.obs_datetime)
         END AS \"event_date\",
     'COMPLETED' :: TEXT AS status,
     COALESCE (prep1_1.visit_id,prep2_2.visit_id) AS \"event_unique_id\",
     ppv.patient_program_id AS \"patient_program_id\",
     DATE(ppv.\"date_enrolled\") AS \"enrollment_date\",
     CASE WHEN   COALESCE(prep1_1.date_created, '01-01-0001 00:00:00' ) >= COALESCE(prep2_2.date_created, '01-01-0001  00:00:00' )
          THEN prep1_1.date_created
          WHEN ( COALESCE(prep2_2.date_created, '01-01-0001 00:00:00' ) >= COALESCE(prep1_1.date_created, '01-01-0001  00:00:00' ) )
          THEN prep2_2.date_created
          END AS \"date_created\",
     pi.\"Patient_Identifier\" AS \"Patient_Identifier\",

     case when prep_init_form_have_you_had_an_hiv_test_in_the_past_1_week = 'Yes' then 1
          when prep_init_form_have_you_had_an_hiv_test_in_the_past_1_week = 'No' then 0
          else null end :: boolean AS \"[Initial] Had you had HIV test in the past 1 week\",

     prep_init_form_when_was_the_test_done AS \"[Initial] When was the test done\",
     prep_init_form_what_was_the_result AS \"[Initial] What was the result HIV\",

     case when prep_init_form_do_you_have_any_heath_related_problems_today = 'Yes' then 1
            when prep_init_form_do_you_have_any_heath_related_problems_today = 'No' then 0
            else null end :: boolean AS \"[Initial] Any heath related problems today\",

     prep_init_form_if_yes_for_health_related_problems_today AS \"[Initial] If Yes Indicate the problem\",
     prep_init_form_have_you_been_diagnosed_of_any_chronic_illne AS \"[Initial] Ever been diagnosed of a chronic illness\",
     prep_init_form_are_you_or_your_partner_currently_pregnant AS \"[Initial] Are you/partner currently pregnant\",
     prep_init_form_when_was_you_last_normal_menstrual_period as \"[Initial] Last Menstrual Period Prep Initial\",

     case when prep_init_form_pregnacy_test_done = 'Yes' then 1
          when prep_init_form_pregnacy_test_done = 'No' then 0
          else null end :: boolean AS \"[Initial] Pregnacy test done\",

     prep_init_form_pregnancy_test_what_was_the_result AS \"[Initial] What was the result Pregnacy\",

     case when prep_init_form_are_you_or_partner_currently_breast_feeding = 'Yes' then 1
          when prep_init_form_are_you_or_partner_currently_breast_feeding = 'No' then 0
          else null end :: boolean AS \"[Initial] Are you/partner currently breast feeding\",


     prep_init_form_are_you_or_your_partner_using_any_contracept AS \"[Initial] Are you/partner using any contraception\",
     prep_init_form_are_you_taking_any_drugs_or_medications AS \"[Initial] Are you taking any drugs or medications\",

     case when prep_init_form_are_you_on_arvs = 'Yes' then 1
          when prep_init_form_are_you_on_arvs = 'No' then 0
          else null end :: boolean AS \"[Initial] Are you on ARVs\",

     case when prep_init_form_are_you_sexually_active = 'Yes' then 1
          when prep_init_form_are_you_sexually_active = 'No' then 0
          else null end :: boolean AS \"[Initial] Are you sexually active\",

     case when prep_init_form_are_you_married_or_in_a_stable_relationship_ = 'Yes' then 1
          when prep_init_form_are_you_married_or_in_a_stable_relationship_ = 'No' then 0
          else null end :: boolean AS \"[Initial] Married/stable relation past 6month/more\",

     CASE WHEN prep_cont_form_do_you_know_your_partner_s_hiv_status is not null then
          prep_cont_form_do_you_know_your_partner_s_hiv_status
          when prep_cont_form_do_you_know_your_partner_s_hiv_status is null then
          prep_init_form_do_you_know_your_partner_s_hiv_status
     end  AS \"[Continuation] What is your partners HIV status\",

     CASE WHEN prep_cont_form_is_your_partner_on_art is not null then
          case when prep_cont_form_is_your_partner_on_art = 'Yes' then 1
               when prep_cont_form_is_your_partner_on_art = 'No'  then 0
               else null end
          when prep_cont_form_is_your_partner_on_art is null then
          case when prep_init_form_is_your_partner_on_art = 'Yes' then 1
               when prep_init_form_is_your_partner_on_art = 'No'  then 0
               else null end
     end :: boolean AS \"[Continuation / Initial] Is your partner on ART\",

     case when prep_init_form_do_you_know_your_partner_s_adherence_to_art = 'Yes' then 1
          when prep_init_form_do_you_know_your_partner_s_adherence_to_art = 'No' then 0
          else null end :: boolean AS \"[Initial] What is your partners adherence to ART\",

     prep_init_form_has_your_partner_had_a_viral_load_test_done_ AS \"[Initial] Partner viral load tested last 12 months\",
     prep_init_form_if_yes_for_partner_had_a_viral_load_test_don AS \"[Initial] Specifiy Results\",

     CASE WHEN prep_cont_form_are_you_using_condoms_every_time_you_are_hav is not null then
          case when prep_cont_form_are_you_using_condoms_every_time_you_are_hav = 'Yes' then 1
               when prep_cont_form_are_you_using_condoms_every_time_you_are_hav = 'No'  then 0
               else null end
          when prep_cont_form_are_you_using_condoms_every_time_you_are_hav is null then
          case when prep_init_form_do_you_use_condoms_every_time_you_have_sex_w = 'Yes' then 1
               when prep_init_form_do_you_use_condoms_every_time_you_have_sex_w = 'No'  then 0
               else null end
     end :: boolean AS \"[Continuation / Initial] Use condoms for sex with partner\",

     case when prep_init_form_have_you_had_any_other_sexual_partners_in_th = 'Yes' then 1
            when prep_init_form_have_you_had_any_other_sexual_partners_in_th = 'No' then 0
            else null end :: boolean AS \"[Initial] Had other sexual partners last 6 months\",

     prep_init_form_if_yes_for_had_any_other_sexual_partners_in_ AS \"[Initial] How many\",

     case when prep_init_form_do_you_have_more_than_1_sexual_partner = 'Yes' then 1
            when prep_init_form_do_you_have_more_than_1_sexual_partner = 'No' then 0
            else null end :: boolean AS \"[Initial] Do you have more than 1 sexual partner\",

     case when prep_init_form_do_you_know_your_non_regular_partner_s_hiv_s = 'Yes' then 1
            when prep_init_form_do_you_know_your_non_regular_partner_s_hiv_s = 'No' then 0
            else null end :: boolean AS \"[Initial] Whats is non-regular partners HIV status\",

     prep_init_form_specify_hiv_status_of_partner AS \"[Initial] Specify HIV status of partner\",

     case when prep_init_form_do_you_use_condoms_every_time_you_have_sex_w_1 = 'Yes' then 1
            when prep_init_form_do_you_use_condoms_every_time_you_have_sex_w_1 = 'No' then 0
            else null end :: boolean AS \"[Initial] Use condom alwys with nonregular partner\",

     case when prep_init_form_have_you_been_treated_for_an_sti_in_the_last = 'Yes' then 1
          when prep_init_form_have_you_been_treated_for_an_sti_in_the_last = 'No' then 0
          else null end :: boolean AS \"[Initial] Treated for an STI in the last 3 months\",

     CASE WHEN prep_cont_form_have_you_exchanged_sex_for_money_goods_or_se is not null then
          case when prep_cont_form_have_you_exchanged_sex_for_money_goods_or_se = 'Yes' then 1
               when prep_cont_form_have_you_exchanged_sex_for_money_goods_or_se = 'No'  then 0
               else null end
          when prep_cont_form_have_you_exchanged_sex_for_money_goods_or_se is null then
          case when prep_init_form_have_you_exchanged_sex_for_money_goods_or_se = 'Yes' then 1
               when prep_init_form_have_you_exchanged_sex_for_money_goods_or_se = 'No'  then 0
               else null end
     end :: boolean  AS \"[Continuation / Initial] Exchanged sex for money/goods/services\",

     case when prep_init_form_do_you_have_a_history_of_sexual_abuse_gender = 'Yes' then 1
            when prep_init_form_do_you_have_a_history_of_sexual_abuse_gender = 'No' then 0
            else null end :: boolean AS \"[Initial] History of sexual abuse/gbv\",

     case when prep_init_form_have_you_used_emergency_contraception_in_the  = 'Yes' then 1
            when prep_init_form_have_you_used_emergency_contraception_in_the  = 'No' then 0
            else null end :: boolean AS \"[Initial] Used ec contraception in last 6 months\",

    case when prep_init_form_have_you_used_pep_in_the_last_6_months  = 'Yes' then 1
            when prep_init_form_have_you_used_pep_in_the_last_6_months  = 'No' then 0
            else null end :: boolean AS \"[Initial] Have you used PEP in the last 6 months more than one partner\",

     prep_init_form_what_was_the_reason_for_taking_pep AS \"[Initial] What was the reason for taking PEP?\",

     case when prep_init_form_are_you_single_or_not_in_a_stable_relationsh  = 'Yes' then 1
          when prep_init_form_are_you_single_or_not_in_a_stable_relationsh = 'No' then 0
          else null end :: boolean AS \"[Initial] You single/not in a stable relationship\",
     case when prep_init_form_have_you_had_sexual_partner_s_in_the_last_6_  = 'Yes' then 1
          when prep_init_form_have_you_had_sexual_partner_s_in_the_last_6_ = 'No' then 0
          else null end :: boolean  AS \"[Initial] Have you had sexual partner(s) in the last 6 months?\",

     prep_init_form_if_yes_how_many AS \"[Initial] How many?\",

     case when prep_init_form_do_you_use_condoms_every_time_you_have_vagin = 'Yes' then 1
          when prep_init_form_do_you_use_condoms_every_time_you_have_vagin = 'No' then 0
          else null end :: boolean AS \"[Initial] Use condoms always for vaginal/anal sex\",

     case when prep_init_form_have_you_had_a_condom_burst_in_the_last_3_mo = 'Yes' then 1
          when prep_init_form_have_you_had_a_condom_burst_in_the_last_3_mo = 'No' then 0
          else null end :: boolean AS \"[Initial] Had a condom burst in the last 3 month\",

     prep_init_form_if_yes_for_condorm_burst_how_many_times AS \"[Initial] How many times condom burst?\",

     case when prep_init_form_in_a_single_relationship_have_you_been_treat = 'Yes' then 1
          when prep_init_form_in_a_single_relationship_have_you_been_treat = 'No' then 0
          else null end :: boolean AS \"[Initial] Treated for an STI in the last 3 months in single Relationship\",

     CASE WHEN prep_cont_form_have_you_had_sex_whilst_indoxicated_with_alc is not null then
          case when prep_cont_form_have_you_had_sex_whilst_indoxicated_with_alc = 'Yes' then 1
               when prep_cont_form_have_you_had_sex_whilst_indoxicated_with_alc = 'No'  then 0
               else null end
          when prep_cont_form_have_you_had_sex_whilst_indoxicated_with_alc is null then
          case when prep_init_form_have_you_had_sex_whilst_indoxicated_with_alc = 'Yes' then 1
               when prep_init_form_have_you_had_sex_whilst_indoxicated_with_alc = 'No'  then 0
               else null end
     end :: boolean  AS \"[Continuation / Initial] Have you had sex whilst indoxicated\",

     case when prep_init_form_have_you_or_your_partner_used_emergency_cont = 'Yes' then 1
          when prep_init_form_have_you_or_your_partner_used_emergency_cont = 'No' then 0
          else null end :: boolean  AS \"[Initial] Couple used ec contraception last 6month\",

     prep_init_form_if_yes_for_emergency_contraception_how_many_ AS \"[Initial] How many times contraception\",
     case when prep_init_form_single_or_stable_relationship_have_you_used_ = 'Yes' then 1
          when prep_init_form_single_or_stable_relationship_have_you_used_ = 'No' then 0
          else null end :: boolean as \"[Initial] Have you used PEP in the last 6 months single and used\",
     prep_init_form_single_or_stable_relationship_what_was_the_r AS \"[Initial] Single or stable relationship\",
     case when prep_init_form_do_you_inject_drugs = 'Yes' then 1
         when prep_init_form_do_you_inject_drugs = 'No' then 0
         else null end :: boolean as \"[Initial] Do you inject drugs?\",

     CASE WHEN prep_cont_form_does_the_client_have_any_sings_of_primary_in is not null then
          case when prep_cont_form_does_the_client_have_any_sings_of_primary_in = 'Yes' then 1
               when prep_cont_form_does_the_client_have_any_sings_of_primary_in = 'No'  then 0
               else null end
          when prep_cont_form_does_the_client_have_any_sings_of_primary_in is null then
          case when prep_init_form_any_signs_of_primary_infection = 'Yes' then 1
               when prep_init_form_any_signs_of_primary_infection = 'No'  then 0
               else null end
     end :: boolean   AS \"[Continuation / Initial] Any signs of primary infection\",

     CASE WHEN prep_cont_form_if_yes_for_client_have_any_sings_of_primary_  is not null then
               prep_cont_form_if_yes_for_client_have_any_sings_of_primary_
          when prep_cont_form_if_yes_for_client_have_any_sings_of_primary_  is null then
               prep_init_form_if_yes_for_any_signs_of_primary_infection
     end  AS \"[Continuation] Specify details\",

     CASE WHEN prep_cont_form_what_is_the_client_s_hiv_status_today  is not null then
          prep_cont_form_what_is_the_client_s_hiv_status_today
          when prep_cont_form_what_is_the_client_s_hiv_status_today  is null then
          prep_init_form_what_is_the_client_s_hiv_status_today
          end   AS \"[Continuation / Initial] What is the clients HIV status today\",

    CASE WHEN prep_cont_form_type_of_follow_up  is not null then
          prep_cont_form_type_of_follow_up
          when prep_cont_form_type_of_follow_up  is null then
          prep_cont_form_type_of_follow_up
          end   AS \"[Continuation] Type of follow up\",

    CASE WHEN prep_cont_form_duration_of_medication  is not null then
          prep_cont_form_duration_of_medication
          when prep_cont_form_duration_of_medication  is null then
          prep_cont_form_duration_of_medication
          end   AS \"[Continuation] Duration of medication\",

     prep_cont_form_next_date_of_medication_resupply as \"[Continuation] Next date of medication resupply\",
     prep_cont_form_prep_end_date as \"[Continuation] PrEP end date\",

     case when prep_init_form_are_you_ready_to_start_prep = 'Yes' then 1
          when prep_init_form_are_you_ready_to_start_prep = 'No' then 0
          else null end :: boolean AS \"[Initial] Are you ready to start Prep\",

     CASE WHEN prep_cont_form_if_no_for_are_you_ready_to_continue_prep is not null then
           prep_cont_form_if_no_for_are_you_ready_to_continue_prep
          when prep_cont_form_if_no_for_are_you_ready_to_continue_prep is null then
           prep_init_form_if_yes_for_ready_to_start_prep_specify_reaso
     end  AS \"[Continuation / Initial] Specify Reason\",

     case when prep_init_form_is_the_client_eligible_to_take_prep = 'Yes' then 1
          when prep_init_form_is_the_client_eligible_to_take_prep = 'No' then 0
          else null end :: boolean  AS \"[Initial] Is the client Eligible to take PrEP\",

     case when prep_init_form_was_client_initiated_on_prep = 'Yes' then 1
          when prep_init_form_was_client_initiated_on_prep = 'No' then 0
          else null end :: boolean  AS \"[Initial] Was client initiated on PrEP?\",

    prep_init_form_date_client_initiated_on_prep AS \"[Initial] Date client initiated on PrEP\",
    prep_init_form_duration_of_medication AS \"[Initial] Duration of medication\",
    prep_init_form_duration_client_intends_to_take_prep AS \"[Initial] Duration client intends to take PrEP\",

     case when prep_cont_form_do_you_have_any_heath_related_problems_today = 'Yes' then 1
          when prep_cont_form_do_you_have_any_heath_related_problems_today = 'No' then 0
          else null end :: boolean  AS \"[Continuation] Have any heath related problems today\",

     prep_cont_form_if_yes_for_health_related_problems_today AS \"[Continuation] Indicate the problem\",
     case when prep_cont_form_are_you_using_any_family_planning_method = 'Yes' then 1
          when prep_cont_form_are_you_using_any_family_planning_method = 'No' then 0
          else null end :: boolean AS \"[Continuation] Are you using any family planning method\",

     prep_cont_form_if_yes_for_are_you_using_any_family_planning AS \"[Continuation] Specify Method\",
     prep_cont_form_last_normal_menstrual_period as \"[Continuation] Last Normal Menstrual Period Prep Cont\",
     case when prep_cont_form_are_you_breast_feeding = 'Yes' then 1
          when prep_cont_form_are_you_breast_feeding = 'No' then 0
          else null end :: boolean AS \"[Continuation] Are you breast feeding\",

     case when prep_cont_form_are_you_using_any_other_medications = 'Yes' then 1
          when prep_cont_form_are_you_using_any_other_medications = 'No' then 0
          else null end :: boolean AS \"[Continuation] Are you using any other medications\",

     prep_cont_form_if_yes_for_are_you_using_any_other_medicatio AS \"[Continuation] Specify medications\",
     prep_cont_form_how_many_sexual_partners_have_you_had_since_ AS \"[Continuation] How many sex partners since last visit\",
     prep_cont_form_if_yes_for_do_you_know_your_partner_s_hiv_st AS \"[Continuation] If Yes then specify\",

     case when prep_cont_form_do_you_know_your_partner_s_viral_load = 'Yes' then 1
          when prep_cont_form_do_you_know_your_partner_s_viral_load = 'No' then 0
          else null end :: boolean  AS \"[Continuation] Do you know your partners viral load\",

     prep_cont_form_if_yes_for_do_you_know_your_partner_s_viral_ AS \"[Continuation] Indicate value\",

     case when prep_cont_form_have_you_had_a_condom_burst_since_the_last_v = 'Yes' then 1
          when prep_cont_form_have_you_had_a_condom_burst_since_the_last_v = 'No' then 0
          else null end :: boolean AS \"[Continuation] Had a condom burst since the last visit\",
     prep_cont_form_if_yes_for_condom_burst_since_the_last_visit AS \"[Continuation] How many times condom burst since last visit\",
     case when prep_cont_form_have_you_been_treated_for_an_sti_since_the_l = 'Yes' then 1
          when prep_cont_form_have_you_been_treated_for_an_sti_since_the_l = 'No' then 0
          else null end :: boolean AS \"[Continuation] Treated for STI since the last visit\",
     case when prep_cont_form_have_you_been_sexually_abused_or_had_gender_ = 'Yes' then 1
          when prep_cont_form_have_you_been_sexually_abused_or_had_gender_ = 'No' then 0
          else null end :: boolean AS \"[Continuation] Sexually abused/ GBV since last visit\",
     case when prep_cont_form_have_you_used_emergency_contraception_since_ = 'Yes' then 1
          when prep_cont_form_have_you_used_emergency_contraception_since_ = 'No' then 0
          else null end :: boolean AS \"[Continuation] Used ec contraception since last visit\",

     prep_cont_form_if_yes_for_used_emergency_contraception_sinc AS \"[Continuation] How many times contraception since last visit\",
    case when prep_cont_form_are_you_ready_to_continue_prep = 'Yes' then 1
         when prep_cont_form_are_you_ready_to_continue_prep = 'No' then 0
         else null end :: boolean AS \"[Continuation] Are you ready to continue PrEP\",
     case when prep_cont_form_is_the_client_eligible_to_continue_prep = 'Yes' then 1
          when prep_cont_form_is_the_client_eligible_to_continue_prep = 'No' then 0
          else null end :: boolean AS \"[Continuation] Is the client eligible to continue PrEP\",

    case when prep_st_form_is_the_client_hiv_negative = 'Yes' then 1
      when prep_st_form_is_the_client_hiv_negative = 'No' then 0
      else null end :: boolean AS \"[Screening] Is Client Tested HIV Negative?\",

prep_st_form_date_tested AS \"[Screening] Date Tested \",

case when prep_st_form_is_the_client_sexually_active = 'Yes' then 1
      when prep_st_form_is_the_client_sexually_active = 'No' then 0
      else null end :: boolean AS \"[Screening] Is Client Sexually Active?\",

case when prep_st_form_is_the_sexually_active_in_a_high_prevalence_kp = 'Yes' then 1
      when prep_st_form_is_the_sexually_active_in_a_high_prevalence_kp = 'No' then 0
      else null end :: boolean AS \"[Screening] Is Client Sexually Active In A High Prevalence?\",

prep_st_form_if_yes_then_specify1 AS \"[Screening] High Prelavance Details\",

case when prep_st_form_has_the_client_had_vaginal_or_anal_intercourse = 'Yes' then 1
      when prep_st_form_has_the_client_had_vaginal_or_anal_intercourse = 'No' then 0
      else null end :: boolean AS \"[Screening] Has Client had Vaginal/Intercourse ?\",

prep_st_form_how_many_sexual_partners_did_you_have_vaginal_ AS \"[Screening] How Many Sexual Partners Did You Have Vaginal/Anal sex with\",

case when prep_st_form_in_the_past_6_months_did_you_use_condoms_consi = 'Yes' then 1
      when prep_st_form_in_the_past_6_months_did_you_use_condoms_consi = 'No' then 0
      else null end :: boolean AS \"[Screening] Did You Use Condoms Consistently During Sex In Last 6 Months?\",

case when prep_st_form_does_the_client_have_a_sex_partner_with_one_or = 'Yes' then 1
      when prep_st_form_does_the_client_have_a_sex_partner_with_one_or = 'No' then 0
      else null end :: boolean AS \"[Screening] Does The Client Have A Sex Partner With One or More HIV Risk Factors?\",

prep_st_form_if_yes_then_specify2 AS \"[Screening] Sex Partner Details \",

case when prep_st_form_in_the_last_6_months_has_the_client_been_treat = 'Yes' then 1
      when prep_st_form_in_the_last_6_months_has_the_client_been_treat = 'No' then 0
      else null end :: boolean AS \"[Screening] In the last 6 months has the client been treated for an STI by lab testing?\",

 case when prep_st_form_in_the_last_6_months_have_you_taken_post_expos = 'Yes' then 1
      when prep_st_form_in_the_last_6_months_have_you_taken_post_expos = 'No' then 0
      else null end :: boolean AS \"[Screening] In the last 6 months have you taken PEP ?\",

case when prep_st_form_in_the_last_6_months_have_you_used_emergency_c = 'Yes' then 1
      when prep_st_form_in_the_last_6_months_have_you_used_emergency_c = 'No' then 0
      else null end :: boolean AS \"[Screening] In the last 6 months have you used emergency contraception?\",

case when prep_st_form_in_the_last_6_months_have_you_had_sex_while_un = 'Yes' then 1
      when prep_st_form_in_the_last_6_months_have_you_had_sex_while_un = 'No' then 0
      else null end :: boolean AS \"[Screening] In the last 6 months have you had sex while under the influence of alcohol?\",

case when prep_st_form_are_you_in_a_sero_discordant_relationship = 'Yes' then 1
      when prep_st_form_are_you_in_a_sero_discordant_relationship = 'No' then 0
      else null end :: boolean AS \"[Screening] Are you in a Sero-discordant relationship?\",

prep_st_form_if_yes_then_specify3 AS \"[Screening] Sero-discordant Relationship Details ?\",

case when prep_st_form_do_you_have_a_partners_of_unknown_status_who_r = 'Yes' then 1
      when prep_st_form_do_you_have_a_partners_of_unknown_status_who_r = 'No' then 0
      else null end :: boolean AS \"[Screening] Do you have a partners of unknown status who refuse testing?\",

case when prep_st_form_do_you_inject_drugs = 'Yes' then 1
      when prep_st_form_do_you_inject_drugs = 'No' then 0
      else null end :: boolean AS \"[Screening] Prep Screening - Do You Inject Drugs?\",

case when prep_st_form_is_the_client_eligible_for_prep = 'Yes' then 1
      when prep_st_form_is_the_client_eligible_for_prep = 'No' then 0
      else null end :: boolean AS \"[Screening] Is the client eligible for PrEP?\",

prep_st_form_if_yes_then_specify4 AS \"[Screening] Prep Eigibility Details \",

case when prep_st_form_has_the_client_been_referred_for_prep = 'Yes' then 1
      when prep_st_form_has_the_client_been_referred_for_prep = 'No' then 0
      else null end :: boolean AS \"[Screening] Has the client been referred for PrEP?\",

prep_st_form_reason_s_for_not_referring_the_client AS \"[Screening] Reasons For Not Referring The client \",

    case when prep_st_form_client_offered_prep = 'Yes' then 1
      when prep_st_form_client_offered_prep = 'No' then 0
      else null end :: boolean AS \"[Screening] Client offered PrEP?\",

    case when prep_st_form_client_accepted_prep = 'Yes' then 1
      when prep_st_form_client_accepted_prep = 'No' then 0
      else null end :: boolean AS \"[Screening] Client accepted PrEP?\"



FROM
(SELECT
DISTINCT visit_id ,
FIRST_VALUE(prep1.obs_datetime)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep1.obs_datetime IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC) AS obs_datetime,
FIRST_VALUE(prep1.patient_id)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep1.patient_id IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC) AS patient_id,
FIRST_VALUE(prep1.date_created)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep1.date_created IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC) AS date_created,
FIRST_VALUE(prep1.program_id)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep1.program_id IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC) AS program_id,
FIRST_VALUE(prep1.program_name)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep1.program_name IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC) AS program_name,
FIRST_VALUE(prep1.prep_init_form_facility)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep1.prep_init_form_facility IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC) AS prep_init_form_facility,
FIRST_VALUE(prep1.prep_init_form_site_type)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep1.prep_init_form_site_type IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
      AS prep_init_form_site_type,
FIRST_VALUE(prep1.prep_init_form_district)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep1.prep_init_form_district IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC) AS prep_init_form_district,
FIRST_VALUE(prep1.prep_init_form_have_you_had_an_hiv_test_in_the_past_1_week)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_have_you_had_an_hiv_test_in_the_past_1_week IS NULL THEN 0 ELSE 1 END DESC,
      prep1.encounter_id DESC) AS prep_init_form_have_you_had_an_hiv_test_in_the_past_1_week,
FIRST_VALUE(prep1.prep_init_form_when_was_the_test_done)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep1.prep_init_form_when_was_the_test_done IS NULL THEN 0 ELSE 1 END DESC,
      prep1.encounter_id DESC) AS prep_init_form_when_was_the_test_done,
FIRST_VALUE(prep1.prep_init_form_what_was_the_result)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep1.prep_init_form_what_was_the_result IS NULL THEN 0 ELSE 1 END DESC,
      prep1.encounter_id DESC) AS prep_init_form_what_was_the_result,
FIRST_VALUE(prep1.prep_init_form_do_you_have_any_heath_related_problems_today)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep1.prep_init_form_do_you_have_any_heath_related_problems_today IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_do_you_have_any_heath_related_problems_today,
FIRST_VALUE(prep1.prep_init_form_if_yes_for_health_related_problems_today)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_if_yes_for_health_related_problems_today IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_if_yes_for_health_related_problems_today,
FIRST_VALUE(prep1.prep_init_form_have_you_been_diagnosed_of_any_chronic_illne)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_have_you_been_diagnosed_of_any_chronic_illne IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_have_you_been_diagnosed_of_any_chronic_illne,
FIRST_VALUE(prep1.prep_init_form_are_you_or_your_partner_currently_pregnant)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_are_you_or_your_partner_currently_pregnant IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_are_you_or_your_partner_currently_pregnant,
FIRST_VALUE(prep1.prep_init_form_when_was_you_last_normal_menstrual_period)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_when_was_you_last_normal_menstrual_period IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_when_was_you_last_normal_menstrual_period,
FIRST_VALUE(prep1.prep_init_form_pregnacy_test_done)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_pregnacy_test_done IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_pregnacy_test_done,
FIRST_VALUE(prep1.prep_init_form_pregnancy_test_what_was_the_result)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_pregnancy_test_what_was_the_result IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_pregnancy_test_what_was_the_result,
FIRST_VALUE(prep1.prep_init_form_are_you_or_partner_currently_breast_feeding)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_are_you_or_partner_currently_breast_feeding IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_are_you_or_partner_currently_breast_feeding,
FIRST_VALUE(prep1.prep_init_form_are_you_or_your_partner_using_any_contracept)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_are_you_or_your_partner_using_any_contracept IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_are_you_or_your_partner_using_any_contracept,
FIRST_VALUE(prep1.prep_init_form_are_you_taking_any_drugs_or_medications)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_are_you_taking_any_drugs_or_medications IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_are_you_taking_any_drugs_or_medications,
FIRST_VALUE(prep1.prep_init_form_are_you_on_arvs)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_are_you_on_arvs IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
      AS prep_init_form_are_you_on_arvs,
FIRST_VALUE(prep_init_form_are_you_sexually_active)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_are_you_sexually_active IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
       AS prep_init_form_are_you_sexually_active,
FIRST_VALUE(prep_init_form_are_you_married_or_in_a_stable_relationship_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_are_you_married_or_in_a_stable_relationship_ IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_are_you_married_or_in_a_stable_relationship_,
FIRST_VALUE(prep_init_form_do_you_know_your_partner_s_hiv_status)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_do_you_know_your_partner_s_hiv_status IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_do_you_know_your_partner_s_hiv_status,
FIRST_VALUE(prep_init_form_is_your_partner_on_art)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_is_your_partner_on_art IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_is_your_partner_on_art,
FIRST_VALUE(prep_init_form_do_you_know_your_partner_s_adherence_to_art)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_do_you_know_your_partner_s_adherence_to_art IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_do_you_know_your_partner_s_adherence_to_art,
FIRST_VALUE(prep_init_form_has_your_partner_had_a_viral_load_test_done_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_has_your_partner_had_a_viral_load_test_done_ IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_has_your_partner_had_a_viral_load_test_done_,
FIRST_VALUE(prep_init_form_if_yes_for_partner_had_a_viral_load_test_don)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_if_yes_for_partner_had_a_viral_load_test_don IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_if_yes_for_partner_had_a_viral_load_test_don,
FIRST_VALUE(prep_init_form_do_you_use_condoms_every_time_you_have_sex_w)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_do_you_use_condoms_every_time_you_have_sex_w IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_do_you_use_condoms_every_time_you_have_sex_w,
FIRST_VALUE(prep_init_form_have_you_had_any_other_sexual_partners_in_th)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_have_you_had_any_other_sexual_partners_in_th IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_have_you_had_any_other_sexual_partners_in_th,
FIRST_VALUE(prep_init_form_if_yes_for_had_any_other_sexual_partners_in_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_if_yes_for_had_any_other_sexual_partners_in_ IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_if_yes_for_had_any_other_sexual_partners_in_,
FIRST_VALUE(prep_init_form_do_you_have_more_than_1_sexual_partner)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_do_you_have_more_than_1_sexual_partner IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_do_you_have_more_than_1_sexual_partner,
FIRST_VALUE(prep_init_form_do_you_know_your_non_regular_partner_s_hiv_s)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_do_you_know_your_non_regular_partner_s_hiv_s IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_do_you_know_your_non_regular_partner_s_hiv_s,
FIRST_VALUE(prep_init_form_specify_hiv_status_of_partner)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_specify_hiv_status_of_partner IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_specify_hiv_status_of_partner,
FIRST_VALUE(prep_init_form_do_you_use_condoms_every_time_you_have_sex_w_1)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_do_you_use_condoms_every_time_you_have_sex_w_1 IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_do_you_use_condoms_every_time_you_have_sex_w_1,
FIRST_VALUE(prep_init_form_have_you_been_treated_for_an_sti_in_the_last)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_have_you_been_treated_for_an_sti_in_the_last IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_have_you_been_treated_for_an_sti_in_the_last,
FIRST_VALUE(prep_init_form_have_you_exchanged_sex_for_money_goods_or_se)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_have_you_exchanged_sex_for_money_goods_or_se IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_have_you_exchanged_sex_for_money_goods_or_se,
FIRST_VALUE(prep_init_form_do_you_have_a_history_of_sexual_abuse_gender)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_do_you_have_a_history_of_sexual_abuse_gender IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_do_you_have_a_history_of_sexual_abuse_gender,
FIRST_VALUE(prep_init_form_have_you_used_emergency_contraception_in_the)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_have_you_used_emergency_contraception_in_the IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_have_you_used_emergency_contraception_in_the,
FIRST_VALUE(prep_init_form_have_you_used_pep_in_the_last_6_months)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_have_you_used_pep_in_the_last_6_months IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_have_you_used_pep_in_the_last_6_months,
FIRST_VALUE(prep_init_form_what_was_the_reason_for_taking_pep)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_what_was_the_reason_for_taking_pep IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_what_was_the_reason_for_taking_pep,
FIRST_VALUE(prep_init_form_are_you_single_or_not_in_a_stable_relationsh)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_are_you_single_or_not_in_a_stable_relationsh IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_are_you_single_or_not_in_a_stable_relationsh,
 FIRST_VALUE(prep_init_form_have_you_had_sexual_partner_s_in_the_last_6_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_have_you_had_sexual_partner_s_in_the_last_6_ IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_have_you_had_sexual_partner_s_in_the_last_6_,
FIRST_VALUE(prep_init_form_if_yes_how_many)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_if_yes_how_many IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
      AS prep_init_form_if_yes_how_many,
FIRST_VALUE(prep_init_form_do_you_use_condoms_every_time_you_have_vagin)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_do_you_use_condoms_every_time_you_have_vagin IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC)  AS prep_init_form_do_you_use_condoms_every_time_you_have_vagin,
 FIRST_VALUE(prep_init_form_have_you_had_a_condom_burst_in_the_last_3_mo)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_have_you_had_a_condom_burst_in_the_last_3_mo IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_have_you_had_a_condom_burst_in_the_last_3_mo,
FIRST_VALUE(prep_init_form_if_yes_for_condorm_burst_how_many_times)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_if_yes_for_condorm_burst_how_many_times IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
      AS prep_init_form_if_yes_for_condorm_burst_how_many_times,
 FIRST_VALUE(prep_init_form_in_a_single_relationship_have_you_been_treat)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_in_a_single_relationship_have_you_been_treat IS NULL THEN 0 ELSE 1
      END DESC, prep1.encounter_id DESC) AS prep_init_form_in_a_single_relationship_have_you_been_treat,
 FIRST_VALUE(prep_init_form_have_you_had_sex_whilst_indoxicated_with_alc)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_have_you_had_sex_whilst_indoxicated_with_alc IS NULL THEN 0 ELSE 1 END DESC,
      prep1.encounter_id DESC)  AS prep_init_form_have_you_had_sex_whilst_indoxicated_with_alc,
 FIRST_VALUE(prep_init_form_have_you_or_your_partner_used_emergency_cont)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_have_you_or_your_partner_used_emergency_cont IS NULL THEN 0 ELSE 1 END DESC,
       prep1.encounter_id DESC) AS prep_init_form_have_you_or_your_partner_used_emergency_cont,
 FIRST_VALUE(prep_init_form_if_yes_for_emergency_contraception_how_many_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_if_yes_for_emergency_contraception_how_many_ IS NULL THEN 0 ELSE 1 END DESC,
      prep1.encounter_id DESC) AS prep_init_form_if_yes_for_emergency_contraception_how_many_,
 FIRST_VALUE(prep_init_form_single_or_stable_relationship_have_you_used_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_single_or_stable_relationship_have_you_used_ IS NULL THEN 0 ELSE 1 END DESC,
      prep1.encounter_id DESC) AS prep_init_form_single_or_stable_relationship_have_you_used_,
 FIRST_VALUE(prep_init_form_single_or_stable_relationship_what_was_the_r)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_single_or_stable_relationship_what_was_the_r IS NULL THEN 0 ELSE 1 END DESC,
      prep1.encounter_id DESC)  AS prep_init_form_single_or_stable_relationship_what_was_the_r,
 FIRST_VALUE(prep_init_form_do_you_inject_drugs)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_do_you_inject_drugs IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
      AS prep_init_form_do_you_inject_drugs,
FIRST_VALUE(prep_init_form_any_signs_of_primary_infection)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_any_signs_of_primary_infection IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
      AS prep_init_form_any_signs_of_primary_infection,
FIRST_VALUE(prep_init_form_if_yes_for_any_signs_of_primary_infection)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_if_yes_for_any_signs_of_primary_infection IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
      AS prep_init_form_if_yes_for_any_signs_of_primary_infection,
FIRST_VALUE(prep_init_form_what_is_the_client_s_hiv_status_today)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_what_is_the_client_s_hiv_status_today IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
      AS prep_init_form_what_is_the_client_s_hiv_status_today,
FIRST_VALUE(prep_init_form_are_you_ready_to_start_prep)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_are_you_ready_to_start_prep IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
      AS prep_init_form_are_you_ready_to_start_prep,
 FIRST_VALUE(prep_init_form_if_yes_for_ready_to_start_prep_specify_reaso)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_if_yes_for_ready_to_start_prep_specify_reaso IS NULL THEN 0 ELSE 1 END DESC,
       prep1.encounter_id DESC)  AS prep_init_form_if_yes_for_ready_to_start_prep_specify_reaso,
FIRST_VALUE(prep_init_form_is_the_client_eligible_to_take_prep)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_is_the_client_eligible_to_take_prep IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
      AS prep_init_form_is_the_client_eligible_to_take_prep,
FIRST_VALUE(prep_init_form_was_client_initiated_on_prep)
    OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_was_client_initiated_on_prep IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
    AS prep_init_form_was_client_initiated_on_prep,
FIRST_VALUE(prep_init_form_date_client_initiated_on_prep)
    OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_date_client_initiated_on_prep IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
    AS prep_init_form_date_client_initiated_on_prep,
FIRST_VALUE(prep_init_form_duration_of_medication)
    OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_duration_of_medication IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
    AS prep_init_form_duration_of_medication,
FIRST_VALUE(prep_init_form_duration_client_intends_to_take_prep)
    OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_init_form_duration_client_intends_to_take_prep IS NULL THEN 0 ELSE 1 END DESC, prep1.encounter_id DESC)
    AS prep_init_form_duration_client_intends_to_take_prep

FROM
(SELECT
encounter_id,
max(patient_id) AS patient_id ,
max(obs_datetime) AS obs_datetime,
max(date_created) AS date_created,
max(program_id) AS program_id,
max(program_name) AS program_name,
max(prep_init_form_facility) AS prep_init_form_facility,
max(prep_init_form_site_type) AS prep_init_form_site_type,
max(prep_init_form_district) AS prep_init_form_district,
max(prep_init_form_have_you_had_an_hiv_test_in_the_past_1_week) AS prep_init_form_have_you_had_an_hiv_test_in_the_past_1_week,
max(prep_init_form_when_was_the_test_done) AS prep_init_form_when_was_the_test_done,
max(prep_init_form_what_was_the_result) AS prep_init_form_what_was_the_result,
max(prep_init_form_do_you_have_any_heath_related_problems_today) AS prep_init_form_do_you_have_any_heath_related_problems_today,
max(prep_init_form_if_yes_for_health_related_problems_today) AS prep_init_form_if_yes_for_health_related_problems_today,
string_agg(prep_init_form_have_you_been_diagnosed_of_any_chronic_illne,',') AS prep_init_form_have_you_been_diagnosed_of_any_chronic_illne,
max(prep_init_form_are_you_or_your_partner_currently_pregnant) AS prep_init_form_are_you_or_your_partner_currently_pregnant,
max(prep_init_form_when_was_you_last_normal_menstrual_period) AS prep_init_form_when_was_you_last_normal_menstrual_period,
max(prep_init_form_pregnacy_test_done) AS prep_init_form_pregnacy_test_done,
max(prep_init_form_pregnancy_test_what_was_the_result) AS prep_init_form_pregnancy_test_what_was_the_result,
max(prep_init_form_are_you_or_partner_currently_breast_feeding) AS prep_init_form_are_you_or_partner_currently_breast_feeding,
string_agg(prep_init_form_are_you_or_your_partner_using_any_contracept,',') AS prep_init_form_are_you_or_your_partner_using_any_contracept,
string_agg(prep_init_form_are_you_taking_any_drugs_or_medications,',') AS prep_init_form_are_you_taking_any_drugs_or_medications,
max(prep_init_form_are_you_on_arvs) AS prep_init_form_are_you_on_arvs,
max(prep_init_form_are_you_sexually_active) AS prep_init_form_are_you_sexually_active,
max(prep_init_form_are_you_married_or_in_a_stable_relationship_) AS prep_init_form_are_you_married_or_in_a_stable_relationship_,
max(prep_init_form_do_you_know_your_partner_s_hiv_status) AS prep_init_form_do_you_know_your_partner_s_hiv_status,
max(prep_init_form_is_your_partner_on_art) as prep_init_form_is_your_partner_on_art,
max(prep_init_form_do_you_know_your_partner_s_adherence_to_art) AS prep_init_form_do_you_know_your_partner_s_adherence_to_art,
max(prep_init_form_has_your_partner_had_a_viral_load_test_done_) AS prep_init_form_has_your_partner_had_a_viral_load_test_done_,
max(prep_init_form_if_yes_for_partner_had_a_viral_load_test_don) AS prep_init_form_if_yes_for_partner_had_a_viral_load_test_don,
max(prep_init_form_do_you_use_condoms_every_time_you_have_sex_w) AS prep_init_form_do_you_use_condoms_every_time_you_have_sex_w,
max(prep_init_form_have_you_had_any_other_sexual_partners_in_th) AS prep_init_form_have_you_had_any_other_sexual_partners_in_th,
max(prep_init_form_if_yes_for_had_any_other_sexual_partners_in_) AS prep_init_form_if_yes_for_had_any_other_sexual_partners_in_,
max(prep_init_form_do_you_have_more_than_1_sexual_partner) AS prep_init_form_do_you_have_more_than_1_sexual_partner,
max(prep_init_form_do_you_know_your_non_regular_partner_s_hiv_s) AS prep_init_form_do_you_know_your_non_regular_partner_s_hiv_s,
max(prep_init_form_specify_hiv_status_of_partner) AS prep_init_form_specify_hiv_status_of_partner,
max(prep_init_form_do_you_use_condoms_every_time_you_have_sex_w_1) AS prep_init_form_do_you_use_condoms_every_time_you_have_sex_w_1,
max(prep_init_form_have_you_been_treated_for_an_sti_in_the_last) AS prep_init_form_have_you_been_treated_for_an_sti_in_the_last,
max(prep_init_form_have_you_exchanged_sex_for_money_goods_or_se) AS prep_init_form_have_you_exchanged_sex_for_money_goods_or_se,
max(prep_init_form_do_you_have_a_history_of_sexual_abuse_gender) AS prep_init_form_do_you_have_a_history_of_sexual_abuse_gender,
max(prep_init_form_have_you_used_emergency_contraception_in_the) AS prep_init_form_have_you_used_emergency_contraception_in_the,
max(prep_init_form_have_you_used_pep_in_the_last_6_months) AS prep_init_form_have_you_used_pep_in_the_last_6_months,
string_agg(prep_init_form_what_was_the_reason_for_taking_pep,',') AS prep_init_form_what_was_the_reason_for_taking_pep,
max(prep_init_form_are_you_single_or_not_in_a_stable_relationsh) AS prep_init_form_are_you_single_or_not_in_a_stable_relationsh,
max(prep_init_form_have_you_had_sexual_partner_s_in_the_last_6_) AS prep_init_form_have_you_had_sexual_partner_s_in_the_last_6_,
max(prep_init_form_if_yes_how_many) AS prep_init_form_if_yes_how_many,
max(prep_init_form_do_you_use_condoms_every_time_you_have_vagin)  AS prep_init_form_do_you_use_condoms_every_time_you_have_vagin,
max(prep_init_form_have_you_had_a_condom_burst_in_the_last_3_mo) AS prep_init_form_have_you_had_a_condom_burst_in_the_last_3_mo,
max(prep_init_form_if_yes_for_condorm_burst_how_many_times) AS prep_init_form_if_yes_for_condorm_burst_how_many_times,
max(prep_init_form_in_a_single_relationship_have_you_been_treat) AS prep_init_form_in_a_single_relationship_have_you_been_treat,
max(prep_init_form_have_you_had_sex_whilst_indoxicated_with_alc) AS prep_init_form_have_you_had_sex_whilst_indoxicated_with_alc,
max(prep_init_form_have_you_or_your_partner_used_emergency_cont) AS prep_init_form_have_you_or_your_partner_used_emergency_cont,
max(prep_init_form_if_yes_for_emergency_contraception_how_many_) AS prep_init_form_if_yes_for_emergency_contraception_how_many_,
max(prep_init_form_single_or_stable_relationship_have_you_used_) AS prep_init_form_single_or_stable_relationship_have_you_used_,
string_agg(prep_init_form_single_or_stable_relationship_what_was_the_r,',') AS prep_init_form_single_or_stable_relationship_what_was_the_r,
max(prep_init_form_do_you_inject_drugs) AS prep_init_form_do_you_inject_drugs,
max(prep_init_form_any_signs_of_primary_infection) AS prep_init_form_any_signs_of_primary_infection,
string_agg(prep_init_form_if_yes_for_any_signs_of_primary_infection,',') AS prep_init_form_if_yes_for_any_signs_of_primary_infection,
max(prep_init_form_what_is_the_client_s_hiv_status_today) AS prep_init_form_what_is_the_client_s_hiv_status_today,
max(prep_init_form_are_you_ready_to_start_prep) AS prep_init_form_are_you_ready_to_start_prep,
string_agg(prep_init_form_if_yes_for_ready_to_start_prep_specify_reaso,',') AS prep_init_form_if_yes_for_ready_to_start_prep_specify_reaso,
max(prep_init_form_is_the_client_eligible_to_take_prep) AS prep_init_form_is_the_client_eligible_to_take_prep,
max(prep_init_form_was_client_initiated_on_prep) AS prep_init_form_was_client_initiated_on_prep,
max(prep_init_form_date_client_initiated_on_prep) AS prep_init_form_date_client_initiated_on_prep,
max(prep_init_form_duration_of_medication) AS prep_init_form_duration_of_medication,
max(prep_init_form_duration_client_intends_to_take_prep) AS prep_init_form_duration_client_intends_to_take_prep


FROM prep_init_form_template prep_init GROUP BY encounter_id) AS prep1
INNER JOIN patient_encounter_table pedd ON pedd.encounter_id = prep1.encounter_id) prep1_1

FULL OUTER JOIN

(SELECT
DISTINCT visit_id ,
FIRST_VALUE(prep2.obs_datetime)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep2.obs_datetime IS NULL THEN 0 ELSE 1 END DESC, prep2.encounter_id DESC) AS obs_datetime,
FIRST_VALUE(prep2.patient_id)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep2.patient_id IS NULL THEN 0 ELSE 1 END DESC, prep2.encounter_id DESC) AS patient_id,
FIRST_VALUE(prep2.date_created)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep2.date_created IS NULL THEN 0 ELSE 1 END DESC, prep2.encounter_id DESC) AS date_created,
FIRST_VALUE(prep2.program_id)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep2.program_id IS NULL THEN 0 ELSE 1 END DESC, prep2.encounter_id DESC) AS program_id,
FIRST_VALUE(prep2.program_name)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep2.program_name IS NULL THEN 0 ELSE 1 END DESC, prep2.encounter_id DESC) AS program_name,
FIRST_VALUE(prep_cont_form_facility)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_facility IS NULL THEN 0 ELSE 1 END DESC, prep2.encounter_id DESC) AS prep_cont_form_facility,
FIRST_VALUE(prep_cont_form_site_type)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_site_type IS NULL THEN 0 ELSE 1 END DESC, prep2.encounter_id DESC)
      AS prep_cont_form_site_type,
FIRST_VALUE(prep_cont_form_district)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_district IS NULL THEN 0 ELSE 1 END DESC, prep2.encounter_id DESC) AS prep_cont_form_district,
FIRST_VALUE(prep_cont_form_do_you_have_any_heath_related_problems_today)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_do_you_have_any_heath_related_problems_today IS NULL THEN 0 ELSE 1 END DESC,
      prep2.encounter_id DESC) AS prep_cont_form_do_you_have_any_heath_related_problems_today,
FIRST_VALUE(prep_cont_form_if_yes_for_health_related_problems_today)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_if_yes_for_health_related_problems_today IS NULL THEN 0 ELSE 1 END DESC,
      prep2.encounter_id DESC) AS prep_cont_form_if_yes_for_health_related_problems_today,
FIRST_VALUE(prep_cont_form_are_you_using_any_family_planning_method)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_are_you_using_any_family_planning_method IS NULL THEN 0 ELSE 1 END DESC,
      prep2.encounter_id DESC) AS prep_cont_form_are_you_using_any_family_planning_method,
FIRST_VALUE(prep_cont_form_if_yes_for_are_you_using_any_family_planning)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_if_yes_for_are_you_using_any_family_planning IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_if_yes_for_are_you_using_any_family_planning,
FIRST_VALUE(prep_cont_form_last_normal_menstrual_period)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_last_normal_menstrual_period IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_last_normal_menstrual_period,
FIRST_VALUE(prep_cont_form_are_you_breast_feeding)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_are_you_breast_feeding IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_are_you_breast_feeding,
FIRST_VALUE(prep_cont_form_are_you_using_any_other_medications)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_are_you_using_any_other_medications IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_are_you_using_any_other_medications,
FIRST_VALUE(prep_cont_form_if_yes_for_are_you_using_any_other_medicatio)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_if_yes_for_are_you_using_any_other_medicatio IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_if_yes_for_are_you_using_any_other_medicatio,
FIRST_VALUE(prep_cont_form_how_many_sexual_partners_have_you_had_since_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_how_many_sexual_partners_have_you_had_since_ IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_how_many_sexual_partners_have_you_had_since_,
FIRST_VALUE(prep_cont_form_do_you_know_your_partner_s_hiv_status)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_do_you_know_your_partner_s_hiv_status IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_do_you_know_your_partner_s_hiv_status,
FIRST_VALUE(prep_cont_form_if_yes_for_do_you_know_your_partner_s_hiv_st)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_if_yes_for_do_you_know_your_partner_s_hiv_st IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_if_yes_for_do_you_know_your_partner_s_hiv_st,
FIRST_VALUE(prep_cont_form_is_your_partner_on_art)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_is_your_partner_on_art IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_is_your_partner_on_art,
FIRST_VALUE(prep_cont_form_do_you_know_your_partner_s_viral_load)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_do_you_know_your_partner_s_viral_load IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_do_you_know_your_partner_s_viral_load,
FIRST_VALUE(prep_cont_form_if_yes_for_do_you_know_your_partner_s_viral_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_if_yes_for_do_you_know_your_partner_s_viral_ IS NULL THEN 0 ELSE 1 END DESC,
      prep2.encounter_id DESC) AS prep_cont_form_if_yes_for_do_you_know_your_partner_s_viral_,
FIRST_VALUE(prep_cont_form_are_you_using_condoms_every_time_you_are_hav)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_are_you_using_condoms_every_time_you_are_hav IS NULL THEN 0 ELSE 1 END DESC,
      prep2.encounter_id DESC) AS prep_cont_form_are_you_using_condoms_every_time_you_are_hav,
FIRST_VALUE(prep_cont_form_have_you_had_a_condom_burst_since_the_last_v)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_have_you_had_a_condom_burst_since_the_last_v IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_have_you_had_a_condom_burst_since_the_last_v,
FIRST_VALUE(prep_cont_form_if_yes_for_condom_burst_since_the_last_visit)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_if_yes_for_condom_burst_since_the_last_visit IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_if_yes_for_condom_burst_since_the_last_visit,
FIRST_VALUE(prep_cont_form_have_you_been_treated_for_an_sti_since_the_l)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_have_you_been_treated_for_an_sti_since_the_l IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_have_you_been_treated_for_an_sti_since_the_l,
FIRST_VALUE(prep_cont_form_have_you_had_sex_whilst_indoxicated_with_alc)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_have_you_had_sex_whilst_indoxicated_with_alc IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_have_you_had_sex_whilst_indoxicated_with_alc,
FIRST_VALUE(prep_cont_form_have_you_exchanged_sex_for_money_goods_or_se)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_have_you_exchanged_sex_for_money_goods_or_se IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_have_you_exchanged_sex_for_money_goods_or_se,
FIRST_VALUE(prep_cont_form_have_you_been_sexually_abused_or_had_gender_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_have_you_been_sexually_abused_or_had_gender_ IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_have_you_been_sexually_abused_or_had_gender_,
FIRST_VALUE(prep_cont_form_have_you_used_emergency_contraception_since_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_have_you_used_emergency_contraception_since_ IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_have_you_used_emergency_contraception_since_,
FIRST_VALUE(prep_cont_form_if_yes_for_used_emergency_contraception_sinc)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_if_yes_for_used_emergency_contraception_sinc IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_if_yes_for_used_emergency_contraception_sinc,
FIRST_VALUE(prep_cont_form_does_the_client_have_any_sings_of_primary_in)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_does_the_client_have_any_sings_of_primary_in IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_does_the_client_have_any_sings_of_primary_in,
FIRST_VALUE(prep_cont_form_if_yes_for_client_have_any_sings_of_primary_)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_if_yes_for_client_have_any_sings_of_primary_ IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_if_yes_for_client_have_any_sings_of_primary_,
FIRST_VALUE(prep_cont_form_are_you_ready_to_continue_prep)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_are_you_ready_to_continue_prep IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_are_you_ready_to_continue_prep,
FIRST_VALUE(prep_cont_form_if_no_for_are_you_ready_to_continue_prep)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_if_no_for_are_you_ready_to_continue_prep IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_if_no_for_are_you_ready_to_continue_prep,
FIRST_VALUE(prep_cont_form_what_is_the_client_s_hiv_status_today)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_what_is_the_client_s_hiv_status_today IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_what_is_the_client_s_hiv_status_today,
FIRST_VALUE(prep_cont_form_is_the_client_eligible_to_continue_prep)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_is_the_client_eligible_to_continue_prep IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_is_the_client_eligible_to_continue_prep,
FIRST_VALUE(prep_cont_form_type_of_follow_up)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_type_of_follow_up IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_type_of_follow_up,
FIRST_VALUE(prep_cont_form_duration_of_medication)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_duration_of_medication IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_duration_of_medication,
FIRST_VALUE(prep_cont_form_next_date_of_medication_resupply)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_next_date_of_medication_resupply IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_next_date_of_medication_resupply,
FIRST_VALUE(prep_cont_form_prep_end_date)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_cont_form_prep_end_date IS NULL THEN 0 ELSE 1
      END DESC, prep2.encounter_id DESC) AS prep_cont_form_prep_end_date
FROM
(SELECT
encounter_id,
max(patient_id) AS patient_id ,
max(obs_datetime) AS obs_datetime,
max(date_created) AS date_created,
max(program_id) AS program_id,
max(program_name) AS program_name,
max(prep_cont_form_facility) AS prep_cont_form_facility,
max(prep_cont_form_site_type) AS prep_cont_form_site_type,
max(prep_cont_form_district) AS prep_cont_form_district,
max(prep_cont_form_do_you_have_any_heath_related_problems_today) AS prep_cont_form_do_you_have_any_heath_related_problems_today,
max(prep_cont_form_if_yes_for_health_related_problems_today) AS prep_cont_form_if_yes_for_health_related_problems_today,
max(prep_cont_form_are_you_using_any_family_planning_method) AS prep_cont_form_are_you_using_any_family_planning_method,
string_agg(prep_cont_form_if_yes_for_are_you_using_any_family_planning,',') AS prep_cont_form_if_yes_for_are_you_using_any_family_planning,
max(prep_cont_form_last_normal_menstrual_period) AS prep_cont_form_last_normal_menstrual_period,
max(prep_cont_form_are_you_breast_feeding) AS prep_cont_form_are_you_breast_feeding,
max(prep_cont_form_are_you_using_any_other_medications) AS prep_cont_form_are_you_using_any_other_medications,
string_agg(prep_cont_form_if_yes_for_are_you_using_any_other_medicatio,',') AS prep_cont_form_if_yes_for_are_you_using_any_other_medicatio,
max(prep_cont_form_how_many_sexual_partners_have_you_had_since_) AS prep_cont_form_how_many_sexual_partners_have_you_had_since_,
max(prep_cont_form_do_you_know_your_partner_s_hiv_status) AS prep_cont_form_do_you_know_your_partner_s_hiv_status,
max(prep_cont_form_if_yes_for_do_you_know_your_partner_s_hiv_st) AS prep_cont_form_if_yes_for_do_you_know_your_partner_s_hiv_st,
max(prep_cont_form_is_your_partner_on_art) AS prep_cont_form_is_your_partner_on_art,
max(prep_cont_form_do_you_know_your_partner_s_viral_load) AS prep_cont_form_do_you_know_your_partner_s_viral_load,
max(prep_cont_form_if_yes_for_do_you_know_your_partner_s_viral_) AS prep_cont_form_if_yes_for_do_you_know_your_partner_s_viral_,
max(prep_cont_form_are_you_using_condoms_every_time_you_are_hav) AS prep_cont_form_are_you_using_condoms_every_time_you_are_hav,
max(prep_cont_form_have_you_had_a_condom_burst_since_the_last_v) AS prep_cont_form_have_you_had_a_condom_burst_since_the_last_v,
max(prep_cont_form_if_yes_for_condom_burst_since_the_last_visit) AS prep_cont_form_if_yes_for_condom_burst_since_the_last_visit,
max(prep_cont_form_have_you_been_treated_for_an_sti_since_the_l) AS prep_cont_form_have_you_been_treated_for_an_sti_since_the_l,
max(prep_cont_form_have_you_had_sex_whilst_indoxicated_with_alc) AS prep_cont_form_have_you_had_sex_whilst_indoxicated_with_alc,
max(prep_cont_form_have_you_exchanged_sex_for_money_goods_or_se) AS prep_cont_form_have_you_exchanged_sex_for_money_goods_or_se,
max(prep_cont_form_have_you_been_sexually_abused_or_had_gender_) AS prep_cont_form_have_you_been_sexually_abused_or_had_gender_,
max(prep_cont_form_have_you_used_emergency_contraception_since_) AS prep_cont_form_have_you_used_emergency_contraception_since_,
max(prep_cont_form_if_yes_for_used_emergency_contraception_sinc) AS prep_cont_form_if_yes_for_used_emergency_contraception_sinc,
max(prep_cont_form_does_the_client_have_any_sings_of_primary_in) AS prep_cont_form_does_the_client_have_any_sings_of_primary_in,
string_agg(prep_cont_form_if_yes_for_client_have_any_sings_of_primary_,',') AS prep_cont_form_if_yes_for_client_have_any_sings_of_primary_,
max(prep_cont_form_are_you_ready_to_continue_prep) AS prep_cont_form_are_you_ready_to_continue_prep,
string_agg(prep_cont_form_if_no_for_are_you_ready_to_continue_prep,',') AS prep_cont_form_if_no_for_are_you_ready_to_continue_prep,
max(prep_cont_form_what_is_the_client_s_hiv_status_today) AS prep_cont_form_what_is_the_client_s_hiv_status_today,
max(prep_cont_form_is_the_client_eligible_to_continue_prep) AS prep_cont_form_is_the_client_eligible_to_continue_prep,
max(prep_cont_form_type_of_follow_up) AS prep_cont_form_type_of_follow_up,
max(prep_cont_form_duration_of_medication) AS prep_cont_form_duration_of_medication,
max(prep_cont_form_next_date_of_medication_resupply) AS prep_cont_form_next_date_of_medication_resupply,
max(prep_cont_form_prep_end_date) AS prep_cont_form_prep_end_date
FROM prep_cont_form_template prep_cont GROUP BY encounter_id) AS prep2
INNER JOIN patient_encounter_table pedd ON pedd.encounter_id = prep2.encounter_id) AS prep2_2

ON prep1_1.visit_id = prep2_2.visit_id

FULL OUTER JOIN

    (SELECT
DISTINCT visit_id ,
FIRST_VALUE(prep3.obs_datetime)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep3.obs_datetime IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS obs_datetime,
FIRST_VALUE(prep3.patient_id)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep3.patient_id IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS patient_id,
FIRST_VALUE(prep3.date_created)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep3.date_created IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS date_created,
FIRST_VALUE(prep3.program_id)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep3.program_id IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS program_id,
FIRST_VALUE(prep3.program_name)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep3.program_name IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS program_name,
FIRST_VALUE(prep_st_form_facility)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_facility IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_facility,
FIRST_VALUE(prep_st_form_site_type)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_site_type IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC)
AS prep_st_form_site_type,
FIRST_VALUE(prep_st_form_district)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_district IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_district,
FIRST_VALUE(prep_st_form_is_the_client_hiv_negative)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_is_the_client_hiv_negative IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_is_the_client_hiv_negative,

FIRST_VALUE(prep_st_form_date_tested)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_date_tested IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_date_tested,

FIRST_VALUE(prep_st_form_is_the_client_sexually_active)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_is_the_client_sexually_active IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_is_the_client_sexually_active,

FIRST_VALUE(prep_st_form_is_the_sexually_active_in_a_high_prevalence_kp)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_is_the_sexually_active_in_a_high_prevalence_kp IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_is_the_sexually_active_in_a_high_prevalence_kp,

FIRST_VALUE(prep_st_form_if_yes_then_specify1)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_if_yes_then_specify1 IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_if_yes_then_specify1,

FIRST_VALUE(prep_st_form_has_the_client_had_vaginal_or_anal_intercourse)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_has_the_client_had_vaginal_or_anal_intercourse IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_has_the_client_had_vaginal_or_anal_intercourse,

FIRST_VALUE(prep_st_form_how_many_sexual_partners_did_you_have_vaginal_)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_how_many_sexual_partners_did_you_have_vaginal_ IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_how_many_sexual_partners_did_you_have_vaginal_,

FIRST_VALUE(prep_st_form_in_the_past_6_months_did_you_use_condoms_consi)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_in_the_past_6_months_did_you_use_condoms_consi IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_in_the_past_6_months_did_you_use_condoms_consi,

FIRST_VALUE(prep_st_form_does_the_client_have_a_sex_partner_with_one_or)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_does_the_client_have_a_sex_partner_with_one_or IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_does_the_client_have_a_sex_partner_with_one_or,

FIRST_VALUE(prep_st_form_if_yes_then_specify2)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_if_yes_then_specify2 IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_if_yes_then_specify2,

FIRST_VALUE(prep_st_form_in_the_last_6_months_has_the_client_been_treat)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_in_the_last_6_months_has_the_client_been_treat IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_in_the_last_6_months_has_the_client_been_treat,

FIRST_VALUE(prep_st_form_in_the_last_6_months_have_you_taken_post_expos)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_in_the_last_6_months_have_you_taken_post_expos IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_in_the_last_6_months_have_you_taken_post_expos,

FIRST_VALUE(prep_st_form_in_the_last_6_months_have_you_used_emergency_c)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_in_the_last_6_months_have_you_used_emergency_c IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_in_the_last_6_months_have_you_used_emergency_c,

FIRST_VALUE(prep_st_form_in_the_last_6_months_have_you_had_sex_while_un)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_in_the_last_6_months_have_you_had_sex_while_un IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_in_the_last_6_months_have_you_had_sex_while_un,

FIRST_VALUE(prep_st_form_are_you_in_a_sero_discordant_relationship)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_are_you_in_a_sero_discordant_relationship IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_are_you_in_a_sero_discordant_relationship,

FIRST_VALUE(prep_st_form_if_yes_then_specify3)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_if_yes_then_specify3 IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_if_yes_then_specify3,

FIRST_VALUE(prep_st_form_do_you_have_a_partners_of_unknown_status_who_r)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_do_you_have_a_partners_of_unknown_status_who_r IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_do_you_have_a_partners_of_unknown_status_who_r,

FIRST_VALUE(prep_st_form_do_you_inject_drugs)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_do_you_inject_drugs IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_do_you_inject_drugs,

FIRST_VALUE(prep_st_form_is_the_client_eligible_for_prep)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_is_the_client_eligible_for_prep IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_is_the_client_eligible_for_prep,

FIRST_VALUE(prep_st_form_if_yes_then_specify4)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_if_yes_then_specify4 IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_if_yes_then_specify4,

FIRST_VALUE(prep_st_form_has_the_client_been_referred_for_prep)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_has_the_client_been_referred_for_prep IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_has_the_client_been_referred_for_prep,

FIRST_VALUE(prep_st_form_reason_s_for_not_referring_the_client)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_reason_s_for_not_referring_the_client IS NULL THEN 0 ELSE 1 END DESC, prep3.encounter_id DESC) AS prep_st_form_reason_s_for_not_referring_the_client,
FIRST_VALUE(prep_st_form_client_offered_prep)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_client_offered_prep IS NULL THEN 0 ELSE 1 END DESC,
prep3.encounter_id DESC) AS prep_st_form_client_offered_prep,
FIRST_VALUE(prep_st_form_client_accepted_prep)
OVER(PARTITION BY visit_id ORDER BY CASE WHEN prep_st_form_client_accepted_prep IS NULL THEN 0 ELSE 1 END DESC,
prep3.encounter_id DESC) AS prep_st_form_client_accepted_prep
FROM
(SELECT
encounter_id,
max(patient_id) AS patient_id ,
max(obs_datetime) AS obs_datetime,
max(date_created) AS date_created,
max(program_id) AS program_id,
max(program_name) AS program_name,
max(prep_st_form_facility) AS prep_st_form_facility,
max(prep_st_form_site_type) AS prep_st_form_site_type,
max(prep_st_form_district) AS prep_st_form_district,
max(prep_st_form_is_the_client_hiv_negative) AS prep_st_form_is_the_client_hiv_negative,
max(prep_st_form_date_tested) AS prep_st_form_date_tested,
max(prep_st_form_is_the_client_sexually_active) AS prep_st_form_is_the_client_sexually_active,
max(prep_st_form_is_the_sexually_active_in_a_high_prevalence_kp) AS prep_st_form_is_the_sexually_active_in_a_high_prevalence_kp,
max(prep_st_form_if_yes_then_specify1) AS prep_st_form_if_yes_then_specify1,
max(prep_st_form_has_the_client_had_vaginal_or_anal_intercourse) AS prep_st_form_has_the_client_had_vaginal_or_anal_intercourse,
max(prep_st_form_how_many_sexual_partners_did_you_have_vaginal_) AS prep_st_form_how_many_sexual_partners_did_you_have_vaginal_,
max(prep_st_form_in_the_past_6_months_did_you_use_condoms_consi) AS prep_st_form_in_the_past_6_months_did_you_use_condoms_consi,
max(prep_st_form_does_the_client_have_a_sex_partner_with_one_or) AS prep_st_form_does_the_client_have_a_sex_partner_with_one_or,
string_agg(prep_st_form_if_yes_then_specify2,',') AS prep_st_form_if_yes_then_specify2,
max(prep_st_form_in_the_last_6_months_has_the_client_been_treat) AS prep_st_form_in_the_last_6_months_has_the_client_been_treat,
max(prep_st_form_in_the_last_6_months_have_you_taken_post_expos) AS prep_st_form_in_the_last_6_months_have_you_taken_post_expos,
max(prep_st_form_in_the_last_6_months_have_you_used_emergency_c) AS prep_st_form_in_the_last_6_months_have_you_used_emergency_c,
max(prep_st_form_in_the_last_6_months_have_you_had_sex_while_un) AS prep_st_form_in_the_last_6_months_have_you_had_sex_while_un,
max(prep_st_form_are_you_in_a_sero_discordant_relationship) AS prep_st_form_are_you_in_a_sero_discordant_relationship,
string_agg(prep_st_form_if_yes_then_specify3,',') AS prep_st_form_if_yes_then_specify3,
max(prep_st_form_do_you_have_a_partners_of_unknown_status_who_r) AS prep_st_form_do_you_have_a_partners_of_unknown_status_who_r,
max(prep_st_form_do_you_inject_drugs) AS prep_st_form_do_you_inject_drugs,
max(prep_st_form_is_the_client_eligible_for_prep) AS prep_st_form_is_the_client_eligible_for_prep,
max(prep_st_form_if_yes_then_specify4) AS prep_st_form_if_yes_then_specify4,
max(prep_st_form_has_the_client_been_referred_for_prep) AS prep_st_form_has_the_client_been_referred_for_prep,
string_agg(prep_st_form_reason_s_for_not_referring_the_client,',') AS prep_st_form_reason_s_for_not_referring_the_client,
max(prep_st_form_client_offered_prep) AS prep_st_form_client_offered_prep,
max(prep_st_form_client_accepted_prep) AS prep_st_form_client_accepted_prep
FROM prep_screening_tool_template prep_st GROUP BY encounter_id) AS prep3
INNER JOIN patient_encounter_table pedd ON pedd.encounter_id = prep3.encounter_id) AS prep3_3
ON prep1_1.visit_id = prep3_3.visit_id
INNER JOIN psi_patient_program_data ppv on (ppv.patient_id = prep1_1.patient_id or ppv.patient_id = prep2_2.patient_id or ppv.patient_id = prep3_3.patient_id) and (ppv.program_id = (SELECT program_id FROM programs_default WHERE program_name= 'PrEP Program'))
INNER JOIN patient_identifier pi ON (prep1_1.patient_id = pi.patient_id or prep2_2.patient_id = pi.patient_id or prep3_3.patient_id = pi.patient_id)
ORDER BY date_created DESC;"
},
{
      "name": "ncd_program_events_table",
      "sql": "SELECT     'vatFxlZR2lj':: text AS program,
      'HEMM6ZpkqgJ':: text AS program_stage,
      CASE
      WHEN ncd_form_site_type = 'Outreach' THEN concat('ZWNSC-OU-',upper(ncd_form_facility),
      '-',upper(ncd_form_district))
      WHEN ncd_form_site_type = 'Static' THEN concat('ZWNSC-',upper(ncd_form_facility
      ))
      END                                                 AS \"OrgUnit\",
      COALESCE(ncd.obs_datetime, '01-01-0001' )          AS \"event_date\",
      'COMPLETED' :: text                                 AS status,
      ppv.program_id as program_id,
      ncd.encounter_id                                       AS \"event_unique_id\",
      ppv.patient_program_id                              AS \"patient_program_id\",
      date(ppv.\"date_enrolled\")                           AS \"enrollment_date\",
      COALESCE(ncd.date_created, '01-01-0001 00:00:00' ) AS \"date_created\",
      pi.\"Patient_Identifier\"                             AS \"Patient_Identifier\",
      CASE
      WHEN ncd_form_clients_screened_for_hypertension = 'Yes' THEN 1
      WHEN ncd_form_clients_screened_for_hypertension = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Clients screened for hypertension\",
      CASE
      WHEN ncd_form_clients_screened_for_type_2_diabetes = 'Yes' THEN 1
      WHEN ncd_form_clients_screened_for_type_2_diabetes = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Clients screened for Type 2 diabetes\",
      CASE
      WHEN ncd_form_clients_diagnosed_with_hypertension = 'Yes' THEN 1
      WHEN ncd_form_clients_diagnosed_with_hypertension = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Clients diagnosed with hypertension\",
      CASE
      WHEN ncd_form_clients_diagnosed_with_type_2_diabetes = 'Yes' THEN 1
      WHEN ncd_form_clients_diagnosed_with_type_2_diabetes = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Clients diagnosed with Type 2 diabetes\",
      CASE
      WHEN ncd_form_is_hypertension_condition_controlled = 'Yes' THEN 1
      WHEN ncd_form_is_hypertension_condition_controlled = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Is hypertension condition controlled?\",
      CASE
      WHEN ncd_form_is_diabetes_condition_controlled = 'Yes' THEN 1
      WHEN ncd_form_is_diabetes_condition_controlled = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Is diabetes condition controlled\",
      CASE
      WHEN ncd_form_hypertension_management = 'Yes' THEN 1
      WHEN ncd_form_hypertension_management = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Hypertension management\",
      CASE
      WHEN ncd_form_diabetes_management_gestational = 'Yes' THEN 1
      WHEN ncd_form_diabetes_management_gestational = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Diabetes management _ gestational\",
      CASE
      WHEN ncd_form_diabetes_management_non_gestational = 'Yes' THEN 1
      WHEN ncd_form_diabetes_management_non_gestational = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Diabetes management _ non-gestational\"
      FROM
      ncd_template ncd
      INNER JOIN patient_encounter_table  pedd
      ON              pedd.encounter_id = ncd.encounter_id
      INNER JOIN psi_patient_program_data ppv
      ON         ppv.patient_id = ncd.patient_id AND ppv.program_id = ncd.program_id
      INNER JOIN patient_identifier pi
      ON         ncd.patient_id = pi.patient_id
      ORDER BY   date_created DESC"
    },
    {
      "name": "referrals_program_events_table",
      "sql": "SELECT     'vatFxlZR2lj':: text AS program,
      'HEMM6ZpkqgJ':: text AS program_stage,
      CASE
      WHEN referrals_form_site_type = 'Outreach' THEN concat('ZWNSC-OU-',upper(COALESCE(referrals_form_facility,
      (
      SELECT   referrals_form_facility
      FROM     referrals_template
      WHERE    referrals_form_facility IS NOT NULL
      AND      patient_id = referrals.patient_id
      ORDER BY encounter_id DESC limit 1))),'-',upper(referrals_form_district))
      WHEN referrals_form_site_type = 'Static' THEN concat('ZWNSC-',upper(COALESCE(referrals_form_facility,
      (
      SELECT   referrals_form_facility
      FROM     referrals_template
      WHERE    referrals_form_facility IS NOT NULL
      AND      patient_id = referrals.patient_id
      ORDER BY encounter_id DESC limit 1))))
      END                                                 AS \"OrgUnit\",
      COALESCE(referrals.obs_datetime, '01-01-0001' )          AS \"event_date\",
      'COMPLETED' :: text                                 AS status,
      referrals.encounter_id                                       AS \"event_unique_id\",
      ppv.patient_program_id as \"patient_program_id\",
      date(ppv.\"date_enrolled\")                           AS \"enrollment_date\",
      COALESCE(referrals.date_created, '01-01-0001 00:00:00' ) AS \"date_created\",
      pi.\"Patient_Identifier\"                             AS \"Patient_Identifier\",

      referrals_form_type_of_referral AS \"Type of referral\",
      referrals_form_referring_officer AS \"Referring officer\",
      referrals_form_facility_where_client_has_been_referred_to AS \"Facility where client has been referred to\",
      referrals_form_expected_visit_date AS \"Expected visit date\",

      CASE
      WHEN referrals_form_referred_for_hiv_counselling = 'Yes' THEN 1
      WHEN referrals_form_referred_for_hiv_counselling = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for HIV Counselling\",
      CASE
      WHEN referrals_form_referred_for_post_exposure_prophylaxis = 'Yes' THEN 1
      WHEN referrals_form_referred_for_post_exposure_prophylaxis = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Post Exposure Prophylaxis\",
      CASE
      WHEN referrals_form_referred_for_prep = 'Yes' THEN 1
      WHEN referrals_form_referred_for_prep = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for PrEP\",
      CASE
      WHEN referrals_form_referred_for_sti_screening_treatment = 'Yes' THEN 1
      WHEN referrals_form_referred_for_sti_screening_treatment = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for STI screening /Treatment\",
      CASE
      WHEN referrals_form_referred_for_vmmc = 'Yes' THEN 1
      WHEN referrals_form_referred_for_vmmc = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for VMMC\",
      CASE
      WHEN referrals_form_referred_for_hiv_rapid_test = 'Yes' THEN 1
      WHEN referrals_form_referred_for_hiv_rapid_test = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for HIV Rapid Test\",
      CASE
      WHEN referrals_form_referred_for_dbs_pcr_hiv_testing = 'Yes' THEN 1
      WHEN referrals_form_referred_for_dbs_pcr_hiv_testing = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for DBS- PCR HIV Testing\",
      CASE
      WHEN referrals_form_referred_for_cd4_count = 'Yes' THEN 1
      WHEN referrals_form_referred_for_cd4_count = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for CD4 Count\",
      CASE
      WHEN referrals_form_referred_for_viral_load_test = 'Yes' THEN 1
      WHEN referrals_form_referred_for_viral_load_test = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Viral Load test\",
      CASE
      WHEN referrals_form_referred_for_fbc = 'Yes' THEN 1
      WHEN referrals_form_referred_for_fbc = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for FBC\",
      CASE
      WHEN referrals_form_referred_for_lft = 'Yes' THEN 1
      WHEN referrals_form_referred_for_lft = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for LFT\",
      CASE
      WHEN referrals_form_referred_for_uandes = 'Yes' THEN 1
      WHEN referrals_form_referred_for_uandes = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for U&Es\",
      CASE
      WHEN referrals_form_referred_for_creatinine = 'Yes' THEN 1
      WHEN referrals_form_referred_for_creatinine = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Creatinine\",
      CASE
      WHEN referrals_form_referred_for_pre_art_registration = 'Yes' THEN 1
      WHEN referrals_form_referred_for_pre_art_registration = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Pre-ART registration\",
      CASE
      WHEN referrals_form_referred_for_art_initiation = 'Yes' THEN 1
      WHEN referrals_form_referred_for_art_initiation = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for ART Initiation\",
      CASE
      WHEN referrals_form_referred_for_art_refill_defaulters = 'Yes' THEN 1
      WHEN referrals_form_referred_for_art_refill_defaulters = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for ART refill (defaulters)\",
      CASE
      WHEN referrals_form_referred_for_art_decentralization = 'Yes' THEN 1
      WHEN referrals_form_referred_for_art_decentralization = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for ART Decentralization\",
      CASE
      WHEN referrals_form_referred_for_pmtct_option_b = 'Yes' THEN 1
      WHEN referrals_form_referred_for_pmtct_option_b = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for PMTCT/Option B+\",
      CASE
      WHEN referrals_form_referred_for_ctx_oi_management = 'Yes' THEN 1
      WHEN referrals_form_referred_for_ctx_oi_management = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for CTX/OI Management\",
      CASE
      WHEN referrals_form_referred_for_carg_enrolment_transfer = 'Yes' THEN 1
      WHEN referrals_form_referred_for_carg_enrolment_transfer = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for CARG enrolment/ Transfer\",
      CASE
      WHEN referrals_form_referred_for_support_groups = 'Yes' THEN 1
      WHEN referrals_form_referred_for_support_groups = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Support Groups\",
      CASE
      WHEN referrals_form_referred_for_art_official_transfer = 'Yes' THEN 1
      WHEN referrals_form_referred_for_art_official_transfer = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for ART official transfer\",
      CASE
      WHEN referrals_form_referred_for_art_reinitiating = 'Yes' THEN 1
      WHEN referrals_form_referred_for_art_reinitiating = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for ART reinitiating\",
      CASE
      WHEN referrals_form_referred_for_tb_screening = 'Yes' THEN 1
      WHEN referrals_form_referred_for_tb_screening = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for TB Screening\",
      CASE
      WHEN referrals_form_referred_for_tb_diagnosis_sputum_collection = 'Yes' THEN 1
      WHEN referrals_form_referred_for_tb_diagnosis_sputum_collection = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for TB Diagnosis/Sputum Collection\",
      CASE
      WHEN referrals_form_referred_for_tb_treatment_management = 'Yes' THEN 1
      WHEN referrals_form_referred_for_tb_treatment_management = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for TB Treatment/Management\",
      CASE
      WHEN referrals_form_referred_for_tb_re_initiation_after_ltfu = 'Yes' THEN 1
      WHEN referrals_form_referred_for_tb_re_initiation_after_ltfu = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for TB Re-Initiation after LTFU\",
      CASE
      WHEN referrals_form_referred_for_anc = 'Yes' THEN 1
      WHEN referrals_form_referred_for_anc = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for ANC\",
      CASE
      WHEN referrals_form_referred_for_emergency_contraception = 'Yes' THEN 1
      WHEN referrals_form_referred_for_emergency_contraception = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Emergency contraception\",
      CASE
      WHEN referrals_form_referred_for_family_planning = 'Yes' THEN 1
      WHEN referrals_form_referred_for_family_planning = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Family Planning\",
      CASE
      WHEN referrals_form_referred_for_cancer_of_cervix_screening = 'Yes' THEN 1
      WHEN referrals_form_referred_for_cancer_of_cervix_screening = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Cancer of Cervix Screening\",
      CASE
      WHEN referrals_form_referred_for_breast_cancer_screening = 'Yes' THEN 1
      WHEN referrals_form_referred_for_breast_cancer_screening = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Breast Cancer Screening\",
      CASE
      WHEN referrals_form_referred_for_psycho_social_support = 'Yes' THEN 1
      WHEN referrals_form_referred_for_psycho_social_support = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Psycho-social support\",
      CASE
      WHEN referrals_form_referred_for_economic_strengthening = 'Yes' THEN 1
      WHEN referrals_form_referred_for_economic_strengthening = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Economic Strengthening\",
      CASE
      WHEN referrals_form_referred_for_educational_services = 'Yes' THEN 1
      WHEN referrals_form_referred_for_educational_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Educational services\",
      CASE
      WHEN referrals_form_referred_for_emergency_shelter = 'Yes' THEN 1
      WHEN referrals_form_referred_for_emergency_shelter = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Emergency Shelter\",
      CASE
      WHEN referrals_form_referred_for_nutrition_support = 'Yes' THEN 1
      WHEN referrals_form_referred_for_nutrition_support = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Nutrition Support\",
      CASE
      WHEN referrals_form_referred_for_legal_counsel = 'Yes' THEN 1
      WHEN referrals_form_referred_for_legal_counsel = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Legal Counsel\",
      CASE
      WHEN referrals_form_referred_to_victim_friendly_services = 'Yes' THEN 1
      WHEN referrals_form_referred_to_victim_friendly_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred to Victim Friendly Services\",
      CASE
      WHEN referrals_form_referred_for_vital_registration = 'Yes' THEN 1
      WHEN referrals_form_referred_for_vital_registration = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Referred for Vital Registration\",
      CASE
      WHEN referrals_form_received_hiv_counselling_services = 'Yes' THEN 1
      WHEN referrals_form_received_hiv_counselling_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received HIV Counselling Services\",
      CASE
      WHEN referrals_form_received_post_exposure_prophylaxis_services = 'Yes' THEN 1
      WHEN referrals_form_received_post_exposure_prophylaxis_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Post Exposure Prophylaxis Services\",
      CASE
      WHEN referrals_form_received_prep_services = 'Yes' THEN 1
      WHEN referrals_form_received_prep_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received PrEP Services\",
      CASE
      WHEN referrals_form_received_sti_screening_treatment_services = 'Yes' THEN 1
      WHEN referrals_form_received_sti_screening_treatment_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received STI - Screening / treatment Services\",
      CASE
      WHEN referrals_form_received_vmmc_services = 'Yes' THEN 1
      WHEN referrals_form_received_vmmc_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received VMMC Services\",
      CASE
      WHEN referrals_form_received_hiv_rapid_test_services = 'Yes' THEN 1
      WHEN referrals_form_received_hiv_rapid_test_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received HIV Rapid Test Services\",
      CASE
      WHEN referrals_form_received_dbs_pcr_hiv_testing_services = 'Yes' THEN 1
      WHEN referrals_form_received_dbs_pcr_hiv_testing_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received DBS- PCR HIV Testing Services\",
      CASE
      WHEN referrals_form_received_cd4_count_services = 'Yes' THEN 1
      WHEN referrals_form_received_cd4_count_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received CD4 Count Services\",
      CASE
      WHEN referrals_form_received_viral_load_test_services = 'Yes' THEN 1
      WHEN referrals_form_received_viral_load_test_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Viral Load test Services\",
      CASE
      WHEN referrals_form_received_fbc_services = 'Yes' THEN 1
      WHEN referrals_form_received_fbc_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received FBC Services\",
      CASE
      WHEN referrals_form_received_lft_services = 'Yes' THEN 1
      WHEN referrals_form_received_lft_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received LFT Services\",
      CASE
      WHEN referrals_form_received_uandes_services = 'Yes' THEN 1
      WHEN referrals_form_received_uandes_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received U&Es Services\",
      CASE
      WHEN referrals_form_received_creatinine_services = 'Yes' THEN 1
      WHEN referrals_form_received_creatinine_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Creatinine Services\",
      CASE
      WHEN referrals_form_received_pre_art_registration_services = 'Yes' THEN 1
      WHEN referrals_form_received_pre_art_registration_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Pre-ART registration Services\",
      CASE
      WHEN referrals_form_received_art_initiation_services = 'Yes' THEN 1
      WHEN referrals_form_received_art_initiation_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received ART Initiation Services\",
      CASE
      WHEN referrals_form_received_art_refill_defaulters_services = 'Yes' THEN 1
      WHEN referrals_form_received_art_refill_defaulters_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received ART refill (defaulters) Services\",
      CASE
      WHEN referrals_form_received_art_decentralization_services = 'Yes' THEN 1
      WHEN referrals_form_received_art_decentralization_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received ART Decentralization Services\",
      CASE
      WHEN referrals_form_received_pmtct_option_b_services = 'Yes' THEN 1
      WHEN referrals_form_received_pmtct_option_b_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received PMTCT/Option B+ Services\",
      CASE
      WHEN referrals_form_received_ctx_oi_management_services = 'Yes' THEN 1
      WHEN referrals_form_received_ctx_oi_management_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received CTX/OI Management Services\",
      CASE
      WHEN referrals_form_received_carg_enrolment_transfer_services = 'Yes' THEN 1
      WHEN referrals_form_received_carg_enrolment_transfer_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received CARG enrolment/ Transfer Services\",
      CASE
      WHEN referrals_form_received_support_groups_services = 'Yes' THEN 1
      WHEN referrals_form_received_support_groups_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Support Groups Services\",
      CASE
      WHEN referrals_form_received_art_official_transfer_services = 'Yes' THEN 1
      WHEN referrals_form_received_art_official_transfer_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received ART official transfer Services\",
      CASE
      WHEN referrals_form_received_art_reinitiating_services = 'Yes' THEN 1
      WHEN referrals_form_received_art_reinitiating_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received ART reinitiating Services\",
      CASE
      WHEN referrals_form_received_tb_screening_services = 'Yes' THEN 1
      WHEN referrals_form_received_tb_screening_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received TB screening Services\",
      CASE
      WHEN referrals_form_received_tb_diagnosis_sputum_collection_serv = 'Yes' THEN 1
      WHEN referrals_form_received_tb_diagnosis_sputum_collection_serv = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received TB Diagnosis/Sputum Collection Services\",
      CASE
      WHEN referrals_form_received_tb_treatment_management_services = 'Yes' THEN 1
      WHEN referrals_form_received_tb_treatment_management_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received TB Treatment / Management Services\",
      CASE
      WHEN referrals_form_received_tb_re_initiation_after_ltfu_service = 'Yes' THEN 1
      WHEN referrals_form_received_tb_re_initiation_after_ltfu_service = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received TB Re-Initiation after LTFU Services\",
      CASE
      WHEN referrals_form_received_anc_services = 'Yes' THEN 1
      WHEN referrals_form_received_anc_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received ANC Services\",
      CASE
      WHEN referrals_form_received_emergency_contraception_services = 'Yes' THEN 1
      WHEN referrals_form_received_emergency_contraception_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Emergency Contraception Services\",
      CASE
      WHEN referrals_form_received_family_planning_services = 'Yes' THEN 1
      WHEN referrals_form_received_family_planning_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Family Planning Services\",
      CASE
      WHEN referrals_form_received_cancer_of_cervix_screening_services = 'Yes' THEN 1
      WHEN referrals_form_received_cancer_of_cervix_screening_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Cancer of Cervix Screening Services\",
      CASE
      WHEN referrals_form_received_breast_cancer_screening_services = 'Yes' THEN 1
      WHEN referrals_form_received_breast_cancer_screening_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Breast Cancer Screening Services\",
      CASE
      WHEN referrals_form_received_psycho_social_support_services = 'Yes' THEN 1
      WHEN referrals_form_received_psycho_social_support_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Psycho-social support  Services\",
      CASE
      WHEN referrals_form_received_economic_strengthening_services = 'Yes' THEN 1
      WHEN referrals_form_received_economic_strengthening_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Economic Strengthening Services\",
      CASE
      WHEN referrals_form_received_educational_services_services = 'Yes' THEN 1
      WHEN referrals_form_received_educational_services_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Educational Services\",
      CASE
      WHEN referrals_form_received_emergency_shelter_services = 'Yes' THEN 1
      WHEN referrals_form_received_emergency_shelter_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Emergency Shelter Services\",
      CASE
      WHEN referrals_form_received_nutrition_support_services = 'Yes' THEN 1
      WHEN referrals_form_received_nutrition_support_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Nutrition Support Services\",
      CASE
      WHEN referrals_form_received_legal_counsel_services = 'Yes' THEN 1
      WHEN referrals_form_received_legal_counsel_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Legal Counsel Services\",
      CASE
      WHEN referrals_form_received_to_victim_friendly_services = 'Yes' THEN 1
      WHEN referrals_form_received_to_victim_friendly_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received to Victim Friendly Services\",
      CASE
      WHEN referrals_form_received_vital_registration_services = 'Yes' THEN 1
      WHEN referrals_form_received_vital_registration_services = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Vital Registration Services\",
      CASE
      WHEN referrals_form_received_progestin_only_pills = 'Yes' THEN 1
      WHEN referrals_form_received_progestin_only_pills = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Progestin-only pills\",
      CASE
      WHEN referrals_form_received_combined_oral_contraceptive_pills = 'Yes' THEN 1
      WHEN referrals_form_received_combined_oral_contraceptive_pills = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Combined oral contraceptive pills\",
      CASE
      WHEN referrals_form_received_injectable_1_month = 'Yes' THEN 1
      WHEN referrals_form_received_injectable_1_month = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Injectable 1 month\",
      CASE
      WHEN referrals_form_received_injectable_2_months = 'Yes' THEN 1
      WHEN referrals_form_received_injectable_2_months = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Injectable 2 months\",
      CASE
      WHEN referrals_form_received_injectable_3_months = 'Yes' THEN 1
      WHEN referrals_form_received_injectable_3_months = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Injectable 3 months\",
      CASE
      WHEN referrals_form_received_injectable_duration_unknown = 'Yes' THEN 1
      WHEN referrals_form_received_injectable_duration_unknown = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Injectable duration unknown\",
      CASE
      WHEN referrals_form_received_cyclebeads = 'Yes' THEN 1
      WHEN referrals_form_received_cyclebeads = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Cyclebeads\",
      CASE
      WHEN referrals_form_received_ius_3_insertion = 'Yes' THEN 1
      WHEN referrals_form_received_ius_3_insertion = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received IUS 3 insertion\",
      CASE
      WHEN referrals_form_received_iud_5_insertion = 'Yes' THEN 1
      WHEN referrals_form_received_iud_5_insertion = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received IUD 5 insertion\",
      CASE
      WHEN referrals_form_received_iud_10_insertion = 'Yes' THEN 1
      WHEN referrals_form_received_iud_10_insertion = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received IUD 10 insertion\",
      CASE
      WHEN referrals_form_received_iud_insertion_duration_unknown = 'Yes' THEN 1
      WHEN referrals_form_received_iud_insertion_duration_unknown = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received IUD insertion duration unknown\",
      CASE
      WHEN referrals_form_received_implant_3_insertion = 'Yes' THEN 1
      WHEN referrals_form_received_implant_3_insertion = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Implant 3 insertion\",
      CASE
      WHEN referrals_form_received_implant_4_insertion = 'Yes' THEN 1
      WHEN referrals_form_received_implant_4_insertion = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Implant 4 insertion\",
      CASE
      WHEN referrals_form_received_implant_insertion_duration_unknown = 'Yes' THEN 1
      WHEN referrals_form_received_implant_insertion_duration_unknown = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Implant insertion duration unknown\",
      CASE
      WHEN referrals_form_received_implant_5_insertion = 'Yes' THEN 1
      WHEN referrals_form_received_implant_5_insertion = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Implant 5 insertion\",
      CASE
      WHEN referrals_form_received_vasectomy = 'Yes' THEN 1
      WHEN referrals_form_received_vasectomy = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Vasectomy\",
      CASE
      WHEN referrals_form_received_tubal_ligation = 'Yes' THEN 1
      WHEN referrals_form_received_tubal_ligation = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Tubal ligation\",
      CASE
      WHEN referrals_form_received_opioid_treatment = 'Yes' THEN 1
      WHEN referrals_form_received_opioid_treatment = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Opioid treatment\",
      CASE
      WHEN referrals_form_received_cryotherapy_referred_from_via_vili = 'Yes' THEN 1
      WHEN referrals_form_received_cryotherapy_referred_from_via_vili = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Cryotherapy (referred from VIA/VILI)\",
      CASE
      WHEN referrals_form_received_cryotherapy_referred_from_pap_scree = 'Yes' THEN 1
      WHEN referrals_form_received_cryotherapy_referred_from_pap_scree = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Cryotherapy (referred from Pap Screen)\",
      CASE
      WHEN referrals_form_received_cryotherapy_referred_from_hpv_dna = 'Yes' THEN 1
      WHEN referrals_form_received_cryotherapy_referred_from_hpv_dna = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Cryotherapy (referred from HPV DNA)\",
      CASE
      WHEN referrals_form_received_conization_or_leep_referred_from_vi = 'Yes' THEN 1
      WHEN referrals_form_received_conization_or_leep_referred_from_vi = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Conization or LEEP (referred from VIA/VILI)\",
      CASE
      WHEN referrals_form_received_conization_or_leep_referred_from_pa = 'Yes' THEN 1
      WHEN referrals_form_received_conization_or_leep_referred_from_pa = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Conization or LEEP (referred from Pap Screen)\",
      CASE
      WHEN referrals_form_received_conization_or_leep_referred_from_hp = 'Yes' THEN 1
      WHEN referrals_form_received_conization_or_leep_referred_from_hp = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Conization or LEEP (referred from HPV DNA)\",
      CASE
      WHEN referrals_form_received_any_cervical_cancer_treatment_from_ = 'Yes' THEN 1
      WHEN referrals_form_received_any_cervical_cancer_treatment_from_ = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Any cervical cancer treatment (from HPV DNA)\",
      CASE
      WHEN referrals_form_received_any_cervical_cancer_treatment_from__1 = 'Yes' THEN 1
      WHEN referrals_form_received_any_cervical_cancer_treatment_from__1 = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Any cervical cancer treatment (from Pap Screen)\",
      CASE
      WHEN referrals_form_received_any_cervical_cancer_treatment_from__2 = 'Yes' THEN 1
      WHEN referrals_form_received_any_cervical_cancer_treatment_from__2 = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Any cervical cancer treatment (from VIA/VILI)\",
      CASE
      WHEN referrals_form_received_advanced_treatment_for_cervical_can = 'Yes' THEN 1
      WHEN referrals_form_received_advanced_treatment_for_cervical_can = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Advanced treatment for cervical cancer\",
      CASE
      WHEN referrals_form_received_hypertension_management = 'Yes' THEN 1
      WHEN referrals_form_received_hypertension_management = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Hypertension management\",
      CASE
      WHEN referrals_form_received_diabetes_management_gestational = 'Yes' THEN 1
      WHEN referrals_form_received_diabetes_management_gestational = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Diabetes management - gestational\",
      CASE
      WHEN referrals_form_received_diabetes_management_non_gestational = 'Yes' THEN 1
      WHEN referrals_form_received_diabetes_management_non_gestational = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Diabetes management - non-gestational\",
      CASE
      WHEN referrals_form_received_treatment_for_urethral_discharge_me = 'Yes' THEN 1
      WHEN referrals_form_received_treatment_for_urethral_discharge_me = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Treatment for urethral discharge, men\",
      CASE
      WHEN referrals_form_received_treatment_for_urethral_discharge_wo = 'Yes' THEN 1
      WHEN referrals_form_received_treatment_for_urethral_discharge_wo = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Treatment for urethral discharge, women\",
      CASE
      WHEN referrals_form_received_chlamydia_gonorrhea_trichomona = 'Yes' THEN 1
      WHEN referrals_form_received_chlamydia_gonorrhea_trichomona = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received (Chlamydia, Gonorrhea, Trichomona)\",
      CASE
      WHEN referrals_form_received_treatment_for_vaginitis = 'Yes' THEN 1
      WHEN referrals_form_received_treatment_for_vaginitis = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Treatment for vaginitis\",
      CASE
      WHEN referrals_form_received_treatment_for_cervicitis = 'Yes' THEN 1
      WHEN referrals_form_received_treatment_for_cervicitis = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Treatment for cervicitis\",
      CASE
      WHEN referrals_form_received_treatment_for_non_herpetic_genital_ = 'Yes' THEN 1
      WHEN referrals_form_received_treatment_for_non_herpetic_genital_ = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Treatment for non-herpetic genital ulcer\",
      CASE
      WHEN referrals_form_received_syphilis_chancroid = 'Yes' THEN 1
      WHEN referrals_form_received_syphilis_chancroid = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received (Syphilis, Chancroid)\",
      CASE
      WHEN referrals_form_received_treatment_for_genital_herpes = 'Yes' THEN 1
      WHEN referrals_form_received_treatment_for_genital_herpes = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Treatment for genital herpes\",
      CASE
      WHEN referrals_form_received_lymphogranuloma_venerium = 'Yes' THEN 1
      WHEN referrals_form_received_lymphogranuloma_venerium = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received lymphogranuloma (venerium)\",
      CASE
      WHEN referrals_form_received_treatment_for_lower_abdominal_pain = 'Yes' THEN 1
      WHEN referrals_form_received_treatment_for_lower_abdominal_pain = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Treatment for lower abdominal pain\",
      CASE
      WHEN referrals_form_received_treatment_unknown = 'Yes' THEN 1
      WHEN referrals_form_received_treatment_unknown = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"Received Treatment unknown\"
      FROM

      referrals_template referrals
      INNER JOIN      patient_encounter_table pedd
      ON              pedd.encounter_id = referrals.encounter_id
      INNER JOIN psi_patient_program_data ppv
      ON         ppv.patient_id = referrals.patient_id AND ppv.program_id = referrals.program_id
      INNER JOIN patient_identifier pi
      ON         referrals.patient_id = pi.patient_id
      ORDER BY   date_created DESC"
    },
    {
  "name": "ipv_program_events_table",
  "sql": "SELECT     'vatFxlZR2lj':: text AS program,
           'TGvGDt6e6OM':: text AS program_stage,
           CASE
               WHEN ipv_form_site_type = 'Outreach' THEN concat('ZWNSC-OU-',upper(COALESCE(ipv_form_facility,
                                                                                           (
                                                                                               SELECT   ipv_form_facility
                                                                                               FROM     ipv_template
                                                                                               WHERE    ipv_form_facility IS NOT NULL
                                                                                                AND     patient_id = ipv.patient_id
                                                                                               ORDER BY encounter_id DESC limit 1))),'-',upper(ipv_form_district))
               WHEN ipv_form_site_type = 'Static' THEN concat('ZWNSC-',upper(COALESCE(ipv_form_facility,
                                                                                      (
                                                                                          SELECT   ipv_form_facility
                                                                                          FROM     ipv_template
                                                                                          WHERE    ipv_form_facility IS NOT NULL
                                                                                          AND      patient_id = ipv.patient_id
                                                                                          ORDER BY encounter_id DESC limit 1))))
               END                                                 AS \"OrgUnit\",
           COALESCE(ipv.obs_datetime, '01-01-0001' )          AS \"event_date\",
           'COMPLETED' :: text                                 AS status,
           ipv.encounter_id                                       AS \"event_unique_id\",
           ppv.patient_program_id as \"patient_program_id\",
           date(ppv.\"date_enrolled\")                           AS \"enrollment_date\",
           COALESCE(ipv.date_created, '01-01-0001 00:00:00' ) AS \"date_created\",
           pi.\"Patient_Identifier\"                             AS \"Patient_Identifier\",
           CASE
               WHEN ipv_form_has_partner_ever_threatened_to_hurt_you = 'Yes' THEN 1
               WHEN ipv_form_has_partner_ever_threatened_to_hurt_you = 'No' THEN 0
               ELSE NULL
               END :: boolean AS \"Has partner ever threatened to hurt you?\",
           CASE
               WHEN ipv_form_partner_ever_physically_hurt_you = 'Yes' THEN 1
               WHEN ipv_form_partner_ever_physically_hurt_you = 'No' THEN 0
               ELSE NULL
               END :: boolean AS \"Partner ever physically hurt you?\",
           CASE
               WHEN ipv_form_partner_ever_sexually_abused_you = 'Yes' THEN 1
               WHEN ipv_form_partner_ever_sexually_abused_you = 'No' THEN 0
               ELSE NULL
               END :: boolean AS \"Partner ever sexually abused you?\",
           CASE
               WHEN ipv_form_partner_ever_threatened_you = 'Yes' THEN 1
               WHEN ipv_form_partner_ever_threatened_you = 'No' THEN 0
               ELSE NULL
               END :: boolean AS \"Partner ever threatened you?\",
           CASE
               WHEN ipv_form_partner_ever_threatened_to_kill_you = 'Yes' THEN 1
               WHEN ipv_form_partner_ever_threatened_to_kill_you = 'No' THEN 0
               ELSE NULL
               END :: boolean AS \"Partner ever threatened to Kill you?\"
               FROM     ipv_template ipv
               INNER JOIN      patient_encounter_table pedd
                                                   ON              pedd.encounter_id = ipv.encounter_id
               INNER JOIN psi_patient_program_data ppv
                          ON         ppv.patient_id = ipv.patient_id AND ppv.program_id = ipv.program_id
               INNER JOIN patient_identifier pi
                          ON         ipv.patient_id = pi.patient_id
ORDER BY   date_created DESC"
  },
    {
      "name": "tb_program_events_table",
      "sql": "select
      'vatFxlZR2lj':: TEXT AS program,
      'TB_STAGE':: TEXT AS program_stage,
      CASE WHEN tb_history_form_template_site_type = 'Outreach'  THEN
      concat('ZWNSC-OU-',upper(COALESCE(tb_history_form_template_facility,(SELECT tb_history_form_template_facility
      FROM tb_history_form_template
      WHERE tb_history_form_template_facility IS NOT NULL
      AND patient_id = tbform_1.patient_id
      ORDER BY encounter_id DESC
      LIMIT 1))),'-',upper(tb_history_form_template_district))
      ELSE
      concat('ZWNSC-',upper(COALESCE(tb_history_form_template_facility,(SELECT tb_history_form_template_facility
      FROM tb_history_form_template
      WHERE tb_history_form_template_facility IS NOT NULL
      AND patient_id = tbform_1.patient_id
      ORDER BY encounter_id DESC
      LIMIT 1))))
      END AS \"OrgUnit\",
      tbform_1.obs_datetime  as \"event_date\",
      'COMPLETED' :: TEXT AS status,
      COALESCE (tbform_1.visit_id) AS \"event_unique_id\",
      ppv.patient_program_id as \"patient_program_id\",
      DATE(ppv.\"date_enrolled\") AS \"enrollment_date\",
      tbform_1.date_created as  \"date_created\",
      pi.\"Patient_Identifier\" AS \"Patient_Identifier\",

      tb_history_form_template_facility AS \"[TB Screening & History] Facility\",
      tb_history_form_template_site_type AS \"[TB Screening & History] Site type\",
      tb_history_form_template_district AS \"[TB Screening & History] District\",
      tb_history_form_template_setting AS \"[TB Screening & History] Setting\",
      tb_history_form_template_type_of_visit AS \"[TB Screening & History] Type of Visit\",
      tb_history_form_template_type_of_client AS \"[TB Screening & History] Type of Client\",
      tb_history_form_template_ipt_start_date AS \"[TB Screening & History] IPT start date\",
      tb_history_form_template_ipt_completion_date AS \"[TB Screening & History] IPT completion date\",
      tb_history_form_template_reason_for_not_completing_ipt AS \"[TB Screening & History] Reason for not completing IPT\",
      tb_history_form_template_art_status AS \"[TB Screening & History] ART Status\",
      tb_history_form_template_where_is_client_getting_medication AS \"[TB Screening & History] Where is client getting medication\",
      tb_history_form_template_are_you_on_art AS \"[TB Screening & History] Are you on ART?\",
      tb_history_form_template_gene_xpert_results AS \"[TB Screening & History] Gene Xpert Results\",
      tb_history_form_template_screening_method_used_today AS \"[TB Screening & History] Screening method used today\",
      tb_history_form_template_smear_microscopy_results AS \"[TB Screening & History] Smear (Microscopy) results\",
      tb_history_form_template_specify_method_used AS \"[TB Screening & History] Specify method used\",
      tb_history_form_template_xray_results AS \"[TB Screening & History] Xray results\",
      tb_history_form_template_type_of_tb_case AS \"[TB Screening & History] Type of TB case\",
      tb_history_form_template_date_of_last_tb_treatment AS \"[TB Screening & History] Date of last TB treatment\",
      tb_history_form_template_treatment_outcome AS \"[TB Screening & History] Treatment outcome\",
      tb_history_form_template_course_completion_outcomes AS \"[TB Screening & History] Course completion outcomes\",
      tb_history_form_template_hiv_status AS  \"[TB Screening & History] HIV Status\",
      tb_history_form_template_rif_resistance AS \"[TB Screening & History] RIF Resistance\",

      CASE
      WHEN tb_history_form_template_did_you_complete_ipt = 'Yes' THEN 1
      WHEN tb_history_form_template_did_you_complete_ipt = 'No' THEN 0
      ELSE NULL
      END :: boolean AS \"[TB Screening & History] Did you complete IPT?\"

      FROM
      (SELECT
      DISTINCT visit_id ,
      FIRST_VALUE(tbform.obs_datetime)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN tbform.obs_datetime IS NULL THEN 0 ELSE 1 END DESC, tbform.encounter_id DESC) AS obs_datetime,
      FIRST_VALUE(tbform.patient_id)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN tbform.patient_id IS NULL THEN 0 ELSE 1 END DESC, tbform.encounter_id DESC) AS patient_id,
      FIRST_VALUE(tbform.date_created)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN tbform.date_created IS NULL THEN 0 ELSE 1 END DESC, tbform.encounter_id DESC) AS date_created,
      FIRST_VALUE(tbform.program_id)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN tbform.program_id IS NULL THEN 0 ELSE 1 END DESC, tbform.encounter_id DESC) AS program_id,
      FIRST_VALUE(tbform.program_name)
      OVER(PARTITION BY visit_id ORDER BY CASE WHEN tbform.program_name IS NULL THEN 0 ELSE 1 END DESC, tbform.encounter_id DESC) AS program_name,

      first_value(tbform.tb_history_form_template_facility) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_facility IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_facility,
      first_value(tbform.tb_history_form_template_site_type) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_site_type IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_site_type,
      first_value(tbform.tb_history_form_template_district) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_district IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_district,
      first_value(tbform.tb_history_form_template_setting) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_setting IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_setting,
      first_value(tbform.tb_history_form_template_type_of_visit) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_type_of_visit IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_type_of_visit,
      first_value(tbform.tb_history_form_template_type_of_client) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_type_of_client IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_type_of_client,
      first_value(tbform.tb_history_form_template_ipt_start_date) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_ipt_start_date IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_ipt_start_date,
      first_value(tbform.tb_history_form_template_did_you_complete_ipt) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_did_you_complete_ipt IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_did_you_complete_ipt,
      first_value(tbform.tb_history_form_template_ipt_completion_date) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_ipt_completion_date IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_ipt_completion_date,
      first_value(tbform.tb_history_form_template_reason_for_not_completing_ipt) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_reason_for_not_completing_ipt IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_reason_for_not_completing_ipt,
      first_value(tbform.tb_history_form_template_hiv_status) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_hiv_status IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_hiv_status,
      first_value(tbform.tb_history_form_template_art_status) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_art_status IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_art_status,
      first_value(tbform.tb_history_form_template_where_is_client_getting_medication) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_where_is_client_getting_medication IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_where_is_client_getting_medication,
      first_value(tbform.tb_history_form_template_are_you_on_art) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_are_you_on_art IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_are_you_on_art,
      first_value(tbform.tb_history_form_template_gene_xpert_results) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_gene_xpert_results IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_gene_xpert_results,
      first_value(tbform.tb_history_form_template_rif_resistance) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_rif_resistance IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_rif_resistance,
      first_value(tbform.tb_history_form_template_screening_method_used_today) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_screening_method_used_today IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_screening_method_used_today,
      first_value(tbform.tb_history_form_template_smear_microscopy_results) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_smear_microscopy_results IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_smear_microscopy_results,
      first_value(tbform.tb_history_form_template_specify_method_used) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_specify_method_used IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_specify_method_used,
      first_value(tbform.tb_history_form_template_xray_results) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_xray_results IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_xray_results,
      first_value(tbform.tb_history_form_template_type_of_tb_case) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_type_of_tb_case IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_type_of_tb_case,
      first_value(tbform.tb_history_form_template_date_of_last_tb_treatment) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_date_of_last_tb_treatment IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_date_of_last_tb_treatment,
      first_value(tbform.tb_history_form_template_treatment_outcome) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_treatment_outcome IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_treatment_outcome,
      first_value(tbform.tb_history_form_template_course_completion_outcomes) OVER(partition BY visit_id ORDER BY
      CASE
      WHEN tb_history_form_template_course_completion_outcomes IS NULL THEN 0
      ELSE 1
      END DESC, tbform.encounter_id DESC) AS tb_history_form_template_course_completion_outcomes

      FROM
      (SELECT
      encounter_id,
      max(patient_id) AS patient_id ,
      max(obs_datetime) AS obs_datetime,
      max(date_created) AS date_created,
      max(program_id) AS program_id,
      max(program_name) AS program_name,

      max(tb_history_form_template_facility)      AS tb_history_form_template_facility,
      max(tb_history_form_template_site_type)      AS tb_history_form_template_site_type,
      max(tb_history_form_template_district)      AS tb_history_form_template_district,
      max(tb_history_form_template_setting)      AS tb_history_form_template_setting,
      max(tb_history_form_template_type_of_visit)      AS tb_history_form_template_type_of_visit,
      max(tb_history_form_template_type_of_client)      AS tb_history_form_template_type_of_client,
      max(tb_history_form_template_ipt_start_date)      AS tb_history_form_template_ipt_start_date,
      max(tb_history_form_template_did_you_complete_ipt)      AS tb_history_form_template_did_you_complete_ipt,
      max(tb_history_form_template_ipt_completion_date)      AS tb_history_form_template_ipt_completion_date,
      max(tb_history_form_template_reason_for_not_completing_ipt)      AS tb_history_form_template_reason_for_not_completing_ipt,
      max(tb_history_form_template_hiv_status)      AS tb_history_form_template_hiv_status,
      max(tb_history_form_template_art_status)      AS tb_history_form_template_art_status,
      max(tb_history_form_template_where_is_client_getting_medication)      AS tb_history_form_template_where_is_client_getting_medication,
      max(tb_history_form_template_are_you_on_art)      AS tb_history_form_template_are_you_on_art,
      max(tb_history_form_template_gene_xpert_results)      AS tb_history_form_template_gene_xpert_results,
      max(tb_history_form_template_rif_resistance)      AS tb_history_form_template_rif_resistance,
      max(tb_history_form_template_screening_method_used_today)      AS tb_history_form_template_screening_method_used_today,
      max(tb_history_form_template_smear_microscopy_results)      AS tb_history_form_template_smear_microscopy_results,
      max(tb_history_form_template_specify_method_used)      AS tb_history_form_template_specify_method_used,
      max(tb_history_form_template_xray_results)      AS tb_history_form_template_xray_results,
      max(tb_history_form_template_type_of_tb_case)      AS tb_history_form_template_type_of_tb_case,
      max(tb_history_form_template_date_of_last_tb_treatment)      AS tb_history_form_template_date_of_last_tb_treatment,
      max(tb_history_form_template_treatment_outcome)      AS tb_history_form_template_treatment_outcome,
      max(tb_history_form_template_course_completion_outcomes)      AS tb_history_form_template_course_completion_outcomes

      FROM tb_history_form_template tbform GROUP BY encounter_id) AS tbform
      INNER JOIN patient_encounter_table pedd ON pedd.encounter_id = tbform.encounter_id) tbform_1
      INNER JOIN psi_patient_program_data ppv on ppv.patient_id = tbform_1.patient_id and (ppv.program_id = (SELECT program_id FROM programs_default WHERE program_name= 'TB Program'))
      INNER JOIN patient_identifier pi ON tbform_1.patient_id = pi.patient_id
      ORDER BY date_created DESC"
    }
  ]
}
